<<<<<<< HEAD
define(['dart_sdk', 'packages/collection/src/comparators.dart'], (function load__packages__collection__src__equality_dart(dart_sdk, packages__collection__src__comparators$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const comparators = packages__collection__src__comparators$46dart.src__comparators;
  var equality = Object.create(dart.library);
  var $hashCode = dartx.hashCode;
  var $iterator = dartx.iterator;
  var $rightShift = dartx['>>'];
  var $length = dartx.length;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $keys = dartx.keys;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    DefaultEqualityOfNever: () => (T.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    LinkedMapOf_MapEntry$int: () => (T.LinkedMapOf_MapEntry$int = dart.constFn(_js_helper.LinkedMap$(equality._MapEntry, core.int)))()
=======
define(['dart_sdk', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/material/progress_indicator.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/liquid_progress_indicator/src/wave.dart', 'packages/flutter/src/rendering/custom_paint.dart', 'packages/flutter/src/rendering/proxy_box.dart'], (function load__packages__liquid_progress_indicator__src__liquid_custom_progress_indicator_dart(dart_sdk, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__material__progress_indicator$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__basic_types$46dart, packages__liquid_progress_indicator__src__wave$46dart, packages__flutter__src__rendering__custom_paint$46dart, packages__flutter__src__rendering__proxy_box$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const theme = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const progress_indicator = packages__flutter__src__material__progress_indicator$46dart.src__material__progress_indicator;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const wave = packages__liquid_progress_indicator__src__wave$46dart.src__wave;
  const custom_paint = packages__flutter__src__rendering__custom_paint$46dart.src__rendering__custom_paint;
  const proxy_box = packages__flutter__src__rendering__proxy_box$46dart.src__rendering__proxy_box;
  var liquid_custom_progress_indicator = Object.create(dart.library);
  var $add = dartx.add;
  var $_equals = dartx._equals;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    CustomClipperOfPath: () => (T.CustomClipperOfPath = dart.constFn(proxy_box.CustomClipper$(ui.Path)))()
>>>>>>> AUg2
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
<<<<<<< HEAD
    get C0() {
      return C[0] = dart.const({
        __proto__: T.DefaultEqualityOfNever().prototype
      });
    }
  }, false);
  var C = [void 0];
  var I = ["package:collection/src/equality.dart"];
  const _is_Equality_default = Symbol('_is_Equality_default');
  equality.Equality$ = dart.generic(E => {
    class Equality extends core.Object {}
    (Equality[dart.mixinNew] = function() {
    }).prototype = Equality.prototype;
    dart.addTypeTests(Equality);
    Equality.prototype[_is_Equality_default] = true;
    dart.addTypeCaches(Equality);
    dart.setLibraryUri(Equality, I[0]);
    return Equality;
  });
  equality.Equality = equality.Equality$();
  dart.addTypeTests(equality.Equality, _is_Equality_default);
  var _comparisonKey = dart.privateName(equality, "_comparisonKey");
  var _inner = dart.privateName(equality, "_inner");
  const _is_EqualityBy_default = Symbol('_is_EqualityBy_default');
  equality.EqualityBy$ = dart.generic((E, F) => {
    class EqualityBy extends core.Object {
      equals(e1, e2) {
        let t0, t0$;
        E.as(e1);
        E.as(e2);
        return this[_inner].equals((t0 = e1, this[_comparisonKey](t0)), (t0$ = e2, this[_comparisonKey](t0$)));
      }
      hash(e) {
        let t0;
        E.as(e);
        return this[_inner].hash((t0 = e, this[_comparisonKey](t0)));
      }
      isValidKey(o) {
        let t0;
        if (E.is(o)) {
          let value = (t0 = o, this[_comparisonKey](t0));
          return F.is(value) && this[_inner].isValidKey(value);
        }
        return false;
      }
    }
    (EqualityBy.new = function(comparisonKey, inner = C[0] || CT.C0) {
      this[_comparisonKey] = comparisonKey;
      this[_inner] = inner;
      ;
    }).prototype = EqualityBy.prototype;
    dart.addTypeTests(EqualityBy);
    EqualityBy.prototype[_is_EqualityBy_default] = true;
    dart.addTypeCaches(EqualityBy);
    EqualityBy[dart.implements] = () => [equality.Equality$(E)];
    dart.setMethodSignature(EqualityBy, () => ({
      __proto__: dart.getMethods(EqualityBy.__proto__),
      equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
      hash: dart.fnType(core.int, [dart.nullable(core.Object)]),
      isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(EqualityBy, I[0]);
    dart.setFieldSignature(EqualityBy, () => ({
      __proto__: dart.getFields(EqualityBy.__proto__),
      [_comparisonKey]: dart.finalFieldType(dart.fnType(F, [E])),
      [_inner]: dart.finalFieldType(equality.Equality$(F))
    }));
    return EqualityBy;
  });
  equality.EqualityBy = equality.EqualityBy$();
  dart.addTypeTests(equality.EqualityBy, _is_EqualityBy_default);
  const _is_DefaultEquality_default = Symbol('_is_DefaultEquality_default');
  equality.DefaultEquality$ = dart.generic(E => {
    class DefaultEquality extends core.Object {
      equals(e1, e2) {
        return dart.equals(e1, e2);
      }
      hash(e) {
        return dart.hashCode(e);
      }
      isValidKey(o) {
        return true;
      }
    }
    (DefaultEquality.new = function() {
      ;
    }).prototype = DefaultEquality.prototype;
    dart.addTypeTests(DefaultEquality);
    DefaultEquality.prototype[_is_DefaultEquality_default] = true;
    dart.addTypeCaches(DefaultEquality);
    DefaultEquality[dart.implements] = () => [equality.Equality$(E)];
    dart.setMethodSignature(DefaultEquality, () => ({
      __proto__: dart.getMethods(DefaultEquality.__proto__),
      equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
      hash: dart.fnType(core.int, [dart.nullable(core.Object)]),
      isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(DefaultEquality, I[0]);
    return DefaultEquality;
  });
  equality.DefaultEquality = equality.DefaultEquality$();
  dart.addTypeTests(equality.DefaultEquality, _is_DefaultEquality_default);
  const _is_IdentityEquality_default = Symbol('_is_IdentityEquality_default');
  equality.IdentityEquality$ = dart.generic(E => {
    class IdentityEquality extends core.Object {
      equals(e1, e2) {
        E.as(e1);
        E.as(e2);
        return core.identical(e1, e2);
      }
      hash(e) {
        E.as(e);
        return core.identityHashCode(e);
      }
      isValidKey(o) {
        return true;
      }
    }
    (IdentityEquality.new = function() {
      ;
    }).prototype = IdentityEquality.prototype;
    dart.addTypeTests(IdentityEquality);
    IdentityEquality.prototype[_is_IdentityEquality_default] = true;
    dart.addTypeCaches(IdentityEquality);
    IdentityEquality[dart.implements] = () => [equality.Equality$(E)];
    dart.setMethodSignature(IdentityEquality, () => ({
      __proto__: dart.getMethods(IdentityEquality.__proto__),
      equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
      hash: dart.fnType(core.int, [dart.nullable(core.Object)]),
      isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(IdentityEquality, I[0]);
    return IdentityEquality;
  });
  equality.IdentityEquality = equality.IdentityEquality$();
  dart.addTypeTests(equality.IdentityEquality, _is_IdentityEquality_default);
  var _elementEquality = dart.privateName(equality, "IterableEquality._elementEquality");
  var _elementEquality$ = dart.privateName(equality, "_elementEquality");
  const _is_IterableEquality_default = Symbol('_is_IterableEquality_default');
  equality.IterableEquality$ = dart.generic(E => {
    var IterableOfE = () => (IterableOfE = dart.constFn(core.Iterable$(E)))();
    var IterableNOfE = () => (IterableNOfE = dart.constFn(dart.nullable(IterableOfE())))();
    class IterableEquality extends core.Object {
      get [_elementEquality$]() {
        return this[_elementEquality];
      }
      set [_elementEquality$](value) {
        super[_elementEquality$] = value;
      }
      equals(elements1, elements2) {
        IterableNOfE().as(elements1);
        IterableNOfE().as(elements2);
        if (elements1 == elements2) return true;
        if (elements1 == null || elements2 == null) return false;
        let it1 = elements1[$iterator];
        let it2 = elements2[$iterator];
        while (true) {
          let hasNext = it1.moveNext();
          if (hasNext !== it2.moveNext()) return false;
          if (!hasNext) return true;
          if (!this[_elementEquality$].equals(it1.current, it2.current)) return false;
        }
      }
      hash(elements) {
        IterableNOfE().as(elements);
        if (elements == null) return dart.hashCode(null);
        let hash = 0;
        for (let element of elements) {
          let c = this[_elementEquality$].hash(element);
          hash = (hash + c & 2147483647) >>> 0;
          hash = (hash + (hash << 10 >>> 0) & 2147483647) >>> 0;
          hash = (hash ^ hash[$rightShift](6)) >>> 0;
        }
        hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](11)) >>> 0;
        hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
        return hash;
      }
      isValidKey(o) {
        return IterableOfE().is(o);
      }
    }
    (IterableEquality.new = function(elementEquality = C[0] || CT.C0) {
      this[_elementEquality] = elementEquality;
      ;
    }).prototype = IterableEquality.prototype;
    dart.addTypeTests(IterableEquality);
    IterableEquality.prototype[_is_IterableEquality_default] = true;
    dart.addTypeCaches(IterableEquality);
    IterableEquality[dart.implements] = () => [equality.Equality$(core.Iterable$(E))];
    dart.setMethodSignature(IterableEquality, () => ({
      __proto__: dart.getMethods(IterableEquality.__proto__),
      equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
      hash: dart.fnType(core.int, [dart.nullable(core.Object)]),
      isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(IterableEquality, I[0]);
    dart.setFieldSignature(IterableEquality, () => ({
      __proto__: dart.getFields(IterableEquality.__proto__),
      [_elementEquality$]: dart.finalFieldType(equality.Equality$(dart.nullable(E)))
    }));
    return IterableEquality;
  });
  equality.IterableEquality = equality.IterableEquality$();
  dart.addTypeTests(equality.IterableEquality, _is_IterableEquality_default);
  var _elementEquality$0 = dart.privateName(equality, "ListEquality._elementEquality");
  const _is_ListEquality_default = Symbol('_is_ListEquality_default');
  equality.ListEquality$ = dart.generic(E => {
    var ListOfE = () => (ListOfE = dart.constFn(core.List$(E)))();
    var ListNOfE = () => (ListNOfE = dart.constFn(dart.nullable(ListOfE())))();
    class ListEquality extends core.Object {
      get [_elementEquality$]() {
        return this[_elementEquality$0];
      }
      set [_elementEquality$](value) {
        super[_elementEquality$] = value;
      }
      equals(list1, list2) {
        ListNOfE().as(list1);
        ListNOfE().as(list2);
        if (list1 == list2) return true;
        if (list1 == null || list2 == null) return false;
        let length = list1[$length];
        if (length !== list2[$length]) return false;
        for (let i = 0; i < length; i = i + 1) {
          if (!this[_elementEquality$].equals(list1[$_get](i), list2[$_get](i))) return false;
        }
        return true;
      }
      hash(list) {
        ListNOfE().as(list);
        if (list == null) return dart.hashCode(null);
        let hash = 0;
        for (let i = 0; i < list[$length]; i = i + 1) {
          let c = this[_elementEquality$].hash(list[$_get](i));
          hash = (hash + c & 2147483647) >>> 0;
          hash = (hash + (hash << 10 >>> 0) & 2147483647) >>> 0;
          hash = (hash ^ hash[$rightShift](6)) >>> 0;
        }
        hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](11)) >>> 0;
        hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
        return hash;
      }
      isValidKey(o) {
        return ListOfE().is(o);
      }
    }
    (ListEquality.new = function(elementEquality = C[0] || CT.C0) {
      this[_elementEquality$0] = elementEquality;
      ;
    }).prototype = ListEquality.prototype;
    dart.addTypeTests(ListEquality);
    ListEquality.prototype[_is_ListEquality_default] = true;
    dart.addTypeCaches(ListEquality);
    ListEquality[dart.implements] = () => [equality.Equality$(core.List$(E))];
    dart.setMethodSignature(ListEquality, () => ({
      __proto__: dart.getMethods(ListEquality.__proto__),
      equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
      hash: dart.fnType(core.int, [dart.nullable(core.Object)]),
      isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(ListEquality, I[0]);
    dart.setFieldSignature(ListEquality, () => ({
      __proto__: dart.getFields(ListEquality.__proto__),
      [_elementEquality$]: dart.finalFieldType(equality.Equality$(E))
    }));
    return ListEquality;
  });
  equality.ListEquality = equality.ListEquality$();
  dart.addTypeTests(equality.ListEquality, _is_ListEquality_default);
  var _elementEquality$1 = dart.privateName(equality, "_UnorderedEquality._elementEquality");
  const _is__UnorderedEquality_default = Symbol('_is__UnorderedEquality_default');
  equality._UnorderedEquality$ = dart.generic((E, T) => {
    var HashMapOfE$dynamic = () => (HashMapOfE$dynamic = dart.constFn(collection.HashMap$(E, dart.dynamic)))();
    class _UnorderedEquality extends core.Object {
      get [_elementEquality$]() {
        return this[_elementEquality$1];
      }
      set [_elementEquality$](value) {
        super[_elementEquality$] = value;
      }
      equals(elements1, elements2) {
        let t0;
        T.as(elements1);
        T.as(elements2);
        if (elements1 == elements2) return true;
        if (elements1 == null || elements2 == null) return false;
        let counts = HashMapOfE$dynamic().new({equals: dart.bind(this[_elementEquality$], 'equals'), hashCode: dart.bind(this[_elementEquality$], 'hash'), isValidKey: dart.bind(this[_elementEquality$], 'isValidKey')});
        let length = 0;
        for (let e of elements1) {
          let count = (t0 = counts[$_get](e), t0 == null ? 0 : t0);
          counts[$_set](e, dart.dsend(count, '+', [1]));
          length = length + 1;
        }
        for (let e of elements2) {
          let count = counts[$_get](e);
          if (count == null || dart.equals(count, 0)) return false;
          counts[$_set](e, dart.dsend(count, '-', [1]));
          length = length - 1;
        }
        return length === 0;
      }
      hash(elements) {
        T.as(elements);
        if (elements == null) return dart.hashCode(null);
        let hash = 0;
        for (let element of elements) {
          let c = this[_elementEquality$].hash(element);
          hash = (hash + c & 2147483647) >>> 0;
        }
        hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](11)) >>> 0;
        hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
        return hash;
      }
    }
    (_UnorderedEquality.new = function(_elementEquality) {
      this[_elementEquality$1] = _elementEquality;
      ;
    }).prototype = _UnorderedEquality.prototype;
    dart.addTypeTests(_UnorderedEquality);
    _UnorderedEquality.prototype[_is__UnorderedEquality_default] = true;
    dart.addTypeCaches(_UnorderedEquality);
    _UnorderedEquality[dart.implements] = () => [equality.Equality$(T)];
    dart.setMethodSignature(_UnorderedEquality, () => ({
      __proto__: dart.getMethods(_UnorderedEquality.__proto__),
      equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
      hash: dart.fnType(core.int, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(_UnorderedEquality, I[0]);
    dart.setFieldSignature(_UnorderedEquality, () => ({
      __proto__: dart.getFields(_UnorderedEquality.__proto__),
      [_elementEquality$]: dart.finalFieldType(equality.Equality$(E))
    }));
    return _UnorderedEquality;
  });
  equality._UnorderedEquality = equality._UnorderedEquality$();
  dart.addTypeTests(equality._UnorderedEquality, _is__UnorderedEquality_default);
  const _is_UnorderedIterableEquality_default = Symbol('_is_UnorderedIterableEquality_default');
  equality.UnorderedIterableEquality$ = dart.generic(E => {
    var IterableOfE = () => (IterableOfE = dart.constFn(core.Iterable$(E)))();
    class UnorderedIterableEquality extends equality._UnorderedEquality$(E, dart.nullable(core.Iterable$(E))) {
      isValidKey(o) {
        return IterableOfE().is(o);
      }
    }
    (UnorderedIterableEquality.new = function(elementEquality = C[0] || CT.C0) {
      UnorderedIterableEquality.__proto__.new.call(this, elementEquality);
      ;
    }).prototype = UnorderedIterableEquality.prototype;
    dart.addTypeTests(UnorderedIterableEquality);
    UnorderedIterableEquality.prototype[_is_UnorderedIterableEquality_default] = true;
    dart.addTypeCaches(UnorderedIterableEquality);
    dart.setMethodSignature(UnorderedIterableEquality, () => ({
      __proto__: dart.getMethods(UnorderedIterableEquality.__proto__),
      isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(UnorderedIterableEquality, I[0]);
    return UnorderedIterableEquality;
  });
  equality.UnorderedIterableEquality = equality.UnorderedIterableEquality$();
  dart.addTypeTests(equality.UnorderedIterableEquality, _is_UnorderedIterableEquality_default);
  const _is_SetEquality_default = Symbol('_is_SetEquality_default');
  equality.SetEquality$ = dart.generic(E => {
    var SetOfE = () => (SetOfE = dart.constFn(core.Set$(E)))();
    class SetEquality extends equality._UnorderedEquality$(E, dart.nullable(core.Set$(E))) {
      isValidKey(o) {
        return SetOfE().is(o);
      }
    }
    (SetEquality.new = function(elementEquality = C[0] || CT.C0) {
      SetEquality.__proto__.new.call(this, elementEquality);
      ;
    }).prototype = SetEquality.prototype;
    dart.addTypeTests(SetEquality);
    SetEquality.prototype[_is_SetEquality_default] = true;
    dart.addTypeCaches(SetEquality);
    dart.setMethodSignature(SetEquality, () => ({
      __proto__: dart.getMethods(SetEquality.__proto__),
      isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(SetEquality, I[0]);
    return SetEquality;
  });
  equality.SetEquality = equality.SetEquality$();
  dart.addTypeTests(equality.SetEquality, _is_SetEquality_default);
  var _keyEquality = dart.privateName(equality, "_keyEquality");
  var _valueEquality = dart.privateName(equality, "_valueEquality");
  equality._MapEntry = class _MapEntry extends core.Object {
    get hashCode() {
      return (3 * this.equality[_keyEquality].hash(this.key) + 7 * this.equality[_valueEquality].hash(this.value) & 2147483647) >>> 0;
    }
    _equals(other) {
      if (other == null) return false;
      return equality._MapEntry.is(other) && this.equality[_keyEquality].equals(this.key, other.key) && this.equality[_valueEquality].equals(this.value, other.value);
    }
  };
  (equality._MapEntry.new = function(equality, key, value) {
    this.equality = equality;
    this.key = key;
    this.value = value;
    ;
  }).prototype = equality._MapEntry.prototype;
  dart.addTypeTests(equality._MapEntry);
  dart.addTypeCaches(equality._MapEntry);
  dart.setLibraryUri(equality._MapEntry, I[0]);
  dart.setFieldSignature(equality._MapEntry, () => ({
    __proto__: dart.getFields(equality._MapEntry.__proto__),
    equality: dart.finalFieldType(equality.MapEquality),
    key: dart.finalFieldType(dart.dynamic),
    value: dart.finalFieldType(dart.dynamic)
  }));
  dart.defineExtensionMethods(equality._MapEntry, ['_equals']);
  dart.defineExtensionAccessors(equality._MapEntry, ['hashCode']);
  var _keyEquality$ = dart.privateName(equality, "MapEquality._keyEquality");
  var _valueEquality$ = dart.privateName(equality, "MapEquality._valueEquality");
  const _is_MapEquality_default = Symbol('_is_MapEquality_default');
  equality.MapEquality$ = dart.generic((K, V) => {
    var MapOfK$V = () => (MapOfK$V = dart.constFn(core.Map$(K, V)))();
    var MapNOfK$V = () => (MapNOfK$V = dart.constFn(dart.nullable(MapOfK$V())))();
    class MapEquality extends core.Object {
      get [_keyEquality]() {
        return this[_keyEquality$];
      }
      set [_keyEquality](value) {
        super[_keyEquality] = value;
      }
      get [_valueEquality]() {
        return this[_valueEquality$];
      }
      set [_valueEquality](value) {
        super[_valueEquality] = value;
      }
      equals(map1, map2) {
        let t0;
        MapNOfK$V().as(map1);
        MapNOfK$V().as(map2);
        if (map1 == map2) return true;
        if (map1 == null || map2 == null) return false;
        let length = map1[$length];
        if (length !== map2[$length]) return false;
        let equalElementCounts = new (T.LinkedMapOf_MapEntry$int()).new();
        for (let key of map1[$keys]) {
          let entry = new equality._MapEntry.new(this, key, map1[$_get](key));
          let count = (t0 = equalElementCounts[$_get](entry), t0 == null ? 0 : t0);
          equalElementCounts[$_set](entry, count + 1);
        }
        for (let key of map2[$keys]) {
          let entry = new equality._MapEntry.new(this, key, map2[$_get](key));
          let count = equalElementCounts[$_get](entry);
          if (count == null || count === 0) return false;
          equalElementCounts[$_set](entry, dart.notNull(count) - 1);
        }
        return true;
      }
      hash(map) {
        MapNOfK$V().as(map);
        if (map == null) return dart.hashCode(null);
        let hash = 0;
        for (let key of map[$keys]) {
          let keyHash = this[_keyEquality].hash(key);
          let valueHash = this[_valueEquality].hash(V.as(map[$_get](key)));
          hash = (hash + 3 * keyHash + 7 * valueHash & 2147483647) >>> 0;
        }
        hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](11)) >>> 0;
        hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
        return hash;
      }
      isValidKey(o) {
        return MapOfK$V().is(o);
      }
    }
    (MapEquality.new = function(opts) {
      let keys = opts && 'keys' in opts ? opts.keys : C[0] || CT.C0;
      let values = opts && 'values' in opts ? opts.values : C[0] || CT.C0;
      this[_keyEquality$] = keys;
      this[_valueEquality$] = values;
      ;
    }).prototype = MapEquality.prototype;
    dart.addTypeTests(MapEquality);
    MapEquality.prototype[_is_MapEquality_default] = true;
    dart.addTypeCaches(MapEquality);
    MapEquality[dart.implements] = () => [equality.Equality$(core.Map$(K, V))];
    dart.setMethodSignature(MapEquality, () => ({
      __proto__: dart.getMethods(MapEquality.__proto__),
      equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
      hash: dart.fnType(core.int, [dart.nullable(core.Object)]),
      isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(MapEquality, I[0]);
    dart.setFieldSignature(MapEquality, () => ({
      __proto__: dart.getFields(MapEquality.__proto__),
      [_keyEquality]: dart.finalFieldType(equality.Equality$(K)),
      [_valueEquality]: dart.finalFieldType(equality.Equality$(V))
    }));
    return MapEquality;
  });
  equality.MapEquality = equality.MapEquality$();
  dart.addTypeTests(equality.MapEquality, _is_MapEquality_default);
  var _equalities = dart.privateName(equality, "MultiEquality._equalities");
  var _equalities$ = dart.privateName(equality, "_equalities");
  const _is_MultiEquality_default = Symbol('_is_MultiEquality_default');
  equality.MultiEquality$ = dart.generic(E => {
    class MultiEquality extends core.Object {
      get [_equalities$]() {
        return this[_equalities];
      }
      set [_equalities$](value) {
        super[_equalities$] = value;
      }
      equals(e1, e2) {
        E.as(e1);
        E.as(e2);
        for (let eq of this[_equalities$]) {
          if (eq.isValidKey(e1)) return eq.isValidKey(e2) && eq.equals(e1, e2);
        }
        return false;
      }
      hash(e) {
        E.as(e);
        for (let eq of this[_equalities$]) {
          if (eq.isValidKey(e)) return eq.hash(e);
        }
        return 0;
      }
      isValidKey(o) {
        for (let eq of this[_equalities$]) {
          if (eq.isValidKey(o)) return true;
        }
        return false;
      }
    }
    (MultiEquality.new = function(equalities) {
      this[_equalities] = equalities;
      ;
    }).prototype = MultiEquality.prototype;
    dart.addTypeTests(MultiEquality);
    MultiEquality.prototype[_is_MultiEquality_default] = true;
    dart.addTypeCaches(MultiEquality);
    MultiEquality[dart.implements] = () => [equality.Equality$(E)];
    dart.setMethodSignature(MultiEquality, () => ({
      __proto__: dart.getMethods(MultiEquality.__proto__),
      equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
      hash: dart.fnType(core.int, [dart.nullable(core.Object)]),
      isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(MultiEquality, I[0]);
    dart.setFieldSignature(MultiEquality, () => ({
      __proto__: dart.getFields(MultiEquality.__proto__),
      [_equalities$]: dart.finalFieldType(core.Iterable$(equality.Equality$(E)))
    }));
    return MultiEquality;
  });
  equality.MultiEquality = equality.MultiEquality$();
  dart.addTypeTests(equality.MultiEquality, _is_MultiEquality_default);
  var _base = dart.privateName(equality, "DeepCollectionEquality._base");
  var _unordered = dart.privateName(equality, "DeepCollectionEquality._unordered");
  var _base$ = dart.privateName(equality, "_base");
  var _unordered$ = dart.privateName(equality, "_unordered");
  equality.DeepCollectionEquality = class DeepCollectionEquality extends core.Object {
    get [_base$]() {
      return this[_base];
    }
    set [_base$](value) {
      super[_base$] = value;
    }
    get [_unordered$]() {
      return this[_unordered];
    }
    set [_unordered$](value) {
      super[_unordered$] = value;
    }
    equals(e1, e2) {
      if (core.Set.is(e1)) {
        return core.Set.is(e2) && new equality.SetEquality.new(this).equals(e1, e2);
      }
      if (core.Map.is(e1)) {
        return core.Map.is(e2) && new equality.MapEquality.new({keys: this, values: this}).equals(e1, e2);
      }
      if (!this[_unordered$]) {
        if (core.List.is(e1)) {
          return core.List.is(e2) && new equality.ListEquality.new(this).equals(e1, e2);
        }
        if (core.Iterable.is(e1)) {
          return core.Iterable.is(e2) && new equality.IterableEquality.new(this).equals(e1, e2);
        }
      } else if (core.Iterable.is(e1)) {
        if (core.List.is(e1) !== core.List.is(e2)) return false;
        return core.Iterable.is(e2) && new equality.UnorderedIterableEquality.new(this).equals(e1, e2);
      }
      return this[_base$].equals(e1, e2);
    }
    hash(o) {
      if (core.Set.is(o)) return new equality.SetEquality.new(this).hash(o);
      if (core.Map.is(o)) return new equality.MapEquality.new({keys: this, values: this}).hash(o);
      if (!this[_unordered$]) {
        if (core.List.is(o)) return new equality.ListEquality.new(this).hash(o);
        if (core.Iterable.is(o)) return new equality.IterableEquality.new(this).hash(o);
      } else if (core.Iterable.is(o)) {
        return new equality.UnorderedIterableEquality.new(this).hash(o);
      }
      return this[_base$].hash(o);
    }
    isValidKey(o) {
      return core.Iterable.is(o) || core.Map.is(o) || this[_base$].isValidKey(o);
    }
  };
  (equality.DeepCollectionEquality.new = function(base = C[0] || CT.C0) {
    this[_base] = base;
    this[_unordered] = false;
    ;
  }).prototype = equality.DeepCollectionEquality.prototype;
  (equality.DeepCollectionEquality.unordered = function(base = C[0] || CT.C0) {
    this[_base] = base;
    this[_unordered] = true;
    ;
  }).prototype = equality.DeepCollectionEquality.prototype;
  dart.addTypeTests(equality.DeepCollectionEquality);
  dart.addTypeCaches(equality.DeepCollectionEquality);
  equality.DeepCollectionEquality[dart.implements] = () => [equality.Equality];
  dart.setMethodSignature(equality.DeepCollectionEquality, () => ({
    __proto__: dart.getMethods(equality.DeepCollectionEquality.__proto__),
    equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
    hash: dart.fnType(core.int, [dart.nullable(core.Object)]),
    isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(equality.DeepCollectionEquality, I[0]);
  dart.setFieldSignature(equality.DeepCollectionEquality, () => ({
    __proto__: dart.getFields(equality.DeepCollectionEquality.__proto__),
    [_base$]: dart.finalFieldType(equality.Equality),
    [_unordered$]: dart.finalFieldType(core.bool)
  }));
  equality.CaseInsensitiveEquality = class CaseInsensitiveEquality extends core.Object {
    equals(string1, string2) {
      core.String.as(string1);
      core.String.as(string2);
      return comparators.equalsIgnoreAsciiCase(string1, string2);
    }
    hash(string) {
      core.String.as(string);
      return comparators.hashIgnoreAsciiCase(string);
    }
    isValidKey(object) {
      return typeof object == 'string';
    }
  };
  (equality.CaseInsensitiveEquality.new = function() {
    ;
  }).prototype = equality.CaseInsensitiveEquality.prototype;
  dart.addTypeTests(equality.CaseInsensitiveEquality);
  dart.addTypeCaches(equality.CaseInsensitiveEquality);
  equality.CaseInsensitiveEquality[dart.implements] = () => [equality.Equality$(core.String)];
  dart.setMethodSignature(equality.CaseInsensitiveEquality, () => ({
    __proto__: dart.getMethods(equality.CaseInsensitiveEquality.__proto__),
    equals: dart.fnType(core.bool, [dart.nullable(core.Object), dart.nullable(core.Object)]),
    hash: dart.fnType(core.int, [dart.nullable(core.Object)]),
    isValidKey: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(equality.CaseInsensitiveEquality, I[0]);
  dart.defineLazy(equality, {
    /*equality._HASH_MASK*/get _HASH_MASK() {
      return 2147483647;
    }
  }, false);
  dart.trackLibraries("packages/collection/src/equality.dart", {
    "package:collection/src/equality.dart": equality
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["equality.dart"],"names":[],"mappings":"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","file":"../../../../../../../../packages/collection/src/equality.dart.lib.js"}');
  // Exports:
  return {
    src__equality: equality
  };
}));

//# sourceMappingURL=equality.dart.lib.js.map
=======
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "value",
        [_Location_column]: 19,
        [_Location_line]: 62,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 19,
        [_Location_line]: 63,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "direction",
        [_Location_column]: 19,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], widget_inspector._Location);
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 24,
        [_Location_line]: 61,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/.pub-cache/hosted/pub.dartlang.org/liquid_progress_indicator-0.4.0/lib/src/liquid_custom_progress_indicator.dart"
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "left",
        [_Location_column]: 17,
        [_Location_line]: 59,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "top",
        [_Location_column]: 17,
        [_Location_line]: 60,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 17,
        [_Location_line]: 61,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.constList([C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9], widget_inspector._Location);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[6] || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 58,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/.pub-cache/hosted/pub.dartlang.org/liquid_progress_indicator-0.4.0/lib/src/liquid_custom_progress_indicator.dart"
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 49,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.constList([C[12] || CT.C12], widget_inspector._Location);
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[11] || CT.C11,
        [_Location_name]: null,
        [_Location_column]: 42,
        [_Location_line]: 67,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/.pub-cache/hosted/pub.dartlang.org/liquid_progress_indicator-0.4.0/lib/src/liquid_custom_progress_indicator.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 13,
        [_Location_line]: 57,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.constList([C[15] || CT.C15], widget_inspector._Location);
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[14] || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 56,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/.pub-cache/hosted/pub.dartlang.org/liquid_progress_indicator-0.4.0/lib/src/liquid_custom_progress_indicator.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "painter",
        [_Location_column]: 11,
        [_Location_line]: 52,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 56,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.constList([C[18] || CT.C18, C[19] || CT.C19], widget_inspector._Location);
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[17] || CT.C17,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 51,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/.pub-cache/hosted/pub.dartlang.org/liquid_progress_indicator-0.4.0/lib/src/liquid_custom_progress_indicator.dart"
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipper",
        [_Location_column]: 9,
        [_Location_line]: 48,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 51,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.constList([C[22] || CT.C22, C[23] || CT.C23], widget_inspector._Location);
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[21] || CT.C21,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 47,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/.pub-cache/hosted/pub.dartlang.org/liquid_progress_indicator-0.4.0/lib/src/liquid_custom_progress_indicator.dart"
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 45,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 46,
        [_Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 47,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.constList([C[26] || CT.C26, C[27] || CT.C27, C[28] || CT.C28], widget_inspector._Location);
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[25] || CT.C25,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 44,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/.pub-cache/hosted/pub.dartlang.org/liquid_progress_indicator-0.4.0/lib/src/liquid_custom_progress_indicator.dart"
      });
    }
  }, false);
  var C = Array(29).fill(void 0);
  var I = ["package:liquid_progress_indicator/src/liquid_custom_progress_indicator.dart"];
  var center$ = dart.privateName(liquid_custom_progress_indicator, "LiquidCustomProgressIndicator.center");
  var direction$ = dart.privateName(liquid_custom_progress_indicator, "LiquidCustomProgressIndicator.direction");
  var shapePath$ = dart.privateName(liquid_custom_progress_indicator, "LiquidCustomProgressIndicator.shapePath");
  var _getBackgroundColor = dart.privateName(liquid_custom_progress_indicator, "_getBackgroundColor");
  var _getValueColor = dart.privateName(liquid_custom_progress_indicator, "_getValueColor");
  liquid_custom_progress_indicator.LiquidCustomProgressIndicator = class LiquidCustomProgressIndicator extends progress_indicator.ProgressIndicator {
    get center() {
      return this[center$];
    }
    set center(value) {
      super.center = value;
    }
    get direction() {
      return this[direction$];
    }
    set direction(value) {
      super.direction = value;
    }
    get shapePath() {
      return this[shapePath$];
    }
    set shapePath(value) {
      super.shapePath = value;
    }
    [_getBackgroundColor](context) {
      let t0;
      t0 = this.backgroundColor;
      return t0 == null ? theme.Theme.of(context).backgroundColor : t0;
    }
    [_getValueColor](context) {
      let t0, t0$;
      t0$ = (t0 = this.valueColor, t0 == null ? null : t0.value);
      return t0$ == null ? theme.Theme.of(context).accentColor : t0$;
    }
    createState() {
      return new liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState.new();
    }
  };
  (liquid_custom_progress_indicator.LiquidCustomProgressIndicator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let value = opts && 'value' in opts ? opts.value : 0.5;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let valueColor = opts && 'valueColor' in opts ? opts.valueColor : null;
    let center = opts && 'center' in opts ? opts.center : null;
    let direction = opts && 'direction' in opts ? opts.direction : null;
    let shapePath = opts && 'shapePath' in opts ? opts.shapePath : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[center$] = center;
    this[direction$] = direction;
    this[shapePath$] = shapePath;
    liquid_custom_progress_indicator.LiquidCustomProgressIndicator.__proto__.new.call(this, {key: key, value: value, backgroundColor: backgroundColor, valueColor: valueColor, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = liquid_custom_progress_indicator.LiquidCustomProgressIndicator.prototype;
  dart.addTypeTests(liquid_custom_progress_indicator.LiquidCustomProgressIndicator);
  dart.addTypeCaches(liquid_custom_progress_indicator.LiquidCustomProgressIndicator);
  dart.setMethodSignature(liquid_custom_progress_indicator.LiquidCustomProgressIndicator, () => ({
    __proto__: dart.getMethods(liquid_custom_progress_indicator.LiquidCustomProgressIndicator.__proto__),
    [_getBackgroundColor]: dart.fnType(ui.Color, [framework.BuildContext]),
    [_getValueColor]: dart.fnType(ui.Color, [framework.BuildContext]),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(liquid_custom_progress_indicator.LiquidCustomProgressIndicator, I[0]);
  dart.setFieldSignature(liquid_custom_progress_indicator.LiquidCustomProgressIndicator, () => ({
    __proto__: dart.getFields(liquid_custom_progress_indicator.LiquidCustomProgressIndicator.__proto__),
    center: dart.finalFieldType(dart.nullable(framework.Widget)),
    direction: dart.finalFieldType(basic_types.Axis),
    shapePath: dart.finalFieldType(ui.Path)
  }));
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState = class _LiquidCustomProgressIndicatorState extends framework.State$(liquid_custom_progress_indicator.LiquidCustomProgressIndicator) {
    build(context) {
      let pathBounds = this.widget.shapePath.getBounds();
      return new basic.SizedBox.new({width: pathBounds.width + pathBounds.left, height: pathBounds.height + pathBounds.top, child: new basic.ClipPath.new({clipper: new liquid_custom_progress_indicator._CustomPathClipper.new({path: this.widget.shapePath}), child: new basic.CustomPaint.new({painter: new liquid_custom_progress_indicator._CustomPathPainter.new({color: this.widget[_getBackgroundColor](context), path: this.widget.shapePath}), child: new basic.Stack.new({children: (() => {
                let t0 = T.JSArrayOfWidget().of([new basic.Positioned.fill({left: pathBounds.left, top: pathBounds.top, child: new wave.Wave.new({value: this.widget.value, color: this.widget[_getValueColor](context), direction: this.widget.direction, $creationLocationd_0dea112b090073317d4: C[0] || CT.C0}), $creationLocationd_0dea112b090073317d4: C[5] || CT.C5})]);
                if (this.widget.center != null) t0[$add](new basic.Center.new({child: this.widget.center, $creationLocationd_0dea112b090073317d4: C[10] || CT.C10}));
                return t0;
              })(), $creationLocationd_0dea112b090073317d4: C[13] || CT.C13}), $creationLocationd_0dea112b090073317d4: C[16] || CT.C16}), $creationLocationd_0dea112b090073317d4: C[20] || CT.C20}), $creationLocationd_0dea112b090073317d4: C[24] || CT.C24});
    }
  };
  (liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState.new = function() {
    liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState.__proto__.new.call(this);
    ;
  }).prototype = liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState.prototype;
  dart.addTypeTests(liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState);
  dart.addTypeCaches(liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState);
  dart.setMethodSignature(liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState, () => ({
    __proto__: dart.getMethods(liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(liquid_custom_progress_indicator._LiquidCustomProgressIndicatorState, I[0]);
  liquid_custom_progress_indicator._CustomPathPainter = class _CustomPathPainter extends custom_paint.CustomPainter {
    paint(canvas, size) {
      let t1;
      let paint = (t1 = ui.Paint.new(), (() => {
        t1.color = this.color;
        return t1;
      })());
      canvas.drawPath(this.path, paint);
    }
    shouldRepaint(oldDelegate) {
      liquid_custom_progress_indicator._CustomPathPainter.as(oldDelegate);
      return !this.color._equals(oldDelegate.color) || !this.path[$_equals](oldDelegate.path);
    }
  };
  (liquid_custom_progress_indicator._CustomPathPainter.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let path = opts && 'path' in opts ? opts.path : null;
    this.color = color;
    this.path = path;
    liquid_custom_progress_indicator._CustomPathPainter.__proto__.new.call(this);
    ;
  }).prototype = liquid_custom_progress_indicator._CustomPathPainter.prototype;
  dart.addTypeTests(liquid_custom_progress_indicator._CustomPathPainter);
  dart.addTypeCaches(liquid_custom_progress_indicator._CustomPathPainter);
  dart.setMethodSignature(liquid_custom_progress_indicator._CustomPathPainter, () => ({
    __proto__: dart.getMethods(liquid_custom_progress_indicator._CustomPathPainter.__proto__),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Size]),
    shouldRepaint: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(liquid_custom_progress_indicator._CustomPathPainter, I[0]);
  dart.setFieldSignature(liquid_custom_progress_indicator._CustomPathPainter, () => ({
    __proto__: dart.getFields(liquid_custom_progress_indicator._CustomPathPainter.__proto__),
    color: dart.finalFieldType(ui.Color),
    path: dart.finalFieldType(ui.Path)
  }));
  liquid_custom_progress_indicator._CustomPathClipper = class _CustomPathClipper extends proxy_box.CustomClipper$(ui.Path) {
    getClip(size) {
      return this.path;
    }
    shouldReclip(oldClipper) {
      T.CustomClipperOfPath().as(oldClipper);
      return false;
    }
  };
  (liquid_custom_progress_indicator._CustomPathClipper.new = function(opts) {
    let path = opts && 'path' in opts ? opts.path : null;
    this.path = path;
    liquid_custom_progress_indicator._CustomPathClipper.__proto__.new.call(this);
    ;
  }).prototype = liquid_custom_progress_indicator._CustomPathClipper.prototype;
  dart.addTypeTests(liquid_custom_progress_indicator._CustomPathClipper);
  dart.addTypeCaches(liquid_custom_progress_indicator._CustomPathClipper);
  dart.setMethodSignature(liquid_custom_progress_indicator._CustomPathClipper, () => ({
    __proto__: dart.getMethods(liquid_custom_progress_indicator._CustomPathClipper.__proto__),
    getClip: dart.fnType(ui.Path, [ui.Size]),
    shouldReclip: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(liquid_custom_progress_indicator._CustomPathClipper, I[0]);
  dart.setFieldSignature(liquid_custom_progress_indicator._CustomPathClipper, () => ({
    __proto__: dart.getFields(liquid_custom_progress_indicator._CustomPathClipper.__proto__),
    path: dart.finalFieldType(ui.Path)
  }));
  dart.trackLibraries("packages/liquid_progress_indicator/src/liquid_custom_progress_indicator.dart", {
    "package:liquid_progress_indicator/src/liquid_custom_progress_indicator.dart": liquid_custom_progress_indicator
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["liquid_custom_progress_indicator.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKgB;;;;;;IAGH;;;;;;IAGA;;;;;;0BAiB4B;;AACnC;0BAAyB,AAAY,eAAT,OAAO;IAAiB;qBAEtB;;AAC9B,uDAAY;YAAZ,eAA2B,AAAY,eAAT,OAAO;IAAa;;AAGf;IAAqC;;;QArBrE;QACE;QACA;QACW;QACb;QACS;QACA;;IAFT;IACS;IACA;AACX,kGACQ,GAAG,SACD,KAAK,mBACK,eAAe,cACpB,UAAU;;EACvB;;;;;;;;;;;;;;;;;;;;;;UAemB;AAClB,uBAAa,AAAO,AAAU;AACpC,YAAO,gCACE,AAAW,AAAM,UAAP,SAAS,AAAW,UAAD,eAC5B,AAAW,AAAO,UAAR,UAAU,AAAW,UAAD,aAC/B,iCACI,mEACD,AAAO,gCAER,oCACI,oEACA,AAAO,iCAAoB,OAAO,SACnC,AAAO,gCAER,+BACa;iDACL,iCACH,AAAW,UAAD,YACX,AAAW,UAAD,aACR,0BACE,AAAO,0BACP,AAAO,4BAAe,OAAO,cACzB,AAAO;AAGtB,oBAAI,AAAO,4BAAgB,sCAAc,AAAO;;;IAM5D;;;;;EACF;;;;;;;;;UASoB,QAAa;;AACvB,wCAAQ;AAAS,mBAAQ;;;AACH,MAA5B,AAAO,MAAD,UAAU,WAAM,KAAK;IAC7B;;6DAGsC;AAClC,YAA2B,EAA3B,mBAAS,AAAY,WAAD,YAAU,oBAAQ,AAAY,WAAD;IAAK;;;QAVxB;QAAqB;IAArB;IAAqB;AAAvD;;EAA6D;;;;;;;;;;;;;;;YAmB3C;AAChB,YAAO;IACT;;iCAGsC;AAAe;IAAK;;;QARxB;;AAAlC;;EAAwC","file":"../../../../../../../../packages/liquid_progress_indicator/src/liquid_custom_progress_indicator.dart.lib.js"}');
  // Exports:
  return {
    src__liquid_custom_progress_indicator: liquid_custom_progress_indicator
  };
}));

//# sourceMappingURL=liquid_custom_progress_indicator.dart.lib.js.map
>>>>>>> AUg2
