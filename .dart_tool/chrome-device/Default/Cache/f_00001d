<<<<<<< HEAD
define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/foundation/synchronous_future.dart'], (function load__packages__flutter__src__cupertino__debug_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__foundation__synchronous_future$46dart) {
=======
define(['dart_sdk', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/widgets/scroll_view.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/rendering/viewport_offset.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/sliver.dart', 'packages/flutter/src/painting/matrix_utils.dart', 'packages/flutter/src/animation/curves.dart'], (function load__packages__flutter__src__widgets__single_child_scroll_view_dart(dart_sdk, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__widgets__scroll_view$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__rendering__viewport_offset$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__sliver$46dart, packages__flutter__src__painting__matrix_utils$46dart, packages__flutter__src__animation__curves$46dart) {
>>>>>>> AUg2
  'use strict';
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const ui = dart_sdk.ui;
<<<<<<< HEAD
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const localizations = packages__flutter__src__widgets__widget_span$46dart.src__widgets__localizations;
  const assertions = packages__flutter__src__foundation__debug$46dart.src__foundation__assertions;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const synchronous_future = packages__flutter__src__foundation__synchronous_future$46dart.src__foundation__synchronous_future;
  var debug = Object.create(dart.library);
  var localizations$ = Object.create(dart.library);
  var $runtimeType = dartx.runtimeType;
  var $addAll = dartx.addAll;
  var $toString = dartx.toString;
  var $_get = dartx._get;
  var $padLeft = dartx.padLeft;
  var $padRight = dartx.padRight;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    JSArrayOfDiagnosticsNode: () => (T.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    SynchronousFutureOfCupertinoLocalizations: () => (T.SynchronousFutureOfCupertinoLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(localizations$.CupertinoLocalizations)))()
=======
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const scroll_view = packages__flutter__src__widgets__scroll_view$46dart.src__widgets__scroll_view;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const primary_scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__primary_scroll_controller;
  const scrollable$ = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scrollable;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const notification_listener = packages__flutter__src__widgets__widget_span$46dart.src__widgets__notification_listener;
  const scroll_notification = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_notification;
  const focus_scope = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_scope;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const viewport_offset = packages__flutter__src__rendering__viewport_offset$46dart.src__rendering__viewport_offset;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const layer = packages__flutter__src__rendering__layer$46dart.src__rendering__layer;
  const viewport = packages__flutter__src__rendering__sliver$46dart.src__rendering__viewport;
  const matrix_utils = packages__flutter__src__painting__matrix_utils$46dart.src__painting__matrix_utils;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  var single_child_scroll_view = Object.create(dart.library);
  var $_equals = dartx._equals;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    BuildContextAndViewportOffsetTo_SingleChildViewport: () => (T.BuildContextAndViewportOffsetTo_SingleChildViewport = dart.constFn(dart.fnType(single_child_scroll_view._SingleChildViewport, [framework.BuildContext, viewport_offset.ViewportOffset])))(),
    NotificationListenerOfScrollUpdateNotification: () => (T.NotificationListenerOfScrollUpdateNotification = dart.constFn(notification_listener.NotificationListener$(scroll_notification.ScrollUpdateNotification)))(),
    ScrollUpdateNotificationTobool: () => (T.ScrollUpdateNotificationTobool = dart.constFn(dart.fnType(core.bool, [scroll_notification.ScrollUpdateNotification])))(),
    PaintingContextAndOffsetTovoid: () => (T.PaintingContextAndOffsetTovoid = dart.constFn(dart.fnType(dart.void, [object.PaintingContext, ui.Offset])))(),
    RenderObjectN: () => (T.RenderObjectN = dart.constFn(dart.nullable(object.RenderObject)))(),
    OffsetN: () => (T.OffsetN = dart.constFn(dart.nullable(ui.Offset)))(),
    BoxHitTestResultAndOffsetNTobool: () => (T.BoxHitTestResultAndOffsetNTobool = dart.constFn(dart.fnType(core.bool, [box.BoxHitTestResult, T.OffsetN()])))()
>>>>>>> AUg2
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
<<<<<<< HEAD
        __proto__: localizations$.DatePickerDateTimeOrder.prototype,
        [_name$]: "DatePickerDateTimeOrder.date_time_dayPeriod",
        index: 0
=======
        __proto__: basic_types.Axis.prototype,
        [_name]: "Axis.vertical",
        index: 1
>>>>>>> AUg2
      });
    },
    get C1() {
      return C[1] = dart.const({
<<<<<<< HEAD
        __proto__: localizations$.DatePickerDateTimeOrder.prototype,
        [_name$]: "DatePickerDateTimeOrder.date_dayPeriod_time",
=======
        __proto__: recognizer.DragStartBehavior.prototype,
        [_name$]: "DragStartBehavior.start",
>>>>>>> AUg2
        index: 1
      });
    },
    get C2() {
      return C[2] = dart.const({
<<<<<<< HEAD
        __proto__: localizations$.DatePickerDateTimeOrder.prototype,
        [_name$]: "DatePickerDateTimeOrder.time_dayPeriod_date",
        index: 2
=======
        __proto__: ui.Clip.prototype,
        [_name$0]: "Clip.hardEdge",
        index: 1
>>>>>>> AUg2
      });
    },
    get C3() {
      return C[3] = dart.const({
<<<<<<< HEAD
        __proto__: localizations$.DatePickerDateTimeOrder.prototype,
        [_name$]: "DatePickerDateTimeOrder.dayPeriod_time_date",
        index: 3
      });
    },
    get C4() {
      return C[4] = dart.constList([C[0] || CT.C0, C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3], localizations$.DatePickerDateTimeOrder);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: localizations$.DatePickerDateOrder.prototype,
        [_name$]: "DatePickerDateOrder.dmy",
=======
        __proto__: scroll_view.ScrollViewKeyboardDismissBehavior.prototype,
        [_name$1]: "ScrollViewKeyboardDismissBehavior.manual",
>>>>>>> AUg2
        index: 0
      });
    },
    get C6() {
      return C[6] = dart.const({
<<<<<<< HEAD
        __proto__: localizations$.DatePickerDateOrder.prototype,
        [_name$]: "DatePickerDateOrder.mdy",
        index: 1
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 26,
        [_Location_line]: 327,
        [_Location_file]: null
>>>>>>> AUg2
      });
    },
    get C7() {
      return C[7] = dart.const({
<<<<<<< HEAD
        __proto__: localizations$.DatePickerDateOrder.prototype,
        [_name$]: "DatePickerDateOrder.ymd",
        index: 2
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: localizations$.DatePickerDateOrder.prototype,
        [_name$]: "DatePickerDateOrder.ydm",
        index: 3
      });
    },
    get C9() {
      return C[9] = dart.constList([C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8], localizations$.DatePickerDateOrder);
    },
    get C10() {
      return C[10] = dart.constList(["hour", "hours"], core.String);
    },
    get C11() {
      return C[11] = dart.constList(["min."], core.String);
    },
    get C12() {
      return C[12] = dart.constList(["sec."], core.String);
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: localizations$.DefaultCupertinoLocalizations.prototype
      });
    },
    get C14() {
      return C[14] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], core.String);
    },
    get C15() {
      return C[15] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], core.String);
    },
    get C16() {
      return C[16] = dart.constList(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], core.String);
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: localizations$._CupertinoLocalizationsDelegate.prototype
      });
    }
  }, false);
  var C = Array(18).fill(void 0);
  var I = [
    "file:///D:/DevTools/flutter/packages/flutter/lib/src/cupertino/debug.dart",
    "package:flutter/src/cupertino/localizations.dart",
    "file:///D:/DevTools/flutter/packages/flutter/lib/src/cupertino/localizations.dart"
  ];
  debug.debugCheckHasCupertinoLocalizations = function debugCheckHasCupertinoLocalizations(context) {
    if (!dart.fn(() => {
      if (localizations.Localizations.of(localizations$.CupertinoLocalizations, context, dart.wrapType(localizations$.CupertinoLocalizations)) == null) {
        dart.throw(new assertions.FlutterError.fromParts((() => {
          let t0 = T.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("No CupertinoLocalizations found."), new assertions.ErrorDescription.new(dart.str(context.widget[$runtimeType]) + " widgets require CupertinoLocalizations " + "to be provided by a Localizations widget ancestor."), new assertions.ErrorDescription.new("The cupertino library uses Localizations to generate messages, " + "labels, and abbreviations."), new assertions.ErrorHint.new("To introduce a CupertinoLocalizations, either use a " + "CupertinoApp at the root of your application to include them " + "automatically, or add a Localization widget with a " + "CupertinoLocalizations delegate.")]);
          t0[$addAll](context.describeMissingAncestor({expectedAncestorType: dart.wrapType(localizations$.CupertinoLocalizations)}));
          return t0;
        })()));
      }
      return true;
    }, T.VoidTobool())()) dart.assertFailed(null, I[0], 21, 10, "() {\r\n    if (Localizations.of<CupertinoLocalizations>(context, CupertinoLocalizations) == null) {\r\n      throw FlutterError.fromParts(<DiagnosticsNode>[\r\n        ErrorSummary('No CupertinoLocalizations found.'),\r\n        ErrorDescription(\r\n          '${context.widget.runtimeType} widgets require CupertinoLocalizations '\r\n          'to be provided by a Localizations widget ancestor.',\r\n        ),\r\n        ErrorDescription(\r\n          'The cupertino library uses Localizations to generate messages, '\r\n          'labels, and abbreviations.',\r\n        ),\r\n        ErrorHint(\r\n          'To introduce a CupertinoLocalizations, either use a '\r\n          'CupertinoApp at the root of your application to include them '\r\n          'automatically, or add a Localization widget with a '\r\n          'CupertinoLocalizations delegate.',\r\n        ),\r\n        ...context.describeMissingAncestor(expectedAncestorType: CupertinoLocalizations),\r\n      ]);\r\n    }\r\n    return true;\r\n  }()");
    return true;
  };
  var _name$ = dart.privateName(localizations$, "_name");
  localizations$.DatePickerDateTimeOrder = class DatePickerDateTimeOrder extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (localizations$.DatePickerDateTimeOrder.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = localizations$.DatePickerDateTimeOrder.prototype;
  dart.addTypeTests(localizations$.DatePickerDateTimeOrder);
  dart.addTypeCaches(localizations$.DatePickerDateTimeOrder);
  dart.setLibraryUri(localizations$.DatePickerDateTimeOrder, I[1]);
  dart.setFieldSignature(localizations$.DatePickerDateTimeOrder, () => ({
    __proto__: dart.getFields(localizations$.DatePickerDateTimeOrder.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(localizations$.DatePickerDateTimeOrder, ['toString']);
  localizations$.DatePickerDateTimeOrder.date_time_dayPeriod = C[0] || CT.C0;
  localizations$.DatePickerDateTimeOrder.date_dayPeriod_time = C[1] || CT.C1;
  localizations$.DatePickerDateTimeOrder.time_dayPeriod_date = C[2] || CT.C2;
  localizations$.DatePickerDateTimeOrder.dayPeriod_time_date = C[3] || CT.C3;
  localizations$.DatePickerDateTimeOrder.values = C[4] || CT.C4;
  localizations$.DatePickerDateOrder = class DatePickerDateOrder extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (localizations$.DatePickerDateOrder.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = localizations$.DatePickerDateOrder.prototype;
  dart.addTypeTests(localizations$.DatePickerDateOrder);
  dart.addTypeCaches(localizations$.DatePickerDateOrder);
  dart.setLibraryUri(localizations$.DatePickerDateOrder, I[1]);
  dart.setFieldSignature(localizations$.DatePickerDateOrder, () => ({
    __proto__: dart.getFields(localizations$.DatePickerDateOrder.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(localizations$.DatePickerDateOrder, ['toString']);
  localizations$.DatePickerDateOrder.dmy = C[5] || CT.C5;
  localizations$.DatePickerDateOrder.mdy = C[6] || CT.C6;
  localizations$.DatePickerDateOrder.ymd = C[7] || CT.C7;
  localizations$.DatePickerDateOrder.ydm = C[8] || CT.C8;
  localizations$.DatePickerDateOrder.values = C[9] || CT.C9;
  localizations$.CupertinoLocalizations = class CupertinoLocalizations extends core.Object {
    static of(context) {
      if (!debug.debugCheckHasCupertinoLocalizations(context)) dart.assertFailed(null, I[2], 262, 12, "debugCheckHasCupertinoLocalizations(context)");
      return dart.nullCheck(localizations.Localizations.of(localizations$.CupertinoLocalizations, context, dart.wrapType(localizations$.CupertinoLocalizations)));
    }
  };
  (localizations$.CupertinoLocalizations.new = function() {
    ;
  }).prototype = localizations$.CupertinoLocalizations.prototype;
  dart.addTypeTests(localizations$.CupertinoLocalizations);
  dart.addTypeCaches(localizations$.CupertinoLocalizations);
  dart.setLibraryUri(localizations$.CupertinoLocalizations, I[1]);
  localizations$._CupertinoLocalizationsDelegate = class _CupertinoLocalizationsDelegate extends localizations.LocalizationsDelegate$(localizations$.CupertinoLocalizations) {
    isSupported(locale) {
      return locale.languageCode === "en";
    }
    load(locale) {
      return localizations$.DefaultCupertinoLocalizations.load(locale);
    }
    shouldReload(old) {
      localizations$._CupertinoLocalizationsDelegate.as(old);
      return false;
    }
    toString() {
      return "DefaultCupertinoLocalizations.delegate(en_US)";
    }
  };
  (localizations$._CupertinoLocalizationsDelegate.new = function() {
    localizations$._CupertinoLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = localizations$._CupertinoLocalizationsDelegate.prototype;
  dart.addTypeTests(localizations$._CupertinoLocalizationsDelegate);
  dart.addTypeCaches(localizations$._CupertinoLocalizationsDelegate);
  dart.setMethodSignature(localizations$._CupertinoLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(localizations$._CupertinoLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(core.bool, [ui.Locale]),
    load: dart.fnType(async.Future$(localizations$.CupertinoLocalizations), [ui.Locale]),
    shouldReload: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(localizations$._CupertinoLocalizationsDelegate, I[1]);
  dart.defineExtensionMethods(localizations$._CupertinoLocalizationsDelegate, ['toString']);
  localizations$.DefaultCupertinoLocalizations = class DefaultCupertinoLocalizations extends core.Object {
    datePickerYear(yearIndex) {
      return yearIndex[$toString]();
    }
    datePickerMonth(monthIndex) {
      return localizations$.DefaultCupertinoLocalizations._months[$_get](monthIndex - 1);
    }
    datePickerDayOfMonth(dayIndex) {
      return dayIndex[$toString]();
    }
    datePickerHour(hour) {
      return hour[$toString]();
    }
    datePickerHourSemanticsLabel(hour) {
      return hour[$toString]() + " o'clock";
    }
    datePickerMinute(minute) {
      return minute[$toString]()[$padLeft](2, "0");
    }
    datePickerMinuteSemanticsLabel(minute) {
      if (minute === 1) return "1 minute";
      return minute[$toString]() + " minutes";
    }
    datePickerMediumDate(date) {
      return localizations$.DefaultCupertinoLocalizations._shortWeekdays[$_get](date.weekday - 1) + " " + localizations$.DefaultCupertinoLocalizations._shortMonths[$_get](date.month - 1) + " " + date.day[$toString]()[$padRight](2);
    }
    get datePickerDateOrder() {
      return localizations$.DatePickerDateOrder.mdy;
    }
    get datePickerDateTimeOrder() {
      return localizations$.DatePickerDateTimeOrder.date_time_dayPeriod;
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get todayLabel() {
      return "Today";
    }
    get alertDialogLabel() {
      return "Alert";
    }
    tabSemanticsLabel(opts) {
      let tabIndex = opts && 'tabIndex' in opts ? opts.tabIndex : null;
      let tabCount = opts && 'tabCount' in opts ? opts.tabCount : null;
      if (!(tabIndex >= 1)) dart.assertFailed(null, I[2], 386, 12, "tabIndex >= 1");
      if (!(tabCount >= 1)) dart.assertFailed(null, I[2], 387, 12, "tabCount >= 1");
      return "Tab " + dart.str(tabIndex) + " of " + dart.str(tabCount);
    }
    timerPickerHour(hour) {
      return hour[$toString]();
    }
    timerPickerMinute(minute) {
      return minute[$toString]();
    }
    timerPickerSecond(second) {
      return second[$toString]();
    }
    timerPickerHourLabel(hour) {
      return hour === 1 ? "hour" : "hours";
    }
    get timerPickerHourLabels() {
      return C[10] || CT.C10;
    }
    timerPickerMinuteLabel(minute) {
      return "min.";
    }
    get timerPickerMinuteLabels() {
      return C[11] || CT.C11;
    }
    timerPickerSecondLabel(second) {
      return "sec.";
    }
    get timerPickerSecondLabels() {
      return C[12] || CT.C12;
    }
    get cutButtonLabel() {
      return "Cut";
    }
    get copyButtonLabel() {
      return "Copy";
    }
    get pasteButtonLabel() {
      return "Paste";
    }
    get selectAllButtonLabel() {
      return "Select All";
    }
    get searchTextFieldPlaceholderLabel() {
      return "Search";
    }
    get modalBarrierDismissLabel() {
      return "Dismiss";
    }
    static load(locale) {
      return new (T.SynchronousFutureOfCupertinoLocalizations()).new(C[13] || CT.C13);
    }
  };
  (localizations$.DefaultCupertinoLocalizations.new = function() {
    ;
  }).prototype = localizations$.DefaultCupertinoLocalizations.prototype;
  dart.addTypeTests(localizations$.DefaultCupertinoLocalizations);
  dart.addTypeCaches(localizations$.DefaultCupertinoLocalizations);
  localizations$.DefaultCupertinoLocalizations[dart.implements] = () => [localizations$.CupertinoLocalizations];
  dart.setMethodSignature(localizations$.DefaultCupertinoLocalizations, () => ({
    __proto__: dart.getMethods(localizations$.DefaultCupertinoLocalizations.__proto__),
    datePickerYear: dart.fnType(core.String, [core.int]),
    datePickerMonth: dart.fnType(core.String, [core.int]),
    datePickerDayOfMonth: dart.fnType(core.String, [core.int]),
    datePickerHour: dart.fnType(core.String, [core.int]),
    datePickerHourSemanticsLabel: dart.fnType(core.String, [core.int]),
    datePickerMinute: dart.fnType(core.String, [core.int]),
    datePickerMinuteSemanticsLabel: dart.fnType(core.String, [core.int]),
    datePickerMediumDate: dart.fnType(core.String, [core.DateTime]),
    tabSemanticsLabel: dart.fnType(core.String, [], {}, {tabCount: core.int, tabIndex: core.int}),
    timerPickerHour: dart.fnType(core.String, [core.int]),
    timerPickerMinute: dart.fnType(core.String, [core.int]),
    timerPickerSecond: dart.fnType(core.String, [core.int]),
    timerPickerHourLabel: dart.fnType(core.String, [core.int]),
    timerPickerMinuteLabel: dart.fnType(core.String, [core.int]),
    timerPickerSecondLabel: dart.fnType(core.String, [core.int])
  }));
  dart.setGetterSignature(localizations$.DefaultCupertinoLocalizations, () => ({
    __proto__: dart.getGetters(localizations$.DefaultCupertinoLocalizations.__proto__),
    datePickerDateOrder: localizations$.DatePickerDateOrder,
    datePickerDateTimeOrder: localizations$.DatePickerDateTimeOrder,
    anteMeridiemAbbreviation: core.String,
    postMeridiemAbbreviation: core.String,
    todayLabel: core.String,
    alertDialogLabel: core.String,
    timerPickerHourLabels: core.List$(core.String),
    timerPickerMinuteLabels: core.List$(core.String),
    timerPickerSecondLabels: core.List$(core.String),
    cutButtonLabel: core.String,
    copyButtonLabel: core.String,
    pasteButtonLabel: core.String,
    selectAllButtonLabel: core.String,
    searchTextFieldPlaceholderLabel: core.String,
    modalBarrierDismissLabel: core.String
  }));
  dart.setLibraryUri(localizations$.DefaultCupertinoLocalizations, I[1]);
  dart.defineLazy(localizations$.DefaultCupertinoLocalizations, {
    /*localizations$.DefaultCupertinoLocalizations._shortWeekdays*/get _shortWeekdays() {
      return C[14] || CT.C14;
    },
    /*localizations$.DefaultCupertinoLocalizations._shortMonths*/get _shortMonths() {
      return C[15] || CT.C15;
    },
    /*localizations$.DefaultCupertinoLocalizations._months*/get _months() {
      return C[16] || CT.C16;
    },
    /*localizations$.DefaultCupertinoLocalizations.delegate*/get delegate() {
      return C[17] || CT.C17;
    }
  }, false);
  dart.trackLibraries("packages/flutter/src/cupertino/debug.dart", {
    "package:flutter/src/cupertino/debug.dart": debug,
    "package:flutter/src/cupertino/localizations.dart": localizations$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["debug.dart","localizations.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2FAmBsD;AACpD,SAAO,AAsBN;AArBC,UAAkB,AAA4D,sEAAjC,OAAO;AAkBhD,QAjBF,WAAmB,sCAA2B;oDAC5C,gCAAa,qCACb,oCAAgB,SACX,AAAQ,AAAO,OAAR,yBAAoB,6CAC9B,uDAEF,oCAAgB,AACd,oEACA,+BAEF,6BAAS,AACP,yDACA,kEACA,wDACA;AAES,sBAAR,OAAO;;;;AAGd,YAAO;;AAET,UAAO;EACT;;;;;IChBA;;gEAjBK;;;;EAiBL;;;;;;;;;;;;;;;;;;IAoBA;;4DAjBK;;;;EAiBL;;;;;;;;;;;;;;;;cAoNgD;AAC5C,WAAO,0CAAoC,OAAO;AAClD,YAAgF,gBAA3D,sEAA2B,OAAO;IACzD;;;;EACF;;;;;gBAM0B;AAAW,YAAA,AAAO,AAAa,OAAd,kBAAiB;IAAI;SAGnB;AAAW,YAA8B,mDAAK,MAAM;IAAC;;wDAG9C;AAAQ;IAAK;;AAG1C;IAA+C;;;AAZ9D;;EAAiC;;;;;;;;;;;;mBAmEb;AAAc,YAAA,AAAU,UAAD;IAAW;oBAGjC;AAAe,YAAA,AAAO,6DAAC,AAAW,UAAD,GAAG;IAAE;yBAGjC;AAAa,YAAA,AAAS,SAAD;IAAW;mBAGtC;AAAS,YAAA,AAAK,KAAD;IAAW;iCAGV;AAAS,YAAA,AAAK,AAAW,KAAZ,gBAAc;IAAU;qBAGjD;AAAW,YAAA,AAAO,AAAW,OAAZ,wBAAoB,GAAG;IAAI;mCAG9B;AACxC,UAAI,AAAO,MAAD,KAAI,GACZ,MAAO;AACT,YAAO,AAAO,AAAW,OAAZ,gBAAc;IAC7B;yBAGqC;AACnC,YAAU,AAAc,oEAAC,AAAK,AAAQ,IAAT,gBAA4B,MACpD,AAAY,iEAAC,AAAK,AAAM,IAAP,cAA2B,MAC5C,AAAK,AAAI,AAAW,IAAhB,6BAAyB;IACpC;;AAG+C,YAAoB;IAAG;;AAGf,YAAwB;IAAmB;;AAG3D;IAAI;;AAGJ;IAAI;;AAGlB;IAAO;;AAGD;IAAO;;UAGC;UAAuB;AAC5D,YAAO,AAAS,QAAD,IAAI;AACnB,YAAO,AAAS,QAAD,IAAI;AACnB,YAAO,AAA4B,mBAAtB,QAAQ,sBAAK,QAAQ;IACpC;oBAG2B;AAAS,YAAA,AAAK,KAAD;IAAW;sBAGtB;AAAW,YAAA,AAAO,OAAD;IAAW;sBAG5B;AAAW,YAAA,AAAO,OAAD;IAAW;yBAGzB;AAAS,YAAA,AAAK,KAAD,KAAI,IAAI,SAAS;IAAO;;AAG3B;IAA+B;2BAGvC;AAAW;IAAM;;AAGP;IAAsB;2BAGhC;AAAW;IAAM;;AAGP;IAAsB;;AAGrC;IAAK;;AAGJ;IAAM;;AAGL;IAAO;;AAGH;IAAY;;AAGD;IAAQ;;AAGf;IAAS;gBAQE;AAChD,YAAO;IACT;;;;EA1JqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEX,2DAAc;;;MAUd,yDAAY;;;MAeZ,oDAAO;;;MAmI0B,qDAAQ","file":"../../../../../../../packages/flutter/src/cupertino/debug.dart.lib.js"}');
  // Exports:
  return {
    src__cupertino__debug: debug,
    src__cupertino__localizations: localizations$
  };
}));

//# sourceMappingURL=debug.dart.lib.js.map
=======
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 45,
        [_Location_line]: 327,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.constList([C[6] || CT.C6, C[7] || CT.C7], widget_inspector._Location);
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[5] || CT.C5,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 327,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/widgets/single_child_scroll_view.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 11,
        [_Location_line]: 339,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "offset",
        [_Location_column]: 11,
        [_Location_line]: 340,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 341,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "clipBehavior",
        [_Location_column]: 11,
        [_Location_line]: 342,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.constList([C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13], widget_inspector._Location);
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[9] || CT.C9,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 338,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/widgets/single_child_scroll_view.dart"
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "dragStartBehavior",
        [_Location_column]: 7,
        [_Location_line]: 332,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "axisDirection",
        [_Location_column]: 7,
        [_Location_line]: 333,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 7,
        [_Location_line]: 334,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "physics",
        [_Location_column]: 7,
        [_Location_line]: 335,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "restorationId",
        [_Location_column]: 7,
        [_Location_line]: 336,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewportBuilder",
        [_Location_column]: 7,
        [_Location_line]: 337,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.constList([C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19, C[20] || CT.C20, C[21] || CT.C21], widget_inspector._Location);
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[15] || CT.C15,
        [_Location_name]: null,
        [_Location_column]: 25,
        [_Location_line]: 331,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/widgets/single_child_scroll_view.dart"
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 349,
        [_Location_file]: null
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onNotification",
        [_Location_column]: 9,
        [_Location_line]: 350,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.constList([C[24] || CT.C24, C[25] || CT.C25], widget_inspector._Location);
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[23] || CT.C23,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 348,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/widgets/single_child_scroll_view.dart"
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 38,
        [_Location_line]: 361,
        [_Location_file]: null
      });
    },
    get C27() {
      return C[27] = dart.constList([C[28] || CT.C28], widget_inspector._Location);
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[27] || CT.C27,
        [_Location_name]: null,
        [_Location_column]: 33,
        [_Location_line]: 361,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/widgets/single_child_scroll_view.dart"
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name]: "AxisDirection.down",
        index: 2
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name]: "Axis.horizontal",
        index: 0
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name]: "AxisDirection.up",
        index: 0
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name]: "AxisDirection.left",
        index: 3
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name]: "AxisDirection.right",
        index: 1
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: curves.Cubic.prototype,
        [Cubic_d]: 1,
        [Cubic_c]: 0.25,
        [Cubic_b]: 0.1,
        [Cubic_a]: 0.25
      });
    }
  }, false);
  var C = Array(36).fill(void 0);
  var I = [
    "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/widgets/single_child_scroll_view.dart",
    "package:flutter/src/widgets/single_child_scroll_view.dart"
  ];
  var scrollDirection$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.scrollDirection");
  var reverse$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.reverse");
  var padding$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.padding");
  var controller$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.controller");
  var primary$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.primary");
  var physics$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.physics");
  var child$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.child");
  var dragStartBehavior$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.dragStartBehavior");
  var clipBehavior$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.clipBehavior");
  var restorationId$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.restorationId");
  var keyboardDismissBehavior$ = dart.privateName(single_child_scroll_view, "SingleChildScrollView.keyboardDismissBehavior");
  var _name = dart.privateName(basic_types, "_name");
  var _name$ = dart.privateName(recognizer, "_name");
  var _name$0 = dart.privateName(ui, "_name");
  var _name$1 = dart.privateName(scroll_view, "_name");
  var _getDirection = dart.privateName(single_child_scroll_view, "_getDirection");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  single_child_scroll_view.SingleChildScrollView = class SingleChildScrollView extends framework.StatelessWidget {
    get scrollDirection() {
      return this[scrollDirection$];
    }
    set scrollDirection(value) {
      super.scrollDirection = value;
    }
    get reverse() {
      return this[reverse$];
    }
    set reverse(value) {
      super.reverse = value;
    }
    get padding() {
      return this[padding$];
    }
    set padding(value) {
      super.padding = value;
    }
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get primary() {
      return this[primary$];
    }
    set primary(value) {
      super.primary = value;
    }
    get physics() {
      return this[physics$];
    }
    set physics(value) {
      super.physics = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get dragStartBehavior() {
      return this[dragStartBehavior$];
    }
    set dragStartBehavior(value) {
      super.dragStartBehavior = value;
    }
    get clipBehavior() {
      return this[clipBehavior$];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    get restorationId() {
      return this[restorationId$];
    }
    set restorationId(value) {
      super.restorationId = value;
    }
    get keyboardDismissBehavior() {
      return this[keyboardDismissBehavior$];
    }
    set keyboardDismissBehavior(value) {
      super.keyboardDismissBehavior = value;
    }
    [_getDirection](context) {
      return basic.getAxisDirectionFromAxisReverseAndDirectionality(context, this.scrollDirection, this.reverse);
    }
    build(context) {
      let axisDirection = this[_getDirection](context);
      let contents = this.child;
      if (this.padding != null) contents = new basic.Padding.new({padding: dart.nullCheck(this.padding), child: contents, $creationLocationd_0dea112b090073317d4: C[4] || CT.C4});
      let scrollController = this.primary ? primary_scroll_controller.PrimaryScrollController.of(context) : this.controller;
      let scrollable = new scrollable$.Scrollable.new({dragStartBehavior: this.dragStartBehavior, axisDirection: axisDirection, controller: scrollController, physics: this.physics, restorationId: this.restorationId, viewportBuilder: dart.fn((context, offset) => new single_child_scroll_view._SingleChildViewport.new({axisDirection: axisDirection, offset: offset, child: contents, clipBehavior: this.clipBehavior, $creationLocationd_0dea112b090073317d4: C[8] || CT.C8}), T.BuildContextAndViewportOffsetTo_SingleChildViewport()), $creationLocationd_0dea112b090073317d4: C[14] || CT.C14});
      if (this.keyboardDismissBehavior === scroll_view.ScrollViewKeyboardDismissBehavior.onDrag) {
        scrollable = new (T.NotificationListenerOfScrollUpdateNotification()).new({child: scrollable, onNotification: dart.fn(notification => {
            let focusNode = focus_scope.FocusScope.of(context);
            if (notification.dragDetails != null && focusNode.hasFocus) {
              focusNode.unfocus();
            }
            return false;
          }, T.ScrollUpdateNotificationTobool()), $creationLocationd_0dea112b090073317d4: C[22] || CT.C22});
      }
      return this.primary && scrollController != null ? new primary_scroll_controller.PrimaryScrollController.none({child: scrollable, $creationLocationd_0dea112b090073317d4: C[26] || CT.C26}) : scrollable;
    }
  };
  (single_child_scroll_view.SingleChildScrollView.new = function(opts) {
    let t0;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[0] || CT.C0;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[1] || CT.C1;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[2] || CT.C2;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[3] || CT.C3;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[scrollDirection$] = scrollDirection;
    this[reverse$] = reverse;
    this[padding$] = padding;
    this[physics$] = physics;
    this[controller$] = controller;
    this[child$] = child;
    this[dragStartBehavior$] = dragStartBehavior;
    this[clipBehavior$] = clipBehavior;
    this[restorationId$] = restorationId;
    this[keyboardDismissBehavior$] = keyboardDismissBehavior;
    if (!(scrollDirection !== null)) dart.assertFailed(null, I[0], 230, 15, "scrollDirection != null");
    if (!(dragStartBehavior !== null)) dart.assertFailed(null, I[0], 231, 15, "dragStartBehavior != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[0], 232, 15, "clipBehavior != null");
    if (!!(controller != null && primary === true)) dart.assertFailed("Primary ScrollViews obtain their ScrollController via inheritance from a PrimaryScrollController widget. " + "You cannot both set primary to true and pass an explicit controller.", I[0], 233, 15, "!(controller != null && primary == true)");
    this[primary$] = (t0 = primary, t0 == null ? controller == null && scrollDirection === basic_types.Axis.vertical : t0);
    single_child_scroll_view.SingleChildScrollView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = single_child_scroll_view.SingleChildScrollView.prototype;
  dart.addTypeTests(single_child_scroll_view.SingleChildScrollView);
  dart.addTypeCaches(single_child_scroll_view.SingleChildScrollView);
  dart.setMethodSignature(single_child_scroll_view.SingleChildScrollView, () => ({
    __proto__: dart.getMethods(single_child_scroll_view.SingleChildScrollView.__proto__),
    [_getDirection]: dart.fnType(basic_types.AxisDirection, [framework.BuildContext]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(single_child_scroll_view.SingleChildScrollView, I[1]);
  dart.setFieldSignature(single_child_scroll_view.SingleChildScrollView, () => ({
    __proto__: dart.getFields(single_child_scroll_view.SingleChildScrollView.__proto__),
    scrollDirection: dart.finalFieldType(basic_types.Axis),
    reverse: dart.finalFieldType(core.bool),
    padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
    controller: dart.finalFieldType(dart.nullable(scroll_controller.ScrollController)),
    primary: dart.finalFieldType(core.bool),
    physics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
    clipBehavior: dart.finalFieldType(ui.Clip),
    restorationId: dart.finalFieldType(dart.nullable(core.String)),
    keyboardDismissBehavior: dart.finalFieldType(scroll_view.ScrollViewKeyboardDismissBehavior)
  }));
  var axisDirection$ = dart.privateName(single_child_scroll_view, "_SingleChildViewport.axisDirection");
  var offset$ = dart.privateName(single_child_scroll_view, "_SingleChildViewport.offset");
  var clipBehavior$0 = dart.privateName(single_child_scroll_view, "_SingleChildViewport.clipBehavior");
  single_child_scroll_view._SingleChildViewport = class _SingleChildViewport extends framework.SingleChildRenderObjectWidget {
    get axisDirection() {
      return this[axisDirection$];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    get offset() {
      return this[offset$];
    }
    set offset(value) {
      super.offset = value;
    }
    get clipBehavior() {
      return this[clipBehavior$0];
    }
    set clipBehavior(value) {
      super.clipBehavior = value;
    }
    createRenderObject(context) {
      return new single_child_scroll_view._RenderSingleChildViewport.new({axisDirection: this.axisDirection, offset: this.offset, clipBehavior: this.clipBehavior});
    }
    updateRenderObject(context, renderObject) {
      let t0;
      single_child_scroll_view._RenderSingleChildViewport.as(renderObject);
      t0 = renderObject;
      (() => {
        t0.axisDirection = this.axisDirection;
        t0.offset = this.offset;
        t0.clipBehavior = this.clipBehavior;
        return t0;
      })();
    }
  };
  (single_child_scroll_view._SingleChildViewport.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C[29] || CT.C29;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[axisDirection$] = axisDirection;
    this[offset$] = offset;
    this[clipBehavior$0] = clipBehavior;
    if (!(axisDirection !== null)) dart.assertFailed(null, I[0], 373, 15, "axisDirection != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[0], 374, 15, "clipBehavior != null");
    single_child_scroll_view._SingleChildViewport.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = single_child_scroll_view._SingleChildViewport.prototype;
  dart.addTypeTests(single_child_scroll_view._SingleChildViewport);
  dart.addTypeCaches(single_child_scroll_view._SingleChildViewport);
  dart.setMethodSignature(single_child_scroll_view._SingleChildViewport, () => ({
    __proto__: dart.getMethods(single_child_scroll_view._SingleChildViewport.__proto__),
    createRenderObject: dart.fnType(single_child_scroll_view._RenderSingleChildViewport, [framework.BuildContext])
  }));
  dart.setLibraryUri(single_child_scroll_view._SingleChildViewport, I[1]);
  dart.setFieldSignature(single_child_scroll_view._SingleChildViewport, () => ({
    __proto__: dart.getFields(single_child_scroll_view._SingleChildViewport.__proto__),
    axisDirection: dart.finalFieldType(basic_types.AxisDirection),
    offset: dart.finalFieldType(viewport_offset.ViewportOffset),
    clipBehavior: dart.finalFieldType(ui.Clip)
  }));
  var _clipBehavior = dart.privateName(single_child_scroll_view, "_clipBehavior");
  var _clipRectLayer = dart.privateName(single_child_scroll_view, "_clipRectLayer");
  var _axisDirection = dart.privateName(single_child_scroll_view, "_axisDirection");
  var _offset = dart.privateName(single_child_scroll_view, "_offset");
  var _cacheExtent = dart.privateName(single_child_scroll_view, "_cacheExtent");
  var _hasScrolled = dart.privateName(single_child_scroll_view, "_hasScrolled");
  var _viewportExtent = dart.privateName(single_child_scroll_view, "_viewportExtent");
  var _minScrollExtent = dart.privateName(single_child_scroll_view, "_minScrollExtent");
  var _maxScrollExtent = dart.privateName(single_child_scroll_view, "_maxScrollExtent");
  var _getInnerConstraints = dart.privateName(single_child_scroll_view, "_getInnerConstraints");
  var _paintOffsetForPosition = dart.privateName(single_child_scroll_view, "_paintOffsetForPosition");
  var _paintOffset = dart.privateName(single_child_scroll_view, "_paintOffset");
  var _shouldClipAtPaintOffset = dart.privateName(single_child_scroll_view, "_shouldClipAtPaintOffset");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var Cubic_d = dart.privateName(curves, "Cubic.d");
  var Cubic_c = dart.privateName(curves, "Cubic.c");
  var Cubic_b = dart.privateName(curves, "Cubic.b");
  var Cubic_a = dart.privateName(curves, "Cubic.a");
  const RenderBox_RenderObjectWithChildMixin$36 = class RenderBox_RenderObjectWithChildMixin extends box.RenderBox {};
  (RenderBox_RenderObjectWithChildMixin$36.new = function() {
    object.RenderObjectWithChildMixin$(box.RenderBox)[dart.mixinNew].call(this);
    RenderBox_RenderObjectWithChildMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_RenderObjectWithChildMixin$36.prototype;
  dart.applyMixin(RenderBox_RenderObjectWithChildMixin$36, object.RenderObjectWithChildMixin$(box.RenderBox));
  single_child_scroll_view._RenderSingleChildViewport = class _RenderSingleChildViewport extends RenderBox_RenderObjectWithChildMixin$36 {
    get axisDirection() {
      return this[_axisDirection];
    }
    set axisDirection(value) {
      if (!(value !== null)) dart.assertFailed(null, I[0], 421, 12, "value != null");
      if (value === this[_axisDirection]) return;
      this[_axisDirection] = value;
      this.markNeedsLayout();
    }
    get axis() {
      return basic_types.axisDirectionToAxis(this.axisDirection);
    }
    get offset() {
      return this[_offset];
    }
    set offset(value) {
      if (!(value !== null)) dart.assertFailed(null, I[0], 433, 12, "value != null");
      if (value[$_equals](this[_offset])) return;
      if (this.attached) this[_offset].removeListener(dart.bind(this, _hasScrolled));
      this[_offset] = value;
      if (this.attached) this[_offset].addListener(dart.bind(this, _hasScrolled));
      this.markNeedsLayout();
    }
    get cacheExtent() {
      return this[_cacheExtent];
    }
    set cacheExtent(value) {
      if (!(value !== null)) dart.assertFailed(null, I[0], 448, 12, "value != null");
      if (value === this[_cacheExtent]) return;
      this[_cacheExtent] = value;
      this.markNeedsLayout();
    }
    get clipBehavior() {
      return this[_clipBehavior];
    }
    set clipBehavior(value) {
      if (!(value !== null)) dart.assertFailed(null, I[0], 461, 12, "value != null");
      if (value !== this[_clipBehavior]) {
        this[_clipBehavior] = value;
        this.markNeedsPaint();
        this.markNeedsSemanticsUpdate();
      }
    }
    [_hasScrolled]() {
      this.markNeedsPaint();
      this.markNeedsSemanticsUpdate();
    }
    setupParentData(child) {
      object.RenderObject.as(child);
      if (!object.ParentData.is(child.parentData)) child.parentData = new object.ParentData.new();
    }
    attach(owner) {
      object.PipelineOwner.as(owner);
      super.attach(owner);
      this[_offset].addListener(dart.bind(this, _hasScrolled));
    }
    detach() {
      this[_offset].removeListener(dart.bind(this, _hasScrolled));
      super.detach();
    }
    get isRepaintBoundary() {
      return true;
    }
    get [_viewportExtent]() {
      if (!this.hasSize) dart.assertFailed(null, I[0], 498, 12, "hasSize");
      switch (this.axis) {
        case C[30] || CT.C30:
        {
          return this.size.width;
        }
        case C[0] || CT.C0:
        {
          return this.size.height;
        }
      }
    }
    get [_minScrollExtent]() {
      if (!this.hasSize) dart.assertFailed(null, I[0], 508, 12, "hasSize");
      return 0.0;
    }
    get [_maxScrollExtent]() {
      if (!this.hasSize) dart.assertFailed(null, I[0], 513, 12, "hasSize");
      if (this.child == null) return 0.0;
      switch (this.axis) {
        case C[30] || CT.C30:
        {
          return math.max(core.double, 0.0, dart.nullCheck(this.child).size.width - this.size.width);
        }
        case C[0] || CT.C0:
        {
          return math.max(core.double, 0.0, dart.nullCheck(this.child).size.height - this.size.height);
        }
      }
    }
    [_getInnerConstraints](constraints) {
      switch (this.axis) {
        case C[30] || CT.C30:
        {
          return constraints.heightConstraints();
        }
        case C[0] || CT.C0:
        {
          return constraints.widthConstraints();
        }
      }
    }
    computeMinIntrinsicWidth(height) {
      if (this.child != null) return dart.nullCheck(this.child).getMinIntrinsicWidth(height);
      return 0.0;
    }
    computeMaxIntrinsicWidth(height) {
      if (this.child != null) return dart.nullCheck(this.child).getMaxIntrinsicWidth(height);
      return 0.0;
    }
    computeMinIntrinsicHeight(width) {
      if (this.child != null) return dart.nullCheck(this.child).getMinIntrinsicHeight(width);
      return 0.0;
    }
    computeMaxIntrinsicHeight(width) {
      if (this.child != null) return dart.nullCheck(this.child).getMaxIntrinsicHeight(width);
      return 0.0;
    }
    computeDryLayout(constraints) {
      if (this.child == null) {
        return constraints.smallest;
      }
      let childSize = dart.nullCheck(this.child).getDryLayout(this[_getInnerConstraints](constraints));
      return constraints.constrain(childSize);
    }
    performLayout() {
      let constraints = this.constraints;
      if (this.child == null) {
        this.size = constraints.smallest;
      } else {
        dart.nullCheck(this.child).layout(this[_getInnerConstraints](constraints), {parentUsesSize: true});
        this.size = constraints.constrain(dart.nullCheck(this.child).size);
      }
      this.offset.applyViewportDimension(this[_viewportExtent]);
      this.offset.applyContentDimensions(this[_minScrollExtent], this[_maxScrollExtent]);
    }
    get [_paintOffset]() {
      return this[_paintOffsetForPosition](this.offset.pixels);
    }
    [_paintOffsetForPosition](position) {
      if (!(this.axisDirection !== null)) dart.assertFailed(null, I[0], 592, 12, "axisDirection != null");
      switch (this.axisDirection) {
        case C[31] || CT.C31:
        {
          return new ui.Offset.new(0.0, position - dart.nullCheck(this.child).size.height + this.size.height);
        }
        case C[29] || CT.C29:
        {
          return new ui.Offset.new(0.0, -position);
        }
        case C[32] || CT.C32:
        {
          return new ui.Offset.new(position - dart.nullCheck(this.child).size.width + this.size.width, 0.0);
        }
        case C[33] || CT.C33:
        {
          return new ui.Offset.new(-position, 0.0);
        }
      }
    }
    [_shouldClipAtPaintOffset](paintOffset) {
      if (!(this.child != null)) dart.assertFailed(null, I[0], 606, 12, "child != null");
      return paintOffset.dx < 0 || paintOffset.dy < 0 || paintOffset.dx + dart.nullCheck(this.child).size.width > this.size.width || paintOffset.dy + dart.nullCheck(this.child).size.height > this.size.height;
    }
    paint(context, offset) {
      if (this.child != null) {
        let paintOffset = this[_paintOffset];
        const paintContents = (context, offset) => {
          context.paintChild(dart.nullCheck(this.child), offset['+'](paintOffset));
        };
        dart.fn(paintContents, T.PaintingContextAndOffsetTovoid());
        if (this[_shouldClipAtPaintOffset](paintOffset) && this.clipBehavior !== ui.Clip.none) {
          this[_clipRectLayer] = context.pushClipRect(this.needsCompositing, offset, ui.Offset.zero['&'](this.size), paintContents, {clipBehavior: this.clipBehavior, oldLayer: this[_clipRectLayer]});
        } else {
          this[_clipRectLayer] = null;
          paintContents(context, offset);
        }
      }
    }
    applyPaintTransform(child, transform) {
      box.RenderBox.as(child);
      let paintOffset = this[_paintOffset];
      transform.translate(paintOffset.dx, paintOffset.dy);
    }
    describeApproximatePaintClip(child) {
      T.RenderObjectN().as(child);
      if (child != null && this[_shouldClipAtPaintOffset](this[_paintOffset])) return ui.Offset.zero['&'](this.size);
      return null;
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      if (this.child != null) {
        return result.addWithPaintOffset({offset: this[_paintOffset], position: position, hitTest: dart.fn((result, transformed) => {
            if (!dart.equals(transformed, position['+'](this[_paintOffset]._negate()))) dart.assertFailed(null, I[0], 660, 18, "transformed == position + -_paintOffset");
            return dart.nullCheck(this.child).hitTest(result, {position: dart.nullCheck(transformed)});
          }, T.BoxHitTestResultAndOffsetNTobool())});
      }
      return false;
    }
    getOffsetToReveal(target, alignment, opts) {
      let rect = opts && 'rect' in opts ? opts.rect : null;
      rect == null ? rect = target.paintBounds : null;
      if (!box.RenderBox.is(target)) return new viewport.RevealedOffset.new({offset: this.offset.pixels, rect: rect});
      let targetBox = target;
      let transform = targetBox.getTransformTo(this.child);
      let bounds = matrix_utils.MatrixUtils.transformRect(transform, rect);
      let contentSize = dart.nullCheck(this.child).size;
      let leadingScrollOffset = null;
      let targetMainAxisExtent = null;
      let mainAxisExtent = null;
      if (!(this.axisDirection !== null)) dart.assertFailed(null, I[0], 683, 12, "axisDirection != null");
      switch (this.axisDirection) {
        case C[31] || CT.C31:
        {
          mainAxisExtent = this.size.height;
          leadingScrollOffset = contentSize.height - bounds.bottom;
          targetMainAxisExtent = bounds.height;
          break;
        }
        case C[33] || CT.C33:
        {
          mainAxisExtent = this.size.width;
          leadingScrollOffset = bounds.left;
          targetMainAxisExtent = bounds.width;
          break;
        }
        case C[29] || CT.C29:
        {
          mainAxisExtent = this.size.height;
          leadingScrollOffset = bounds.top;
          targetMainAxisExtent = bounds.height;
          break;
        }
        case C[32] || CT.C32:
        {
          mainAxisExtent = this.size.width;
          leadingScrollOffset = contentSize.width - bounds.right;
          targetMainAxisExtent = bounds.width;
          break;
        }
      }
      let targetOffset = leadingScrollOffset - (mainAxisExtent - targetMainAxisExtent) * alignment;
      let targetRect = bounds.shift(this[_paintOffsetForPosition](targetOffset));
      return new viewport.RevealedOffset.new({offset: targetOffset, rect: targetRect});
    }
    showOnScreen(opts) {
      let descendant = opts && 'descendant' in opts ? opts.descendant : null;
      let rect = opts && 'rect' in opts ? opts.rect : null;
      let duration = opts && 'duration' in opts ? opts.duration : C[34] || CT.C34;
      let curve = opts && 'curve' in opts ? opts.curve : C[35] || CT.C35;
      if (!this.offset.allowImplicitScrolling) {
        return super.showOnScreen({descendant: descendant, rect: rect, duration: duration, curve: curve});
      }
      let newRect = viewport.RenderViewportBase.showInViewport({descendant: descendant, viewport: this, offset: this.offset, rect: rect, duration: duration, curve: curve});
      super.showOnScreen({rect: newRect, duration: duration, curve: curve});
    }
    describeSemanticsClip(child) {
      object.RenderObject.as(child);
      if (!(this.axis !== null)) dart.assertFailed(null, I[0], 745, 12, "axis != null");
      switch (this.axis) {
        case C[0] || CT.C0:
        {
          return new ui.Rect.fromLTRB(this.semanticBounds.left, this.semanticBounds.top - this.cacheExtent, this.semanticBounds.right, this.semanticBounds.bottom + this.cacheExtent);
        }
        case C[30] || CT.C30:
        {
          return new ui.Rect.fromLTRB(this.semanticBounds.left - this.cacheExtent, this.semanticBounds.top, this.semanticBounds.right + this.cacheExtent, this.semanticBounds.bottom);
        }
      }
    }
  };
  (single_child_scroll_view._RenderSingleChildViewport.new = function(opts) {
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : C[29] || CT.C29;
    let offset = opts && 'offset' in opts ? opts.offset : null;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : 250;
    let child = opts && 'child' in opts ? opts.child : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    this[_clipBehavior] = ui.Clip.none;
    this[_clipRectLayer] = null;
    if (!(axisDirection !== null)) dart.assertFailed(null, I[0], 407, 15, "axisDirection != null");
    if (!(offset !== null)) dart.assertFailed(null, I[0], 408, 15, "offset != null");
    if (!(cacheExtent !== null)) dart.assertFailed(null, I[0], 409, 15, "cacheExtent != null");
    if (!(clipBehavior !== null)) dart.assertFailed(null, I[0], 410, 15, "clipBehavior != null");
    this[_axisDirection] = axisDirection;
    this[_offset] = offset;
    this[_cacheExtent] = cacheExtent;
    this[_clipBehavior] = clipBehavior;
    single_child_scroll_view._RenderSingleChildViewport.__proto__.new.call(this);
    this.child = child;
  }).prototype = single_child_scroll_view._RenderSingleChildViewport.prototype;
  dart.addTypeTests(single_child_scroll_view._RenderSingleChildViewport);
  dart.addTypeCaches(single_child_scroll_view._RenderSingleChildViewport);
  single_child_scroll_view._RenderSingleChildViewport[dart.implements] = () => [viewport.RenderAbstractViewport];
  dart.setMethodSignature(single_child_scroll_view._RenderSingleChildViewport, () => ({
    __proto__: dart.getMethods(single_child_scroll_view._RenderSingleChildViewport.__proto__),
    [_hasScrolled]: dart.fnType(dart.void, []),
    [_getInnerConstraints]: dart.fnType(box.BoxConstraints, [box.BoxConstraints]),
    [_paintOffsetForPosition]: dart.fnType(ui.Offset, [core.double]),
    [_shouldClipAtPaintOffset]: dart.fnType(core.bool, [ui.Offset]),
    getOffsetToReveal: dart.fnType(viewport.RevealedOffset, [object.RenderObject, core.double], {rect: dart.nullable(ui.Rect)}, {}),
    describeSemanticsClip: dart.fnType(ui.Rect, [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(single_child_scroll_view._RenderSingleChildViewport, () => ({
    __proto__: dart.getGetters(single_child_scroll_view._RenderSingleChildViewport.__proto__),
    axisDirection: basic_types.AxisDirection,
    axis: basic_types.Axis,
    offset: viewport_offset.ViewportOffset,
    cacheExtent: core.double,
    clipBehavior: ui.Clip,
    [_viewportExtent]: core.double,
    [_minScrollExtent]: core.double,
    [_maxScrollExtent]: core.double,
    [_paintOffset]: ui.Offset
  }));
  dart.setSetterSignature(single_child_scroll_view._RenderSingleChildViewport, () => ({
    __proto__: dart.getSetters(single_child_scroll_view._RenderSingleChildViewport.__proto__),
    axisDirection: basic_types.AxisDirection,
    offset: viewport_offset.ViewportOffset,
    cacheExtent: core.double,
    clipBehavior: ui.Clip
  }));
  dart.setLibraryUri(single_child_scroll_view._RenderSingleChildViewport, I[1]);
  dart.setFieldSignature(single_child_scroll_view._RenderSingleChildViewport, () => ({
    __proto__: dart.getFields(single_child_scroll_view._RenderSingleChildViewport.__proto__),
    [_axisDirection]: dart.fieldType(basic_types.AxisDirection),
    [_offset]: dart.fieldType(viewport_offset.ViewportOffset),
    [_cacheExtent]: dart.fieldType(core.double),
    [_clipBehavior]: dart.fieldType(ui.Clip),
    [_clipRectLayer]: dart.fieldType(dart.nullable(layer.ClipRectLayer))
  }));
  dart.trackLibraries("packages/flutter/src/widgets/single_child_scroll_view.dart", {
    "package:flutter/src/widgets/single_child_scroll_view.dart": single_child_scroll_view
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["single_child_scroll_view.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/flutter/src/widgets/single_child_scroll_view.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__single_child_scroll_view: single_child_scroll_view
  };
}));

//# sourceMappingURL=single_child_scroll_view.dart.lib.js.map
>>>>>>> AUg2
