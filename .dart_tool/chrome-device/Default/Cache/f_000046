<<<<<<< HEAD
define(['dart_sdk', 'packages/flutter/src/gestures/constants.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/gestures/events.dart', 'packages/flutter/src/gestures/arena.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__gestures__tap_dart(dart_sdk, packages__flutter__src__gestures__constants$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__gestures__events$46dart, packages__flutter__src__gestures__arena$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const constants = packages__flutter__src__gestures__constants$46dart.src__gestures__constants;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const events = packages__flutter__src__gestures__events$46dart.src__gestures__events;
  const arena = packages__flutter__src__gestures__arena$46dart.src__gestures__arena;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  var tap = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    DiagnosticsPropertyOfOffset: () => (T.DiagnosticsPropertyOfOffset = dart.constFn(diagnostics.DiagnosticsProperty$(ui.Offset)))(),
    DiagnosticsPropertyOfint: () => (T.DiagnosticsPropertyOfint = dart.constFn(diagnostics.DiagnosticsProperty$(core.int)))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))()
=======
define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/foundation/change_notifier.dart', 'packages/flutter/src/animation/curves.dart', 'packages/flutter/src/widgets/layout_builder.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/widgets/scroll_simulation.dart', 'packages/flutter/src/animation/animation_controller.dart', 'packages/flutter/src/foundation/object.dart'], (function load__packages__flutter__src__widgets__draggable_scrollable_sheet_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__foundation__change_notifier$46dart, packages__flutter__src__animation__curves$46dart, packages__flutter__src__widgets__layout_builder$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__widgets__scroll_simulation$46dart, packages__flutter__src__animation__animation_controller$46dart, packages__flutter__src__foundation__object$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const scroll_controller = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_controller;
  const notification_listener = packages__flutter__src__widgets__widget_span$46dart.src__widgets__notification_listener;
  const scroll_notification = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_notification;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const scroll_physics = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_physics;
  const scroll_context = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_context;
  const scroll_position = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position;
  const scroll_position_with_single_context = packages__flutter__src__widgets__widget_span$46dart.src__widgets__scroll_position_with_single_context;
  const inherited_notifier = packages__flutter__src__widgets__widget_span$46dart.src__widgets__inherited_notifier;
  const change_notifier = packages__flutter__src__foundation__change_notifier$46dart.src__foundation__change_notifier;
  const curves = packages__flutter__src__animation__curves$46dart.src__animation__curves;
  const layout_builder = packages__flutter__src__widgets__layout_builder$46dart.src__widgets__layout_builder;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const scroll_simulation = packages__flutter__src__widgets__scroll_simulation$46dart.src__widgets__scroll_simulation;
  const animation_controller = packages__flutter__src__animation__animation_controller$46dart.src__animation__animation_controller;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  var draggable_scrollable_sheet = Object.create(dart.library);
  var $add = dartx.add;
  var $clamp = dartx.clamp;
  var $sign = dartx.sign;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    ValueNotifierOfdouble: () => (T.ValueNotifierOfdouble = dart.constFn(change_notifier.ValueNotifier$(core.double)))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    BuildContextAndBoxConstraintsToWidget: () => (T.BuildContextAndBoxConstraintsToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, box.BoxConstraints])))()
>>>>>>> 75a5b68328961ba989f4b72e23f0c2c5b16d7dc4
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
<<<<<<< HEAD
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    }
  }, false);
  var C = [void 0];
  var I = [
    "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/gestures/tap.dart",
    "package:flutter/src/gestures/tap.dart"
  ];
  var globalPosition$ = dart.privateName(tap, "TapDownDetails.globalPosition");
  var kind$ = dart.privateName(tap, "TapDownDetails.kind");
  var localPosition$ = dart.privateName(tap, "TapDownDetails.localPosition");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  tap.TapDownDetails = class TapDownDetails extends core.Object {
    get globalPosition() {
      return this[globalPosition$];
    }
    set globalPosition(value) {
      super.globalPosition = value;
    }
    get kind() {
      return this[kind$];
    }
    set kind(value) {
      super.kind = value;
    }
    get localPosition() {
      return this[localPosition$];
    }
    set localPosition(value) {
      super.localPosition = value;
    }
  };
  (tap.TapDownDetails.new = function(opts) {
    let t0;
    let globalPosition = opts && 'globalPosition' in opts ? opts.globalPosition : C[0] || CT.C0;
    let localPosition = opts && 'localPosition' in opts ? opts.localPosition : null;
    let kind = opts && 'kind' in opts ? opts.kind : null;
    this[globalPosition$] = globalPosition;
    this[kind$] = kind;
    if (!(globalPosition !== null)) dart.assertFailed(null, I[0], 28, 15, "globalPosition != null");
    this[localPosition$] = (t0 = localPosition, t0 == null ? globalPosition : t0);
    ;
  }).prototype = tap.TapDownDetails.prototype;
  dart.addTypeTests(tap.TapDownDetails);
  dart.addTypeCaches(tap.TapDownDetails);
  dart.setLibraryUri(tap.TapDownDetails, I[1]);
  dart.setFieldSignature(tap.TapDownDetails, () => ({
    __proto__: dart.getFields(tap.TapDownDetails.__proto__),
    globalPosition: dart.finalFieldType(ui.Offset),
    kind: dart.finalFieldType(dart.nullable(ui.PointerDeviceKind)),
    localPosition: dart.finalFieldType(ui.Offset)
  }));
  var globalPosition$0 = dart.privateName(tap, "TapUpDetails.globalPosition");
  var localPosition$0 = dart.privateName(tap, "TapUpDetails.localPosition");
  var kind$0 = dart.privateName(tap, "TapUpDetails.kind");
  tap.TapUpDetails = class TapUpDetails extends core.Object {
    get globalPosition() {
      return this[globalPosition$0];
    }
    set globalPosition(value) {
      super.globalPosition = value;
    }
    get localPosition() {
      return this[localPosition$0];
    }
    set localPosition(value) {
      super.localPosition = value;
    }
    get kind() {
      return this[kind$0];
    }
    set kind(value) {
      super.kind = value;
    }
  };
  (tap.TapUpDetails.new = function(opts) {
    let t0;
    let kind = opts && 'kind' in opts ? opts.kind : null;
    let globalPosition = opts && 'globalPosition' in opts ? opts.globalPosition : C[0] || CT.C0;
    let localPosition = opts && 'localPosition' in opts ? opts.localPosition : null;
    this[kind$0] = kind;
    this[globalPosition$0] = globalPosition;
    if (!(globalPosition !== null)) dart.assertFailed(null, I[0], 65, 15, "globalPosition != null");
    this[localPosition$0] = (t0 = localPosition, t0 == null ? globalPosition : t0);
    ;
  }).prototype = tap.TapUpDetails.prototype;
  dart.addTypeTests(tap.TapUpDetails);
  dart.addTypeCaches(tap.TapUpDetails);
  dart.setLibraryUri(tap.TapUpDetails, I[1]);
  dart.setFieldSignature(tap.TapUpDetails, () => ({
    __proto__: dart.getFields(tap.TapUpDetails.__proto__),
    globalPosition: dart.finalFieldType(ui.Offset),
    localPosition: dart.finalFieldType(ui.Offset),
    kind: dart.finalFieldType(ui.PointerDeviceKind)
  }));
  var _sentTapDown = dart.privateName(tap, "_sentTapDown");
  var _wonArenaForPrimaryPointer = dart.privateName(tap, "_wonArenaForPrimaryPointer");
  var _down = dart.privateName(tap, "_down");
  var _up = dart.privateName(tap, "_up");
  var _reset = dart.privateName(tap, "_reset");
  var _checkUp = dart.privateName(tap, "_checkUp");
  var _checkCancel = dart.privateName(tap, "_checkCancel");
  var _checkDown = dart.privateName(tap, "_checkDown");
  tap.BaseTapGestureRecognizer = class BaseTapGestureRecognizer extends recognizer.PrimaryPointerGestureRecognizer {
    addAllowedPointer(event) {
      if (!(event !== null)) dart.assertFailed(null, I[0], 192, 12, "event != null");
      if (this.state === recognizer.GestureRecognizerState.ready) {
        if (this[_down] != null && this[_up] != null) {
          if (!(dart.nullCheck(this[_down]).pointer === dart.nullCheck(this[_up]).pointer)) dart.assertFailed(null, I[0], 197, 16, "_down!.pointer == _up!.pointer");
          this[_reset]();
        }
        if (!(this[_down] == null && this[_up] == null)) dart.assertFailed(null, I[0], 201, 14, "_down == null && _up == null");
        this[_down] = event;
      }
      if (this[_down] != null) {
        super.addAllowedPointer(event);
      }
    }
    startTrackingPointer(pointer, transform = null) {
      if (!(this[_down] != null)) dart.assertFailed(null, I[0], 222, 12, "_down != null");
      super.startTrackingPointer(pointer, transform);
    }
    handlePrimaryPointer(event) {
      if (events.PointerUpEvent.is(event)) {
        this[_up] = event;
        this[_checkUp]();
      } else if (events.PointerCancelEvent.is(event)) {
        this.resolve(arena.GestureDisposition.rejected);
        if (this[_sentTapDown]) {
          this[_checkCancel](event, "");
        }
        this[_reset]();
      } else if (event.buttons !== dart.nullCheck(this[_down]).buttons) {
        this.resolve(arena.GestureDisposition.rejected);
        this.stopTrackingPointer(dart.nullCheck(this.primaryPointer));
      }
    }
    resolve(disposition) {
      if (this[_wonArenaForPrimaryPointer] && disposition === arena.GestureDisposition.rejected) {
        if (!this[_sentTapDown]) dart.assertFailed(null, I[0], 249, 14, "_sentTapDown");
        this[_checkCancel](null, "spontaneous");
        this[_reset]();
      }
      super.resolve(disposition);
    }
    didExceedDeadline() {
      this[_checkDown]();
    }
    acceptGesture(pointer) {
      super.acceptGesture(pointer);
      if (pointer === this.primaryPointer) {
        this[_checkDown]();
        this[_wonArenaForPrimaryPointer] = true;
        this[_checkUp]();
      }
    }
    rejectGesture(pointer) {
      super.rejectGesture(pointer);
      if (pointer === this.primaryPointer) {
        if (!(this.state !== recognizer.GestureRecognizerState.possible)) dart.assertFailed(null, I[0], 276, 14, "state != GestureRecognizerState.possible");
        if (this[_sentTapDown]) this[_checkCancel](null, "forced");
        this[_reset]();
      }
    }
    [_checkDown]() {
      if (this[_sentTapDown]) {
        return;
      }
      this.handleTapDown({down: dart.nullCheck(this[_down])});
      this[_sentTapDown] = true;
    }
    [_checkUp]() {
      if (!this[_wonArenaForPrimaryPointer] || this[_up] == null) {
        return;
      }
      if (!(dart.nullCheck(this[_up]).pointer === dart.nullCheck(this[_down]).pointer)) dart.assertFailed(null, I[0], 295, 12, "_up!.pointer == _down!.pointer");
      this.handleTapUp({down: dart.nullCheck(this[_down]), up: dart.nullCheck(this[_up])});
      this[_reset]();
    }
    [_checkCancel](event, note) {
      this.handleTapCancel({down: dart.nullCheck(this[_down]), cancel: event, reason: note});
    }
    [_reset]() {
      this[_sentTapDown] = false;
      this[_wonArenaForPrimaryPointer] = false;
      this[_up] = null;
      this[_down] = null;
    }
    get debugDescription() {
      return "base tap";
    }
    debugFillProperties(properties) {
      let t0, t0$, t0$0, t0$1;
      super.debugFillProperties(properties);
      properties.add(new diagnostics.FlagProperty.new("wonArenaForPrimaryPointer", {value: this[_wonArenaForPrimaryPointer], ifTrue: "won arena"}));
      properties.add(new (T.DiagnosticsPropertyOfOffset()).new("finalPosition", (t0 = this[_up], t0 == null ? null : t0.position), {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfOffset()).new("finalLocalPosition", (t0$ = this[_up], t0$ == null ? null : t0$.localPosition), {defaultValue: (t0$0 = this[_up], t0$0 == null ? null : t0$0.position)}));
      properties.add(new (T.DiagnosticsPropertyOfint()).new("button", (t0$1 = this[_down], t0$1 == null ? null : t0$1.buttons), {defaultValue: null}));
      properties.add(new diagnostics.FlagProperty.new("sentTapDown", {value: this[_sentTapDown], ifTrue: "sent tap down"}));
    }
  };
  (tap.BaseTapGestureRecognizer.new = function(opts) {
    let debugOwner = opts && 'debugOwner' in opts ? opts.debugOwner : null;
    this[_sentTapDown] = false;
    this[_wonArenaForPrimaryPointer] = false;
    this[_down] = null;
    this[_up] = null;
    tap.BaseTapGestureRecognizer.__proto__.new.call(this, {deadline: constants.kPressTimeout, debugOwner: debugOwner});
    ;
  }).prototype = tap.BaseTapGestureRecognizer.prototype;
  dart.addTypeTests(tap.BaseTapGestureRecognizer);
  dart.addTypeCaches(tap.BaseTapGestureRecognizer);
  dart.setMethodSignature(tap.BaseTapGestureRecognizer, () => ({
    __proto__: dart.getMethods(tap.BaseTapGestureRecognizer.__proto__),
    handlePrimaryPointer: dart.fnType(dart.void, [events.PointerEvent]),
    [_checkDown]: dart.fnType(dart.void, []),
    [_checkUp]: dart.fnType(dart.void, []),
    [_checkCancel]: dart.fnType(dart.void, [dart.nullable(events.PointerCancelEvent), core.String]),
    [_reset]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(tap.BaseTapGestureRecognizer, () => ({
    __proto__: dart.getGetters(tap.BaseTapGestureRecognizer.__proto__),
    debugDescription: core.String
  }));
  dart.setLibraryUri(tap.BaseTapGestureRecognizer, I[1]);
  dart.setFieldSignature(tap.BaseTapGestureRecognizer, () => ({
    __proto__: dart.getFields(tap.BaseTapGestureRecognizer.__proto__),
    [_sentTapDown]: dart.fieldType(core.bool),
    [_wonArenaForPrimaryPointer]: dart.fieldType(core.bool),
    [_down]: dart.fieldType(dart.nullable(events.PointerDownEvent)),
    [_up]: dart.fieldType(dart.nullable(events.PointerUpEvent))
  }));
  var onTapDown = dart.privateName(tap, "TapGestureRecognizer.onTapDown");
  var onTapUp = dart.privateName(tap, "TapGestureRecognizer.onTapUp");
  var onTap = dart.privateName(tap, "TapGestureRecognizer.onTap");
  var onTapCancel = dart.privateName(tap, "TapGestureRecognizer.onTapCancel");
  var onSecondaryTap = dart.privateName(tap, "TapGestureRecognizer.onSecondaryTap");
  var onSecondaryTapDown = dart.privateName(tap, "TapGestureRecognizer.onSecondaryTapDown");
  var onSecondaryTapUp = dart.privateName(tap, "TapGestureRecognizer.onSecondaryTapUp");
  var onSecondaryTapCancel = dart.privateName(tap, "TapGestureRecognizer.onSecondaryTapCancel");
  var onTertiaryTapDown = dart.privateName(tap, "TapGestureRecognizer.onTertiaryTapDown");
  var onTertiaryTapUp = dart.privateName(tap, "TapGestureRecognizer.onTertiaryTapUp");
  var onTertiaryTapCancel = dart.privateName(tap, "TapGestureRecognizer.onTertiaryTapCancel");
  tap.TapGestureRecognizer = class TapGestureRecognizer extends tap.BaseTapGestureRecognizer {
    get onTapDown() {
      return this[onTapDown];
    }
    set onTapDown(value) {
      this[onTapDown] = value;
    }
    get onTapUp() {
      return this[onTapUp];
    }
    set onTapUp(value) {
      this[onTapUp] = value;
    }
    get onTap() {
      return this[onTap];
    }
    set onTap(value) {
      this[onTap] = value;
    }
    get onTapCancel() {
      return this[onTapCancel];
    }
    set onTapCancel(value) {
      this[onTapCancel] = value;
    }
    get onSecondaryTap() {
      return this[onSecondaryTap];
    }
    set onSecondaryTap(value) {
      this[onSecondaryTap] = value;
    }
    get onSecondaryTapDown() {
      return this[onSecondaryTapDown];
    }
    set onSecondaryTapDown(value) {
      this[onSecondaryTapDown] = value;
    }
    get onSecondaryTapUp() {
      return this[onSecondaryTapUp];
    }
    set onSecondaryTapUp(value) {
      this[onSecondaryTapUp] = value;
    }
    get onSecondaryTapCancel() {
      return this[onSecondaryTapCancel];
    }
    set onSecondaryTapCancel(value) {
      this[onSecondaryTapCancel] = value;
    }
    get onTertiaryTapDown() {
      return this[onTertiaryTapDown];
    }
    set onTertiaryTapDown(value) {
      this[onTertiaryTapDown] = value;
    }
    get onTertiaryTapUp() {
      return this[onTertiaryTapUp];
    }
    set onTertiaryTapUp(value) {
      this[onTertiaryTapUp] = value;
    }
    get onTertiaryTapCancel() {
      return this[onTertiaryTapCancel];
    }
    set onTertiaryTapCancel(value) {
      this[onTertiaryTapCancel] = value;
    }
    isPointerAllowed(event) {
      switch (event.buttons) {
        case 1:
        {
          if (this.onTapDown == null && this.onTap == null && this.onTapUp == null && this.onTapCancel == null) return false;
          break;
        }
        case 2:
        {
          if (this.onSecondaryTap == null && this.onSecondaryTapDown == null && this.onSecondaryTapUp == null && this.onSecondaryTapCancel == null) return false;
          break;
        }
        case 4:
        {
          if (this.onTertiaryTapDown == null && this.onTertiaryTapUp == null && this.onTertiaryTapCancel == null) return false;
          break;
        }
        default:
        {
          return false;
        }
      }
      return super.isPointerAllowed(event);
    }
    handleTapDown(opts) {
      let down = opts && 'down' in opts ? opts.down : null;
      let details = new tap.TapDownDetails.new({globalPosition: down.position, localPosition: down.localPosition, kind: this.getKindForPointer(down.pointer)});
      switch (down.buttons) {
        case 1:
        {
          if (this.onTapDown != null) this.invokeCallback(dart.void, "onTapDown", dart.fn(() => dart.nullCheck(this.onTapDown)(details), T.VoidTovoid()));
          break;
        }
        case 2:
        {
          if (this.onSecondaryTapDown != null) this.invokeCallback(dart.void, "onSecondaryTapDown", dart.fn(() => dart.nullCheck(this.onSecondaryTapDown)(details), T.VoidTovoid()));
          break;
        }
        case 4:
        {
          if (this.onTertiaryTapDown != null) this.invokeCallback(dart.void, "onTertiaryTapDown", dart.fn(() => dart.nullCheck(this.onTertiaryTapDown)(details), T.VoidTovoid()));
          break;
        }
        default:
      }
    }
    handleTapUp(opts) {
      let down = opts && 'down' in opts ? opts.down : null;
      let up = opts && 'up' in opts ? opts.up : null;
      let details = new tap.TapUpDetails.new({kind: up.kind, globalPosition: up.position, localPosition: up.localPosition});
      switch (down.buttons) {
        case 1:
        {
          if (this.onTapUp != null) this.invokeCallback(dart.void, "onTapUp", dart.fn(() => dart.nullCheck(this.onTapUp)(details), T.VoidTovoid()));
          if (this.onTap != null) this.invokeCallback(dart.void, "onTap", dart.nullCheck(this.onTap));
          break;
        }
        case 2:
        {
          if (this.onSecondaryTapUp != null) this.invokeCallback(dart.void, "onSecondaryTapUp", dart.fn(() => dart.nullCheck(this.onSecondaryTapUp)(details), T.VoidTovoid()));
          if (this.onSecondaryTap != null) this.invokeCallback(dart.void, "onSecondaryTap", dart.fn(() => dart.nullCheck(this.onSecondaryTap)(), T.VoidTovoid()));
          break;
        }
        case 4:
        {
          if (this.onTertiaryTapUp != null) this.invokeCallback(dart.void, "onTertiaryTapUp", dart.fn(() => dart.nullCheck(this.onTertiaryTapUp)(details), T.VoidTovoid()));
          break;
        }
        default:
      }
    }
    handleTapCancel(opts) {
      let down = opts && 'down' in opts ? opts.down : null;
      let cancel = opts && 'cancel' in opts ? opts.cancel : null;
      let reason = opts && 'reason' in opts ? opts.reason : null;
      let note = reason === "" ? reason : reason + " ";
      switch (down.buttons) {
        case 1:
        {
          if (this.onTapCancel != null) this.invokeCallback(dart.void, note + "onTapCancel", dart.nullCheck(this.onTapCancel));
          break;
        }
        case 2:
        {
          if (this.onSecondaryTapCancel != null) this.invokeCallback(dart.void, note + "onSecondaryTapCancel", dart.nullCheck(this.onSecondaryTapCancel));
          break;
        }
        case 4:
        {
          if (this.onTertiaryTapCancel != null) this.invokeCallback(dart.void, note + "onTertiaryTapCancel", dart.nullCheck(this.onTertiaryTapCancel));
          break;
        }
        default:
      }
    }
    get debugDescription() {
      return "tap";
    }
  };
  (tap.TapGestureRecognizer.new = function(opts) {
    let debugOwner = opts && 'debugOwner' in opts ? opts.debugOwner : null;
    this[onTapDown] = null;
    this[onTapUp] = null;
    this[onTap] = null;
    this[onTapCancel] = null;
    this[onSecondaryTap] = null;
    this[onSecondaryTapDown] = null;
    this[onSecondaryTapUp] = null;
    this[onSecondaryTapCancel] = null;
    this[onTertiaryTapDown] = null;
    this[onTertiaryTapUp] = null;
    this[onTertiaryTapCancel] = null;
    tap.TapGestureRecognizer.__proto__.new.call(this, {debugOwner: debugOwner});
    ;
  }).prototype = tap.TapGestureRecognizer.prototype;
  dart.addTypeTests(tap.TapGestureRecognizer);
  dart.addTypeCaches(tap.TapGestureRecognizer);
  dart.setMethodSignature(tap.TapGestureRecognizer, () => ({
    __proto__: dart.getMethods(tap.TapGestureRecognizer.__proto__),
    handleTapDown: dart.fnType(dart.void, [], {}, {down: events.PointerDownEvent}),
    handleTapUp: dart.fnType(dart.void, [], {}, {down: events.PointerDownEvent, up: events.PointerUpEvent}),
    handleTapCancel: dart.fnType(dart.void, [], {cancel: dart.nullable(events.PointerCancelEvent)}, {down: events.PointerDownEvent, reason: core.String})
  }));
  dart.setLibraryUri(tap.TapGestureRecognizer, I[1]);
  dart.setFieldSignature(tap.TapGestureRecognizer, () => ({
    __proto__: dart.getFields(tap.TapGestureRecognizer.__proto__),
    onTapDown: dart.fieldType(dart.nullable(dart.fnType(dart.void, [tap.TapDownDetails]))),
    onTapUp: dart.fieldType(dart.nullable(dart.fnType(dart.void, [tap.TapUpDetails]))),
    onTap: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTapCancel: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    onSecondaryTap: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    onSecondaryTapDown: dart.fieldType(dart.nullable(dart.fnType(dart.void, [tap.TapDownDetails]))),
    onSecondaryTapUp: dart.fieldType(dart.nullable(dart.fnType(dart.void, [tap.TapUpDetails]))),
    onSecondaryTapCancel: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    onTertiaryTapDown: dart.fieldType(dart.nullable(dart.fnType(dart.void, [tap.TapDownDetails]))),
    onTertiaryTapUp: dart.fieldType(dart.nullable(dart.fnType(dart.void, [tap.TapUpDetails]))),
    onTertiaryTapCancel: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
  }));
  dart.trackLibraries("packages/flutter/src/gestures/tap.dart", {
    "package:flutter/src/gestures/tap.dart": tap
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["tap.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/flutter/src/gestures/tap.dart.lib.js"}');
  // Exports:
  return {
    src__gestures__tap: tap
  };
}));

//# sourceMappingURL=tap.dart.lib.js.map
=======
        __proto__: core.Duration.prototype,
        [Duration__duration]: 1000
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "heightFactor",
        [_Location_column]: 11,
        [_Location_line]: 337,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 338,
        [_Location_file]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "alignment",
        [_Location_column]: 11,
        [_Location_line]: 339,
        [_Location_file]: null
      });
    },
    get C2() {
      return C[2] = dart.constList([C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5], widget_inspector._Location);
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 30,
        [_Location_line]: 336,
        [_Location_file]: "file:///D:/DevTools/flutter/packages/flutter/lib/src/widgets/draggable_scrollable_sheet.dart"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 48,
        [_Location_line]: 341,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.constList([C[8] || CT.C8], widget_inspector._Location);
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[7] || CT.C7,
        [_Location_name]: null,
        [_Location_column]: 41,
        [_Location_line]: 341,
        [_Location_file]: "file:///D:/DevTools/flutter/packages/flutter/lib/src/widgets/draggable_scrollable_sheet.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 334,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.constList([C[11] || CT.C11], widget_inspector._Location);
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[10] || CT.C10,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 333,
        [_Location_file]: "file:///D:/DevTools/flutter/packages/flutter/lib/src/widgets/draggable_scrollable_sheet.dart"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 36,
        [_Location_line]: 557,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "notifier",
        [_Location_column]: 50,
        [_Location_line]: 557,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.constList([C[14] || CT.C14, C[15] || CT.C15], widget_inspector._Location);
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[13] || CT.C13,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 557,
        [_Location_file]: "file:///D:/DevTools/flutter/packages/flutter/lib/src/widgets/draggable_scrollable_sheet.dart"
      });
    }
  }, false);
  var C = Array(16).fill(void 0);
  var I = [
    "file:///D:/DevTools/flutter/packages/flutter/lib/src/widgets/draggable_scrollable_sheet.dart",
    "package:flutter/src/widgets/draggable_scrollable_sheet.dart"
  ];
  var initialChildSize$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.initialChildSize");
  var minChildSize$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.minChildSize");
  var maxChildSize$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.maxChildSize");
  var expand$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.expand");
  var builder$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableSheet.builder");
  draggable_scrollable_sheet.DraggableScrollableSheet = class DraggableScrollableSheet extends framework.StatefulWidget {
    get initialChildSize() {
      return this[initialChildSize$];
    }
    set initialChildSize(value) {
      super.initialChildSize = value;
    }
    get minChildSize() {
      return this[minChildSize$];
    }
    set minChildSize(value) {
      super.minChildSize = value;
    }
    get maxChildSize() {
      return this[maxChildSize$];
    }
    set maxChildSize(value) {
      super.maxChildSize = value;
    }
    get expand() {
      return this[expand$];
    }
    set expand(value) {
      super.expand = value;
    }
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    createState() {
      return new draggable_scrollable_sheet._DraggableScrollableSheetState.new();
    }
  };
  (draggable_scrollable_sheet.DraggableScrollableSheet.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let initialChildSize = opts && 'initialChildSize' in opts ? opts.initialChildSize : 0.5;
    let minChildSize = opts && 'minChildSize' in opts ? opts.minChildSize : 0.25;
    let maxChildSize = opts && 'maxChildSize' in opts ? opts.maxChildSize : 1;
    let expand = opts && 'expand' in opts ? opts.expand : true;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[initialChildSize$] = initialChildSize;
    this[minChildSize$] = minChildSize;
    this[maxChildSize$] = maxChildSize;
    this[expand$] = expand;
    this[builder$] = builder;
    if (!(initialChildSize !== null)) dart.assertFailed(null, I[0], 110, 16, "initialChildSize != null");
    if (!(minChildSize !== null)) dart.assertFailed(null, I[0], 111, 16, "minChildSize != null");
    if (!(maxChildSize !== null)) dart.assertFailed(null, I[0], 112, 16, "maxChildSize != null");
    if (!(minChildSize >= 0.0)) dart.assertFailed(null, I[0], 113, 16, "minChildSize >= 0.0");
    if (!(maxChildSize <= 1.0)) dart.assertFailed(null, I[0], 114, 16, "maxChildSize <= 1.0");
    if (!(minChildSize <= initialChildSize)) dart.assertFailed(null, I[0], 115, 16, "minChildSize <= initialChildSize");
    if (!(initialChildSize <= maxChildSize)) dart.assertFailed(null, I[0], 116, 16, "initialChildSize <= maxChildSize");
    if (!(expand !== null)) dart.assertFailed(null, I[0], 117, 16, "expand != null");
    if (!(builder !== null)) dart.assertFailed(null, I[0], 118, 16, "builder != null");
    draggable_scrollable_sheet.DraggableScrollableSheet.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = draggable_scrollable_sheet.DraggableScrollableSheet.prototype;
  dart.addTypeTests(draggable_scrollable_sheet.DraggableScrollableSheet);
  dart.addTypeCaches(draggable_scrollable_sheet.DraggableScrollableSheet);
  dart.setMethodSignature(draggable_scrollable_sheet.DraggableScrollableSheet, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet.DraggableScrollableSheet.__proto__),
    createState: dart.fnType(draggable_scrollable_sheet._DraggableScrollableSheetState, [])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet.DraggableScrollableSheet, I[1]);
  dart.setFieldSignature(draggable_scrollable_sheet.DraggableScrollableSheet, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet.DraggableScrollableSheet.__proto__),
    initialChildSize: dart.finalFieldType(core.double),
    minChildSize: dart.finalFieldType(core.double),
    maxChildSize: dart.finalFieldType(core.double),
    expand: dart.finalFieldType(core.bool),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, scroll_controller.ScrollController]))
  }));
  var extent$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.extent");
  var minExtent$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.minExtent");
  var maxExtent$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.maxExtent");
  var initialExtent$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.initialExtent");
  var context$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableNotification.context");
  const Notification_ViewportNotificationMixin$36 = class Notification_ViewportNotificationMixin extends notification_listener.Notification {};
  (Notification_ViewportNotificationMixin$36.new = function() {
    scroll_notification.ViewportNotificationMixin[dart.mixinNew].call(this);
    Notification_ViewportNotificationMixin$36.__proto__.new.call(this);
  }).prototype = Notification_ViewportNotificationMixin$36.prototype;
  dart.applyMixin(Notification_ViewportNotificationMixin$36, scroll_notification.ViewportNotificationMixin);
  draggable_scrollable_sheet.DraggableScrollableNotification = class DraggableScrollableNotification extends Notification_ViewportNotificationMixin$36 {
    get extent() {
      return this[extent$];
    }
    set extent(value) {
      super.extent = value;
    }
    get minExtent() {
      return this[minExtent$];
    }
    set minExtent(value) {
      super.minExtent = value;
    }
    get maxExtent() {
      return this[maxExtent$];
    }
    set maxExtent(value) {
      super.maxExtent = value;
    }
    get initialExtent() {
      return this[initialExtent$];
    }
    set initialExtent(value) {
      super.initialExtent = value;
    }
    get context() {
      return this[context$];
    }
    set context(value) {
      super.context = value;
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add]("minExtent: " + dart.str(this.minExtent) + ", extent: " + dart.str(this.extent) + ", maxExtent: " + dart.str(this.maxExtent) + ", initialExtent: " + dart.str(this.initialExtent));
    }
  };
  (draggable_scrollable_sheet.DraggableScrollableNotification.new = function(opts) {
    let extent = opts && 'extent' in opts ? opts.extent : null;
    let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
    let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
    let initialExtent = opts && 'initialExtent' in opts ? opts.initialExtent : null;
    let context = opts && 'context' in opts ? opts.context : null;
    this[extent$] = extent;
    this[minExtent$] = minExtent;
    this[maxExtent$] = maxExtent;
    this[initialExtent$] = initialExtent;
    this[context$] = context;
    if (!(extent !== null)) dart.assertFailed(null, I[0], 190, 15, "extent != null");
    if (!(initialExtent !== null)) dart.assertFailed(null, I[0], 191, 15, "initialExtent != null");
    if (!(minExtent !== null)) dart.assertFailed(null, I[0], 192, 15, "minExtent != null");
    if (!(maxExtent !== null)) dart.assertFailed(null, I[0], 193, 15, "maxExtent != null");
    if (!(0.0 <= minExtent)) dart.assertFailed(null, I[0], 194, 15, "0.0 <= minExtent");
    if (!(maxExtent <= 1.0)) dart.assertFailed(null, I[0], 195, 15, "maxExtent <= 1.0");
    if (!(minExtent <= extent)) dart.assertFailed(null, I[0], 196, 15, "minExtent <= extent");
    if (!(minExtent <= initialExtent)) dart.assertFailed(null, I[0], 197, 15, "minExtent <= initialExtent");
    if (!(extent <= maxExtent)) dart.assertFailed(null, I[0], 198, 15, "extent <= maxExtent");
    if (!(initialExtent <= maxExtent)) dart.assertFailed(null, I[0], 199, 15, "initialExtent <= maxExtent");
    if (!(context !== null)) dart.assertFailed(null, I[0], 200, 15, "context != null");
    draggable_scrollable_sheet.DraggableScrollableNotification.__proto__.new.call(this);
    ;
  }).prototype = draggable_scrollable_sheet.DraggableScrollableNotification.prototype;
  dart.addTypeTests(draggable_scrollable_sheet.DraggableScrollableNotification);
  dart.addTypeCaches(draggable_scrollable_sheet.DraggableScrollableNotification);
  dart.setLibraryUri(draggable_scrollable_sheet.DraggableScrollableNotification, I[1]);
  dart.setFieldSignature(draggable_scrollable_sheet.DraggableScrollableNotification, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet.DraggableScrollableNotification.__proto__),
    extent: dart.finalFieldType(core.double),
    minExtent: dart.finalFieldType(core.double),
    maxExtent: dart.finalFieldType(core.double),
    initialExtent: dart.finalFieldType(core.double),
    context: dart.finalFieldType(framework.BuildContext)
  }));
  var _currentExtent = dart.privateName(draggable_scrollable_sheet, "_currentExtent");
  draggable_scrollable_sheet._DraggableSheetExtent = class _DraggableSheetExtent extends core.Object {
    get isAtMin() {
      return this.minExtent >= this[_currentExtent].value;
    }
    get isAtMax() {
      return this.maxExtent <= this[_currentExtent].value;
    }
    set currentExtent(value) {
      if (!(value !== null)) dart.assertFailed(null, I[0], 265, 12, "value != null");
      this[_currentExtent].value = value[$clamp](this.minExtent, this.maxExtent);
    }
    get currentExtent() {
      return this[_currentExtent].value;
    }
    get additionalMinExtent() {
      return this.isAtMin ? 0.0 : 1.0;
    }
    get additionalMaxExtent() {
      return this.isAtMax ? 0.0 : 1.0;
    }
    addPixelDelta(delta, context) {
      if (this.availablePixels === 0) {
        return;
      }
      this.currentExtent = this.currentExtent + delta / this.availablePixels * this.maxExtent;
      new draggable_scrollable_sheet.DraggableScrollableNotification.new({minExtent: this.minExtent, maxExtent: this.maxExtent, extent: this.currentExtent, initialExtent: this.initialExtent, context: context}).dispatch(context);
    }
  };
  (draggable_scrollable_sheet._DraggableSheetExtent.new = function(opts) {
    let t0;
    let minExtent = opts && 'minExtent' in opts ? opts.minExtent : null;
    let maxExtent = opts && 'maxExtent' in opts ? opts.maxExtent : null;
    let initialExtent = opts && 'initialExtent' in opts ? opts.initialExtent : null;
    let listener = opts && 'listener' in opts ? opts.listener : null;
    this.minExtent = minExtent;
    this.maxExtent = maxExtent;
    this.initialExtent = initialExtent;
    if (!(minExtent !== null)) dart.assertFailed(null, I[0], 245, 15, "minExtent != null");
    if (!(maxExtent !== null)) dart.assertFailed(null, I[0], 246, 15, "maxExtent != null");
    if (!(initialExtent !== null)) dart.assertFailed(null, I[0], 247, 15, "initialExtent != null");
    if (!(minExtent >= 0)) dart.assertFailed(null, I[0], 248, 15, "minExtent >= 0");
    if (!(maxExtent <= 1)) dart.assertFailed(null, I[0], 249, 15, "maxExtent <= 1");
    if (!(minExtent <= initialExtent)) dart.assertFailed(null, I[0], 250, 15, "minExtent <= initialExtent");
    if (!(initialExtent <= maxExtent)) dart.assertFailed(null, I[0], 251, 15, "initialExtent <= maxExtent");
    this[_currentExtent] = (t0 = new (T.ValueNotifierOfdouble()).new(initialExtent), (() => {
      t0.addListener(listener);
      return t0;
    })());
    this.availablePixels = 1 / 0;
    ;
  }).prototype = draggable_scrollable_sheet._DraggableSheetExtent.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._DraggableSheetExtent);
  dart.addTypeCaches(draggable_scrollable_sheet._DraggableSheetExtent);
  dart.setMethodSignature(draggable_scrollable_sheet._DraggableSheetExtent, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._DraggableSheetExtent.__proto__),
    addPixelDelta: dart.fnType(dart.void, [core.double, framework.BuildContext])
  }));
  dart.setGetterSignature(draggable_scrollable_sheet._DraggableSheetExtent, () => ({
    __proto__: dart.getGetters(draggable_scrollable_sheet._DraggableSheetExtent.__proto__),
    isAtMin: core.bool,
    isAtMax: core.bool,
    currentExtent: core.double,
    additionalMinExtent: core.double,
    additionalMaxExtent: core.double
  }));
  dart.setSetterSignature(draggable_scrollable_sheet._DraggableSheetExtent, () => ({
    __proto__: dart.getSetters(draggable_scrollable_sheet._DraggableSheetExtent.__proto__),
    currentExtent: core.double
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._DraggableSheetExtent, I[1]);
  dart.setFieldSignature(draggable_scrollable_sheet._DraggableSheetExtent, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._DraggableSheetExtent.__proto__),
    minExtent: dart.finalFieldType(core.double),
    maxExtent: dart.finalFieldType(core.double),
    initialExtent: dart.finalFieldType(core.double),
    [_currentExtent]: dart.finalFieldType(change_notifier.ValueNotifier$(core.double)),
    availablePixels: dart.fieldType(core.double)
  }));
  var ___DraggableScrollableSheetState__scrollController = dart.privateName(draggable_scrollable_sheet, "_#_DraggableScrollableSheetState#_scrollController");
  var ___DraggableScrollableSheetState__extent = dart.privateName(draggable_scrollable_sheet, "_#_DraggableScrollableSheetState#_extent");
  var _scrollController = dart.privateName(draggable_scrollable_sheet, "_scrollController");
  var _extent = dart.privateName(draggable_scrollable_sheet, "_extent");
  var _setExtent = dart.privateName(draggable_scrollable_sheet, "_setExtent");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  draggable_scrollable_sheet._DraggableScrollableSheetState = class _DraggableScrollableSheetState extends framework.State$(draggable_scrollable_sheet.DraggableScrollableSheet) {
    get [_scrollController]() {
      let t0;
      t0 = this[___DraggableScrollableSheetState__scrollController];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_scrollController")) : t0;
    }
    set [_scrollController](t0) {
      this[___DraggableScrollableSheetState__scrollController] = t0;
    }
    get [_extent]() {
      let t1;
      t1 = this[___DraggableScrollableSheetState__extent];
      return t1 == null ? dart.throw(new _internal.LateError.fieldNI("_extent")) : t1;
    }
    set [_extent](t1) {
      this[___DraggableScrollableSheetState__extent] = t1;
    }
    initState() {
      super.initState();
      this[_extent] = new draggable_scrollable_sheet._DraggableSheetExtent.new({minExtent: this.widget.minChildSize, maxExtent: this.widget.maxChildSize, initialExtent: this.widget.initialChildSize, listener: dart.bind(this, _setExtent)});
      this[_scrollController] = new draggable_scrollable_sheet._DraggableScrollableSheetScrollController.new({extent: this[_extent]});
    }
    didChangeDependencies() {
      super.didChangeDependencies();
      if (draggable_scrollable_sheet._InheritedResetNotifier.shouldReset(this.context)) {
        if (this[_scrollController].offset !== 0.0) {
          this[_scrollController].animateTo(0.0, {duration: C[0] || CT.C0, curve: curves.Curves.linear});
        }
        this[_extent][_currentExtent].value = this[_extent].initialExtent;
      }
    }
    [_setExtent]() {
      this.setState(dart.fn(() => {
      }, T.VoidTovoid()));
    }
    build(context) {
      return new layout_builder.LayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let t4, t3, t2;
          this[_extent].availablePixels = this.widget.maxChildSize * constraints.biggest.height;
          let sheet = new basic.FractionallySizedBox.new({heightFactor: this[_extent].currentExtent, child: (t2 = this.widget, t3 = context, t4 = this[_scrollController], t2.builder(t3, t4)), alignment: alignment.Alignment.bottomCenter, $creationLocationd_0dea112b090073317d4: C[1] || CT.C1});
          return this.widget.expand ? new basic.SizedBox.expand({child: sheet, $creationLocationd_0dea112b090073317d4: C[6] || CT.C6}) : sheet;
        }, T.BuildContextAndBoxConstraintsToWidget()), $creationLocationd_0dea112b090073317d4: C[9] || CT.C9});
    }
    dispose() {
      this[_scrollController].dispose();
      super.dispose();
    }
  };
  (draggable_scrollable_sheet._DraggableScrollableSheetState.new = function() {
    this[___DraggableScrollableSheetState__scrollController] = null;
    this[___DraggableScrollableSheetState__extent] = null;
    draggable_scrollable_sheet._DraggableScrollableSheetState.__proto__.new.call(this);
    ;
  }).prototype = draggable_scrollable_sheet._DraggableScrollableSheetState.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._DraggableScrollableSheetState);
  dart.addTypeCaches(draggable_scrollable_sheet._DraggableScrollableSheetState);
  dart.setMethodSignature(draggable_scrollable_sheet._DraggableScrollableSheetState, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._DraggableScrollableSheetState.__proto__),
    [_setExtent]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(draggable_scrollable_sheet._DraggableScrollableSheetState, () => ({
    __proto__: dart.getGetters(draggable_scrollable_sheet._DraggableScrollableSheetState.__proto__),
    [_scrollController]: draggable_scrollable_sheet._DraggableScrollableSheetScrollController,
    [_extent]: draggable_scrollable_sheet._DraggableSheetExtent
  }));
  dart.setSetterSignature(draggable_scrollable_sheet._DraggableScrollableSheetState, () => ({
    __proto__: dart.getSetters(draggable_scrollable_sheet._DraggableScrollableSheetState.__proto__),
    [_scrollController]: draggable_scrollable_sheet._DraggableScrollableSheetScrollController,
    [_extent]: draggable_scrollable_sheet._DraggableSheetExtent
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._DraggableScrollableSheetState, I[1]);
  dart.setFieldSignature(draggable_scrollable_sheet._DraggableScrollableSheetState, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._DraggableScrollableSheetState.__proto__),
    [___DraggableScrollableSheetState__scrollController]: dart.fieldType(dart.nullable(draggable_scrollable_sheet._DraggableScrollableSheetScrollController)),
    [___DraggableScrollableSheetState__extent]: dart.fieldType(dart.nullable(draggable_scrollable_sheet._DraggableSheetExtent))
  }));
  draggable_scrollable_sheet._DraggableScrollableSheetScrollController = class _DraggableScrollableSheetScrollController extends scroll_controller.ScrollController {
    createScrollPosition(physics, context, oldPosition) {
      return new draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.new({physics: physics, context: context, oldPosition: oldPosition, extent: this.extent});
    }
    debugFillDescription(description) {
      super.debugFillDescription(description);
      description[$add]("extent: " + dart.str(this.extent));
    }
  };
  (draggable_scrollable_sheet._DraggableScrollableSheetScrollController.new = function(opts) {
    let initialScrollOffset = opts && 'initialScrollOffset' in opts ? opts.initialScrollOffset : 0;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let extent = opts && 'extent' in opts ? opts.extent : null;
    this.extent = extent;
    if (!(extent !== null)) dart.assertFailed(null, I[0], 372, 15, "extent != null");
    draggable_scrollable_sheet._DraggableScrollableSheetScrollController.__proto__.new.call(this, {debugLabel: debugLabel, initialScrollOffset: initialScrollOffset});
    ;
  }).prototype = draggable_scrollable_sheet._DraggableScrollableSheetScrollController.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._DraggableScrollableSheetScrollController);
  dart.addTypeCaches(draggable_scrollable_sheet._DraggableScrollableSheetScrollController);
  dart.setMethodSignature(draggable_scrollable_sheet._DraggableScrollableSheetScrollController, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._DraggableScrollableSheetScrollController.__proto__),
    createScrollPosition: dart.fnType(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition, [scroll_physics.ScrollPhysics, scroll_context.ScrollContext, dart.nullable(scroll_position.ScrollPosition)])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._DraggableScrollableSheetScrollController, I[1]);
  dart.setFieldSignature(draggable_scrollable_sheet._DraggableScrollableSheetScrollController, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._DraggableScrollableSheetScrollController.__proto__),
    extent: dart.finalFieldType(draggable_scrollable_sheet._DraggableSheetExtent)
  }));
  var _dragCancelCallback = dart.privateName(draggable_scrollable_sheet, "_dragCancelCallback");
  draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition = class _DraggableScrollableSheetScrollPosition extends scroll_position_with_single_context.ScrollPositionWithSingleContext {
    get listShouldScroll() {
      return this.pixels > 0.0;
    }
    applyContentDimensions(minScrollExtent, maxScrollExtent) {
      return super.applyContentDimensions(minScrollExtent - this.extent.additionalMinExtent, maxScrollExtent + this.extent.additionalMaxExtent);
    }
    applyUserOffset(delta) {
      if (!this.listShouldScroll && (!(this.extent.isAtMin || this.extent.isAtMax) || this.extent.isAtMin && delta < 0 || this.extent.isAtMax && delta > 0)) {
        this.extent.addPixelDelta(-delta, dart.nullCheck(this.context.notificationContext));
      } else {
        super.applyUserOffset(delta);
      }
    }
    goBallistic(velocity) {
      let t2, t2$;
      if (velocity === 0.0 || velocity < 0.0 && this.listShouldScroll || velocity > 0.0 && this.extent.isAtMax) {
        super.goBallistic(velocity);
        return;
      }
      t2 = this[_dragCancelCallback];
      t2 == null ? null : t2();
      this[_dragCancelCallback] = null;
      let simulation = new scroll_simulation.ClampingScrollSimulation.new({position: this.extent.currentExtent, velocity: velocity, tolerance: this.physics.tolerance});
      let ballisticController = new animation_controller.AnimationController.unbounded({debugLabel: object.objectRuntimeType(this, "_DraggableScrollableSheetPosition"), vsync: this.context.vsync});
      let lastDelta = 0.0;
      const _tick = () => {
        let delta = ballisticController.value - lastDelta;
        lastDelta = ballisticController.value;
        this.extent.addPixelDelta(delta, dart.nullCheck(this.context.notificationContext));
        if (velocity > 0 && this.extent.isAtMax || velocity < 0 && this.extent.isAtMin) {
          velocity = ballisticController.velocity + this.physics.tolerance.velocity * ballisticController.velocity[$sign];
          super.goBallistic(velocity);
          ballisticController.stop();
        } else if (ballisticController.isCompleted) {
          super.goBallistic(0.0);
        }
      };
      dart.fn(_tick, T.VoidTovoid());
      t2$ = ballisticController;
      (() => {
        t2$.addListener(_tick);
        t2$.animateWith(simulation).whenCompleteOrCancel(dart.bind(ballisticController, 'dispose'));
        return t2$;
      })();
    }
    drag(details, dragCancelCallback) {
      this[_dragCancelCallback] = dragCancelCallback;
      return super.drag(details, dragCancelCallback);
    }
  };
  (draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.new = function(opts) {
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let context = opts && 'context' in opts ? opts.context : null;
    let initialPixels = opts && 'initialPixels' in opts ? opts.initialPixels : 0;
    let keepScrollOffset = opts && 'keepScrollOffset' in opts ? opts.keepScrollOffset : true;
    let oldPosition = opts && 'oldPosition' in opts ? opts.oldPosition : null;
    let debugLabel = opts && 'debugLabel' in opts ? opts.debugLabel : null;
    let extent = opts && 'extent' in opts ? opts.extent : null;
    this[_dragCancelCallback] = null;
    this.extent = extent;
    if (!(extent !== null)) dart.assertFailed(null, I[0], 423, 16, "extent != null");
    draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.__proto__.new.call(this, {physics: physics, context: context, initialPixels: initialPixels, keepScrollOffset: keepScrollOffset, oldPosition: oldPosition, debugLabel: debugLabel});
    ;
  }).prototype = draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition);
  dart.addTypeCaches(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition);
  dart.setGetterSignature(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition, () => ({
    __proto__: dart.getGetters(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.__proto__),
    listShouldScroll: core.bool
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition, I[1]);
  dart.setFieldSignature(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._DraggableScrollableSheetScrollPosition.__proto__),
    [_dragCancelCallback]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
    extent: dart.finalFieldType(draggable_scrollable_sheet._DraggableSheetExtent)
  }));
  var child$ = dart.privateName(draggable_scrollable_sheet, "DraggableScrollableActuator.child");
  var _notifier = dart.privateName(draggable_scrollable_sheet, "_notifier");
  var _sendReset = dart.privateName(draggable_scrollable_sheet, "_sendReset");
  draggable_scrollable_sheet.DraggableScrollableActuator = class DraggableScrollableActuator extends framework.StatelessWidget {
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    static reset(context) {
      let notifier = context.dependOnInheritedWidgetOfExactType(draggable_scrollable_sheet._InheritedResetNotifier);
      if (notifier == null) {
        return false;
      }
      return notifier[_sendReset]();
    }
    build(context) {
      return new draggable_scrollable_sheet._InheritedResetNotifier.new({child: this.child, notifier: this[_notifier], $creationLocationd_0dea112b090073317d4: C[12] || CT.C12});
    }
  };
  (draggable_scrollable_sheet.DraggableScrollableActuator.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[_notifier] = new draggable_scrollable_sheet._ResetNotifier.new();
    this[child$] = child;
    draggable_scrollable_sheet.DraggableScrollableActuator.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = draggable_scrollable_sheet.DraggableScrollableActuator.prototype;
  dart.addTypeTests(draggable_scrollable_sheet.DraggableScrollableActuator);
  dart.addTypeCaches(draggable_scrollable_sheet.DraggableScrollableActuator);
  dart.setMethodSignature(draggable_scrollable_sheet.DraggableScrollableActuator, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet.DraggableScrollableActuator.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet.DraggableScrollableActuator, I[1]);
  dart.setFieldSignature(draggable_scrollable_sheet.DraggableScrollableActuator, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet.DraggableScrollableActuator.__proto__),
    child: dart.finalFieldType(framework.Widget),
    [_notifier]: dart.finalFieldType(draggable_scrollable_sheet._ResetNotifier)
  }));
  var _wasCalled = dart.privateName(draggable_scrollable_sheet, "_wasCalled");
  draggable_scrollable_sheet._ResetNotifier = class _ResetNotifier extends change_notifier.ChangeNotifier {
    sendReset() {
      if (!this.hasListeners) {
        return false;
      }
      this[_wasCalled] = true;
      this.notifyListeners();
      return true;
    }
  };
  (draggable_scrollable_sheet._ResetNotifier.new = function() {
    this[_wasCalled] = false;
    draggable_scrollable_sheet._ResetNotifier.__proto__.new.call(this);
    ;
  }).prototype = draggable_scrollable_sheet._ResetNotifier.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._ResetNotifier);
  dart.addTypeCaches(draggable_scrollable_sheet._ResetNotifier);
  dart.setMethodSignature(draggable_scrollable_sheet._ResetNotifier, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._ResetNotifier.__proto__),
    sendReset: dart.fnType(core.bool, [])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._ResetNotifier, I[1]);
  dart.setFieldSignature(draggable_scrollable_sheet._ResetNotifier, () => ({
    __proto__: dart.getFields(draggable_scrollable_sheet._ResetNotifier.__proto__),
    [_wasCalled]: dart.fieldType(core.bool)
  }));
  draggable_scrollable_sheet._InheritedResetNotifier = class _InheritedResetNotifier extends inherited_notifier.InheritedNotifier$(draggable_scrollable_sheet._ResetNotifier) {
    [_sendReset]() {
      return dart.nullCheck(this.notifier).sendReset();
    }
    static shouldReset(context) {
      let widget = context.dependOnInheritedWidgetOfExactType(draggable_scrollable_sheet._InheritedResetNotifier);
      if (widget == null) {
        return false;
      }
      if (!draggable_scrollable_sheet._InheritedResetNotifier.is(widget)) dart.assertFailed(null, I[0], 604, 12, "widget is _InheritedResetNotifier");
      let inheritedNotifier = draggable_scrollable_sheet._InheritedResetNotifier.as(widget);
      let wasCalled = dart.nullCheck(inheritedNotifier.notifier)[_wasCalled];
      dart.nullCheck(inheritedNotifier.notifier)[_wasCalled] = false;
      return wasCalled;
    }
  };
  (draggable_scrollable_sheet._InheritedResetNotifier.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let notifier = opts && 'notifier' in opts ? opts.notifier : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    draggable_scrollable_sheet._InheritedResetNotifier.__proto__.new.call(this, {key: key, child: child, notifier: notifier, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = draggable_scrollable_sheet._InheritedResetNotifier.prototype;
  dart.addTypeTests(draggable_scrollable_sheet._InheritedResetNotifier);
  dart.addTypeCaches(draggable_scrollable_sheet._InheritedResetNotifier);
  dart.setMethodSignature(draggable_scrollable_sheet._InheritedResetNotifier, () => ({
    __proto__: dart.getMethods(draggable_scrollable_sheet._InheritedResetNotifier.__proto__),
    [_sendReset]: dart.fnType(core.bool, [])
  }));
  dart.setLibraryUri(draggable_scrollable_sheet._InheritedResetNotifier, I[1]);
  dart.trackLibraries("packages/flutter/src/widgets/draggable_scrollable_sheet.dart", {
    "package:flutter/src/widgets/draggable_scrollable_sheet.dart": draggable_scrollable_sheet
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["draggable_scrollable_sheet.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4He;;;;;;IAMA;;;;;;IAMA;;;;;;IAUF;;;;;;IAKmB;;;;;;;AAGkB;IAAgC;;;QAnDzE;QACA;QACA;QACA;QACA;QACS;;IAJT;IACA;IACA;IACA;IACS;UACH,AAAiB,gBAAD;UAChB,AAAa,YAAD;UACZ,AAAa,YAAD;UACZ,AAAa,YAAD,IAAI;UAChB,AAAa,YAAD,IAAI;UAChB,AAAa,YAAD,IAAI,gBAAgB;UAChC,AAAiB,gBAAD,IAAI,YAAY;UAChC,AAAO,MAAD;UACN,AAAQ,OAAD;AACd,uFAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoFR;;;;;;IAGA;;;;;;IAGA;;;;;;IAGA;;;;;;IAOM;;;;;;yBAGoB;AACE,MAAjC,2BAAqB,WAAW;AACyE,MAA/G,AAAY,WAAD,OAAK,AAA8F,yBAAjF,kBAAS,wBAAW,eAAM,2BAAc,kBAAS,+BAAkB;IAClG;;;QAxCgB;QACA;QACA;QACA;QACA;IAJA;IACA;IACA;IACA;IACA;UACJ,AAAO,MAAD;UACN,AAAc,aAAD;UACb,AAAU,SAAD;UACT,AAAU,SAAD;UACT,AAAI,OAAG,SAAS;UAChB,AAAU,SAAD,IAAI;UACb,AAAU,SAAD,IAAI,MAAM;UACnB,AAAU,SAAD,IAAI,aAAa;UAC1B,AAAO,MAAD,IAAI,SAAS;UACnB,AAAc,aAAD,IAAI,SAAS;UAC1B,AAAQ,OAAD;AAhBnB;;EAgB4B;;;;;;;;;;;;;;;AA6DR,YAAA,AAAU,mBAAG,AAAe;IAAK;;AACjC,YAAA,AAAU,mBAAG,AAAe;IAAK;sBAE5B;AACvB,YAAO,AAAM,KAAD;AAC4C,MAAxD,AAAe,6BAAQ,AAAM,KAAD,SAAO,gBAAW;IAChD;;AAC4B,YAAA,AAAe;IAAK;;AAEd,4BAAU,MAAM;IAAG;;AACnB,4BAAU,MAAM;IAAG;kBAI3B,OAAoB;AAC5C,UAAI,AAAgB,yBAAG;AACrB;;AAEkD,MAApD,qBAAA,AAAc,qBAAG,AAAM,AAAkB,KAAnB,GAAG,uBAAkB;AAOxB,MANnB,AAME,+EALW,2BACA,wBACH,mCACO,6BACN,OAAO,YACP,OAAO;IACpB;;;;QA9CgB;QACA;QACA;QACQ;IAHR;IACA;IACA;UAEJ,AAAU,SAAD;UACT,AAAU,SAAD;UACT,AAAc,aAAD;UACb,AAAU,SAAD,IAAI;UACb,AAAU,SAAD,IAAI;UACb,AAAU,SAAD,IAAI,aAAa;UAC1B,AAAc,aAAD,IAAI,SAAS;IAClB,6BAAE,oCAAsB,aAAa,GAAnC;AAAsC,qBAAY,QAAQ;;;IAC3D;;EAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCS;;IAAiB;;AAAjB;IAAiB;;;AACrC;;IAAO;;AAAP;IAAO;;AAIf,MAAX;AAML,MALD,gBAAU,qEACG,AAAO,qCACP,AAAO,yCACH,AAAO,kDACZ;AAEkE,MAA9E,0BAAoB,sFAAkD;IACxE;;AAI+B,MAAvB;AACN,UAA4B,+DAAY;AAItC,YAAI,AAAkB,mCAAU;AAK7B,UAJD,AAAkB,kCAChB,sCAEc;;AAGkC,QAApD,AAAQ,AAAe,sCAAQ,AAAQ;;IAE3C;;AAKI,MAFF,cAAS;;IAIX;UAG0B;AACxB,YAAO,gDACI,SAAc,SAAwB;;AAC6B,UAA1E,AAAQ,gCAAkB,AAAO,AAAa,2BAAE,AAAY,AAAQ,WAAT;AAC9C,sBAAQ,kDACL,AAAQ,0CACf,kBAAe,OAAO,OAAE,yBAAV,gCACA;AAEvB,gBAAO,AAAO,sBAAkB,kCAAc,KAAK,4DAAI,KAAK;;IAGlE;;AAI6B,MAA3B,AAAkB;AACH,MAAT;IACR;;;+DA3D+C;qDACpB;;;EA2D7B;;;;;;;;;;;;;;;;;;;;;;;;;yBA+BkB,SACA,SACE;AAEhB,YAAO,sFACI,OAAO,WACP,OAAO,eACH,WAAW,UAChB;IAEZ;yBAGuC;AACE,MAAjC,2BAAqB,WAAW;AACJ,MAAlC,AAAY,WAAD,OAAK,AAAiB,sBAAP;IAC5B;;;QA7BS;QACC;QACM;;UACJ,AAAO,MAAD;AACb,+GACc,UAAU,uBACD,mBAAmB;;EACzC;;;;;;;;;;;;;;;AA2DuB,YAAA,AAAO,eAAE;IAAG;2BAGN,iBAAwB;AAIzD,YAAa,8BACX,AAAgB,eAAD,GAAG,AAAO,iCACzB,AAAgB,eAAD,GAAG,AAAO;IAE7B;oBAG4B;AAC1B,WAAK,4BACE,AAAO,uBAAW,AAAO,wBACzB,AAAO,uBAAW,AAAM,KAAD,GAAG,KAC1B,AAAO,uBAAW,AAAM,KAAD,GAAG;AAC2B,QAA1D,AAAO,0BAAc,CAAC,KAAK,EAA6B,eAA3B,AAAQ;;AAET,QAAtB,sBAAgB,KAAK;;IAE/B;gBAGwB;;AACtB,UAAI,AAAS,QAAD,KAAI,OACZ,AAAS,QAAD,GAAG,OAAO,yBAClB,AAAS,QAAD,GAAG,OAAO,AAAO;AACA,QAArB,kBAAY,QAAQ;AAC1B;;AAGyB,WAA3B;0BAAqB;AACK,MAA1B,4BAAsB;AAIL,uBAAa,8DAClB,AAAO,qCACP,QAAQ,aACP,AAAQ;AAGK,gCAA0C,oEACtD,yBAAkB,MAAM,6CAC7B,AAAQ;AAEV,sBAAY;AACnB,YAAK;AACU,oBAAQ,AAAoB,AAAM,mBAAP,SAAS,SAAS;AACrB,QAArC,YAAY,AAAoB,mBAAD;AAC0B,QAAzD,AAAO,0BAAc,KAAK,EAA6B,eAA3B,AAAQ;AACpC,YAAK,AAAS,QAAD,GAAG,KAAK,AAAO,uBAAa,AAAS,QAAD,GAAG,KAAK,AAAO;AAI4C,UAA1G,WAAW,AAAoB,AAAS,mBAAV,YAAa,AAAQ,AAAU,AAAS,kCAAE,AAAoB,AAAS,mBAAV;AAChE,UAArB,kBAAY,QAAQ;AACA,UAA1B,AAAoB,mBAAD;cACd,KAAI,AAAoB,mBAAD;AACR,UAAd,kBAAY;;;;AAQnB,YAJH,mBAAmB;MAAnB;AACI,wBAAY,KAAK;AACO,QAAxB,gBAAY,UAAU,uBACF,UAApB,mBAAmB;;;IAEzB;SAG2B,SAAsB;AAEP,MAAxC,4BAAsB,kBAAkB;AACxC,YAAa,YAAK,OAAO,EAAE,kBAAkB;IAC/C;;;QAjGyB;QACA;QAChB;QACF;QACW;QACR;QACM;IAWF;IAXE;UACH,AAAO,MAAD;AACb,0GACW,OAAO,WACP,OAAO,iBACD,aAAa,oBACV,gBAAgB,eACrB,WAAW,cACZ,UAAU;;EACvB;;;;;;;;;;;;;;;;;IA0GM;;;;;;iBAUkB;AACE,qBAAW,AAAQ,OAAD;AACjD,UAAI,AAAS,QAAD;AACV,cAAO;;AAET,YAAO,AAAS,SAAD;IACjB;UAG0B;AACxB,YAAO,oEAA+B,sBAAiB;IACzD;;;QA7BO;QACS;;IASK,kBAAY;IATjB;AACX,0FAAW,GAAG;;EAAC;;;;;;;;;;;;;;;;AA0ClB,WAAK;AACH,cAAO;;AAEQ,MAAjB,mBAAa;AACI,MAAjB;AACA,YAAO;IACT;;;IAZK,mBAAa;;;EAapB;;;;;;;;;;;;;;AAauB,YAAQ,AAAE,gBAAV;IAAqB;uBAML;AACZ,mBAAS,AAAQ,OAAD;AACvC,UAAI,AAAO,MAAD;AACR,cAAO;;AAET,WAAc,sDAAP,MAAM;AACiB,8BAA2B,sDAAP,MAAM;AAC7C,sBAAsC,AAAE,eAA5B,AAAkB,iBAAD;AACM,MAApB,AAAE,eAA5B,AAAkB,iBAAD,yBAAwB;AACzC,YAAO,UAAS;IAClB;;;QArBO;QACW;QACQ;;AACrB,sFAAW,GAAG,SAAS,KAAK,YAAY,QAAQ;;EAAC","file":"../../../../../../../packages/flutter/src/widgets/draggable_scrollable_sheet.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__draggable_scrollable_sheet: draggable_scrollable_sheet
  };
}));

//# sourceMappingURL=draggable_scrollable_sheet.dart.lib.js.map
>>>>>>> 75a5b68328961ba989f4b72e23f0c2c5b16d7dc4
