<<<<<<< HEAD
define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/material/card.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/rendering/flex.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/fl_chart/src/chart/scatter_chart/scatter_chart_painter.dart', 'packages/flutter/src/painting/placeholder_span.dart', 'packages/fl_chart/src/chart/base/base_chart/fl_touch_event.dart'], (function load__packages__eco_ml__charts__barChart_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__material__card$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__rendering__flex$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__strut_style$46dart, packages__fl_chart__src__chart__scatter_chart__scatter_chart_painter$46dart, packages__flutter__src__painting__placeholder_span$46dart, packages__fl_chart__src__chart__base__base_chart__fl_touch_event$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__text;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const card = packages__flutter__src__material__card$46dart.src__material__card;
  const colors = packages__flutter__src__material__colors$46dart.src__material__colors;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const bar_chart = packages__fl_chart__src__chart__scatter_chart__scatter_chart_painter$46dart.src__chart__bar_chart__bar_chart;
  const bar_chart_data = packages__fl_chart__src__chart__scatter_chart__scatter_chart_painter$46dart.src__chart__bar_chart__bar_chart_data;
  const axis_chart_data = packages__fl_chart__src__chart__scatter_chart__scatter_chart_painter$46dart.src__chart__base__axis_chart__axis_chart_data;
  const base_chart_data = packages__fl_chart__src__chart__scatter_chart__scatter_chart_painter$46dart.src__chart__base__base_chart__base_chart_data;
  const text_span = packages__flutter__src__painting__placeholder_span$46dart.src__painting__text_span;
  const fl_touch_event = packages__fl_chart__src__chart__base__base_chart__fl_touch_event$46dart.src__chart__base__base_chart__fl_touch_event;
  var barChart = Object.create(dart.library);
  var $toInt = dartx.toInt;
  var $toString = dartx.toString;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    JSArrayOfTextSpan: () => (T.JSArrayOfTextSpan = dart.constFn(_interceptors.JSArray$(text_span.TextSpan)))(),
    BarChartGroupDataAndintAndBarChartRodData__ToBarTooltipItem: () => (T.BarChartGroupDataAndintAndBarChartRodData__ToBarTooltipItem = dart.constFn(dart.fnType(bar_chart_data.BarTooltipItem, [bar_chart_data.BarChartGroupData, core.int, bar_chart_data.BarChartRodData, core.int])))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    BarTouchResponseN: () => (T.BarTouchResponseN = dart.constFn(dart.nullable(bar_chart_data.BarTouchResponse)))(),
    FlTouchEventAndBarTouchResponseNTovoid: () => (T.FlTouchEventAndBarTouchResponseNTovoid = dart.constFn(dart.fnType(dart.void, [fl_touch_event.FlTouchEvent, T.BarTouchResponseN()])))(),
    BuildContextAnddoubleToTextStyle: () => (T.BuildContextAnddoubleToTextStyle = dart.constFn(dart.fnType(text_style.TextStyle, [framework.BuildContext, core.double])))(),
    doubleToString: () => (T.doubleToString = dart.constFn(dart.fnType(core.String, [core.double])))(),
    JSArrayOfColor: () => (T.JSArrayOfColor = dart.constFn(_interceptors.JSArray$(ui.Color)))(),
    JSArrayOfBarChartRodData: () => (T.JSArrayOfBarChartRodData = dart.constFn(_interceptors.JSArray$(bar_chart_data.BarChartRodData)))(),
    ListOfBarChartGroupData: () => (T.ListOfBarChartGroupData = dart.constFn(core.List$(bar_chart_data.BarChartGroupData)))(),
    intToBarChartGroupData: () => (T.intToBarChartGroupData = dart.constFn(dart.fnType(bar_chart_data.BarChartGroupData, [core.int])))()
=======
define(['dart_sdk', 'packages/flutter/src/rendering/layer.dart', 'packages/flutter/src/rendering/sliver.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/foundation/debug.dart'], (function load__packages__flutter__src__rendering__sliver_multi_box_adaptor_dart(dart_sdk, packages__flutter__src__rendering__layer$46dart, packages__flutter__src__rendering__sliver$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__foundation__debug$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const object = packages__flutter__src__rendering__layer$46dart.src__rendering__object;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  const sliver = packages__flutter__src__rendering__sliver$46dart.src__rendering__sliver;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  var sliver_multi_box_adaptor = Object.create(dart.library);
  var $isEmpty = dartx.isEmpty;
  var $containsValue = dartx.containsValue;
  var $_get = dartx._get;
  var $remove = dartx.remove;
  var $containsKey = dartx.containsKey;
  var $add = dartx.add;
  var $_set = dartx._set;
  var $values = dartx.values;
  var $forEach = dartx.forEach;
  var $clear = dartx.clear;
  var $where = dartx.where;
  var $toList = dartx.toList;
  var $isNotEmpty = dartx.isNotEmpty;
  var $keys = dartx.keys;
  var $sort = dartx.sort;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    IdentityMapOfint$RenderBox: () => (T.IdentityMapOfint$RenderBox = dart.constFn(_js_helper.IdentityMap$(core.int, box.RenderBox)))(),
    JSArrayOfRenderBox: () => (T.JSArrayOfRenderBox = dart.constFn(_interceptors.JSArray$(box.RenderBox)))(),
    VoidTobool: () => (T.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    RenderBoxN: () => (T.RenderBoxN = dart.constFn(dart.nullable(box.RenderBox)))(),
    SliverConstraintsTovoid: () => (T.SliverConstraintsTovoid = dart.constFn(dart.fnType(dart.void, [sliver.SliverConstraints])))(),
    RenderBoxTobool: () => (T.RenderBoxTobool = dart.constFn(dart.fnType(core.bool, [box.RenderBox])))(),
    JSArrayOfDiagnosticsNode: () => (T.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))()
>>>>>>> AUg2
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
<<<<<<< HEAD
        __proto__: ui.Color.prototype,
        [Color_value]: 4283694551.0
=======
        __proto__: basic_types.Axis.prototype,
        [_name]: "Axis.horizontal",
        index: 0
>>>>>>> AUg2
      });
    },
    get C1() {
      return C[1] = dart.const({
<<<<<<< HEAD
        __proto__: ui.Color.prototype,
        [Color_value]: 4294951118.0
=======
        __proto__: basic_types.Axis.prototype,
        [_name]: "Axis.vertical",
        index: 1
>>>>>>> AUg2
      });
    },
    get C2() {
      return C[2] = dart.const({
<<<<<<< HEAD
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 10,
        [EdgeInsets_top]: 10,
        [EdgeInsets_left]: 10
=======
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: -1,
        [OffsetBase__dx]: 0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 1
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name]: "AxisDirection.up",
        index: 0
>>>>>>> AUg2
      });
    },
    get C5() {
      return C[5] = dart.const({
<<<<<<< HEAD
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 29,
        [_Location_line]: 47,
        [_Location_file]: null
=======
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 1,
        [OffsetBase__dx]: 0
>>>>>>> AUg2
      });
    },
    get C6() {
      return C[6] = dart.const({
<<<<<<< HEAD
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 29,
        [_Location_line]: 48,
        [_Location_file]: null
=======
        __proto__: basic_types.AxisDirection.prototype,
        [_name]: "AxisDirection.right",
        index: 1
>>>>>>> AUg2
      });
    },
    get C7() {
      return C[7] = dart.const({
<<<<<<< HEAD
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 29,
        [_Location_line]: 49,
        [_Location_file]: null
=======
        __proto__: basic_types.AxisDirection.prototype,
        [_name]: "AxisDirection.down",
        index: 2
>>>>>>> AUg2
      });
    },
    get C8() {
      return C[8] = dart.const({
<<<<<<< HEAD
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 29,
        [_Location_line]: 50,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.constList([C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8], widget_inspector._Location);
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[4] || CT.C4,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 46,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 32,
        [_Location_line]: 54,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 31,
        [_Location_line]: 55,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.constList([C[11] || CT.C11, C[12] || CT.C12], widget_inspector._Location);
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[10] || CT.C10,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 54,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 25,
        [_Location_line]: 45,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.constList([C[15] || CT.C15], widget_inspector._Location);
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[14] || CT.C14,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 44,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 25,
        [_Location_line]: 62,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.constList([C[18] || CT.C18], widget_inspector._Location);
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[17] || CT.C17,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 61,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 29,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 29,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 29,
        [_Location_line]: 69,
        [_Location_file]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 29,
        [_Location_line]: 70,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.constList([C[21] || CT.C21, C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24], widget_inspector._Location);
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[20] || CT.C20,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 66,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 32,
        [_Location_line]: 74,
        [_Location_file]: null
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 31,
        [_Location_line]: 75,
        [_Location_file]: null
      });
    },
    get C26() {
      return C[26] = dart.constList([C[27] || CT.C27, C[28] || CT.C28], widget_inspector._Location);
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[26] || CT.C26,
        [_Location_name]: null,
        [_Location_column]: 27,
        [_Location_line]: 74,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 25,
        [_Location_line]: 65,
        [_Location_file]: null
      });
    },
    get C30() {
      return C[30] = dart.constList([C[31] || CT.C31], widget_inspector._Location);
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[30] || CT.C30,
        [_Location_name]: null,
        [_Location_column]: 23,
        [_Location_line]: 64,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 21,
        [_Location_line]: 43,
        [_Location_file]: null
      });
    },
    get C33() {
      return C[33] = dart.constList([C[34] || CT.C34], widget_inspector._Location);
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[33] || CT.C33,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 42,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 19,
        [_Location_line]: 41,
        [_Location_file]: null
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 42,
        [_Location_file]: null
      });
    },
    get C36() {
      return C[36] = dart.constList([C[37] || CT.C37, C[38] || CT.C38], widget_inspector._Location);
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[36] || CT.C36,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 40,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_index]: 6
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283406497.0
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[40] || CT.C40,
        [TextStyle_fontSize]: 14,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[41] || CT.C41,
        [TextStyle_inherit]: true
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "data",
        [_Location_column]: 21,
        [_Location_line]: 86,
        [_Location_file]: null
      });
    },
    get C43() {
      return C[43] = dart.constList([C[44] || CT.C44], widget_inspector._Location);
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[43] || CT.C43,
        [_Location_name]: null,
        [_Location_column]: 26,
        [_Location_line]: 85,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 19,
        [_Location_line]: 85,
        [_Location_file]: null
      });
    },
    get C46() {
      return C[46] = dart.constList([C[47] || CT.C47], widget_inspector._Location);
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[46] || CT.C46,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 84,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "crossAxisAlignment",
        [_Location_column]: 15,
        [_Location_line]: 36,
        [_Location_file]: null
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisAlignment",
        [_Location_column]: 15,
        [_Location_line]: 37,
        [_Location_file]: null
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 15,
        [_Location_line]: 38,
        [_Location_file]: null
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 15,
        [_Location_line]: 39,
        [_Location_file]: null
      });
    },
    get C49() {
      return C[49] = dart.constList([C[50] || CT.C50, C[51] || CT.C51, C[52] || CT.C52, C[53] || CT.C53], widget_inspector._Location);
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[49] || CT.C49,
        [_Location_name]: null,
        [_Location_column]: 20,
        [_Location_line]: 35,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 13,
        [_Location_line]: 34,
        [_Location_file]: null
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 13,
        [_Location_line]: 35,
        [_Location_file]: null
      });
    },
    get C55() {
      return C[55] = dart.constList([C[56] || CT.C56, C[57] || CT.C57], widget_inspector._Location);
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[55] || CT.C55,
        [_Location_name]: null,
        [_Location_column]: 18,
        [_Location_line]: 33,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "elevation",
        [_Location_column]: 11,
        [_Location_line]: 28,
        [_Location_file]: null
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shadowColor",
        [_Location_column]: 11,
        [_Location_line]: 29,
        [_Location_file]: null
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "shape",
        [_Location_column]: 11,
        [_Location_line]: 30,
        [_Location_file]: null
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 11,
        [_Location_line]: 32,
        [_Location_file]: null
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 11,
        [_Location_line]: 33,
        [_Location_file]: null
      });
    },
    get C59() {
      return C[59] = dart.constList([C[60] || CT.C60, C[61] || CT.C61, C[62] || CT.C62, C[63] || CT.C63, C[64] || CT.C64], widget_inspector._Location);
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[59] || CT.C59,
        [_Location_name]: null,
        [_Location_column]: 16,
        [_Location_line]: 27,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "padding",
        [_Location_column]: 9,
        [_Location_line]: 26,
        [_Location_file]: null
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 27,
        [_Location_file]: null
      });
    },
    get C66() {
      return C[66] = dart.constList([C[67] || CT.C67, C[68] || CT.C68], widget_inspector._Location);
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[66] || CT.C66,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 25,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "aspectRatio",
        [_Location_column]: 7,
        [_Location_line]: 24,
        [_Location_file]: null
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 25,
        [_Location_file]: null
      });
    },
    get C70() {
      return C[70] = dart.constList([C[71] || CT.C71, C[72] || CT.C72], widget_inspector._Location);
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[70] || CT.C70,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 23,
        [_Location_file]: "file:///D:/workspace/flutterProject/Eco_ml/lib/charts/barChart.dart"
      });
    },
    get C73() {
      return C[73] = dart.constList([], core.int);
    }
  }, false);
  var C = Array(74).fill(void 0);
  var I = ["package:eco_ml/charts/barChart.dart"];
  barChart.BarChartSample2 = class BarChartSample2 extends framework.StatefulWidget {
    createState() {
      return new barChart.BarChartSample2State.new();
    }
  };
  (barChart.BarChartSample2.new = function(opts) {
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    barChart.BarChartSample2.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = barChart.BarChartSample2.prototype;
  dart.addTypeTests(barChart.BarChartSample2);
  dart.addTypeCaches(barChart.BarChartSample2);
  dart.setMethodSignature(barChart.BarChartSample2, () => ({
    __proto__: dart.getMethods(barChart.BarChartSample2.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(barChart.BarChartSample2, I[0]);
  var leftBarColor = dart.privateName(barChart, "BarChartSample2State.leftBarColor");
  var rightBarColor = dart.privateName(barChart, "BarChartSample2State.rightBarColor");
  var width = dart.privateName(barChart, "BarChartSample2State.width");
  var touchedIndex = dart.privateName(barChart, "BarChartSample2State.touchedIndex");
  var Color_value = dart.privateName(ui, "Color.value");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  barChart.BarChartSample2State = class BarChartSample2State extends framework.State$(barChart.BarChartSample2) {
    get leftBarColor() {
      return this[leftBarColor];
    }
    set leftBarColor(value) {
      super.leftBarColor = value;
    }
    get rightBarColor() {
      return this[rightBarColor];
    }
    set rightBarColor(value) {
      super.rightBarColor = value;
    }
    get width() {
      return this[width];
    }
    set width(value) {
      super.width = value;
    }
    get touchedIndex() {
      return this[touchedIndex];
    }
    set touchedIndex(value) {
      this[touchedIndex] = value;
    }
    initState() {
      super.initState();
    }
    build(context) {
      return new basic.AspectRatio.new({aspectRatio: 3 / 2, child: new container.Container.new({padding: new edge_insets.EdgeInsets.all(20.0), child: new card.Card.new({elevation: 5.0, shadowColor: colors.Colors.grey, shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(20.0)}), color: colors.Colors.white, child: new basic.Padding.new({padding: C[2] || CT.C2, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.stretch, mainAxisAlignment: flex.MainAxisAlignment.start, mainAxisSize: flex.MainAxisSize.max, children: T.JSArrayOfWidget().of([new container.Container.new({padding: new edge_insets.EdgeInsets.only({left: 15.0, top: 10.0}), child: new basic.Column.new({children: T.JSArrayOfWidget().of([new basic.Row.new({children: T.JSArrayOfWidget().of([new container.Container.new({margin: new edge_insets.EdgeInsets.only({right: 10.0}), height: 10.0, width: 10.0, decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(300.0), color: new ui.Color.new(4283694551)}), $creationLocationd_0dea112b090073317d4: C[3] || CT.C3}), new text.Text.new("Income", {style: new text_style.TextStyle.new({color: new ui.Color.new(4283406497), fontWeight: ui.FontWeight.bold}), $creationLocationd_0dea112b090073317d4: C[9] || CT.C9})]), $creationLocationd_0dea112b090073317d4: C[13] || CT.C13}), new basic.SizedBox.new({height: 1.0, $creationLocationd_0dea112b090073317d4: C[16] || CT.C16}), new basic.Row.new({children: T.JSArrayOfWidget().of([new container.Container.new({margin: new edge_insets.EdgeInsets.only({right: 10.0}), height: 10.0, width: 10.0, decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(300.0), color: new ui.Color.new(4294951118)}), $creationLocationd_0dea112b090073317d4: C[19] || CT.C19}), new text.Text.new("Expense", {style: new text_style.TextStyle.new({color: new ui.Color.new(4283406497), fontWeight: ui.FontWeight.bold}), $creationLocationd_0dea112b090073317d4: C[25] || CT.C25})]), $creationLocationd_0dea112b090073317d4: C[29] || CT.C29})]), $creationLocationd_0dea112b090073317d4: C[32] || CT.C32}), $creationLocationd_0dea112b090073317d4: C[35] || CT.C35}), new basic.Expanded.new({child: new bar_chart.BarChart.new(new bar_chart_data.BarChartData.new({maxY: 20.0, barTouchData: new bar_chart_data.BarTouchData.new({touchTooltipData: new bar_chart_data.BarTouchTooltipData.new({tooltipBgColor: colors.Colors.transparent, getTooltipItem: dart.fn((group, groupIndex, rod, rodIndex) => {
                            let weekDay = null;
                            switch (group.x[$toInt]()) {
                              case 0:
                              {
                                weekDay = "Monday";
                                break;
                              }
                              case 1:
                              {
                                weekDay = "Tuesday";
                                break;
                              }
                              case 2:
                              {
                                weekDay = "Wednesday";
                                break;
                              }
                              case 3:
                              {
                                weekDay = "Thursday";
                                break;
                              }
                              case 4:
                              {
                                weekDay = "Friday";
                                break;
                              }
                              case 5:
                              {
                                weekDay = "Saturday";
                                break;
                              }
                              case 6:
                              {
                                weekDay = "Sunday";
                                break;
                              }
                              default:
                              {
                                dart.throw(new core.Error.new());
                              }
                            }
                            return new bar_chart_data.BarTooltipItem.new(weekDay + "\n", new text_style.TextStyle.new({color: colors.Colors.white, fontSize: 15.0}), {children: T.JSArrayOfTextSpan().of([new text_span.TextSpan.new({text: (rod.y - 1)[$toString](), style: new text_style.TextStyle.new({color: colors.Colors.yellow, fontSize: 14.0, fontWeight: ui.FontWeight.w500})})])});
                          }, T.BarChartGroupDataAndintAndBarChartRodData__ToBarTooltipItem())}), touchCallback: dart.fn((event, barTouchResponse) => {
                          this.setState(dart.fn(() => {
                            if (!event.isInterestedForInteractions || barTouchResponse == null || barTouchResponse.spot == null) {
                              this.touchedIndex = -1;
                              return;
                            }
                            this.touchedIndex = dart.nullCheck(barTouchResponse.spot).touchedBarGroupIndex;
                          }, T.VoidTovoid()));
                        }, T.FlTouchEventAndBarTouchResponseNTovoid())}), titlesData: new axis_chart_data.FlTitlesData.new({show: true, rightTitles: new axis_chart_data.SideTitles.new({showTitles: false}), topTitles: new axis_chart_data.SideTitles.new({showTitles: false}), bottomTitles: new axis_chart_data.SideTitles.new({showTitles: true, getTextStyles: dart.fn((context, value) => C[39] || CT.C39, T.BuildContextAnddoubleToTextStyle()), margin: 5.0, getTitles: dart.fn(value => {
                            switch (value[$toInt]()) {
                              case 0:
                              {
                                return "Mon";
                              }
                              case 1:
                              {
                                return "Tue";
                              }
                              case 2:
                              {
                                return "Wed";
                              }
                              case 3:
                              {
                                return "Thu";
                              }
                              case 4:
                              {
                                return "Fri";
                              }
                              case 5:
                              {
                                return "Sat";
                              }
                              case 6:
                              {
                                return "Sun";
                              }
                              default:
                              {
                                return "";
                              }
                            }
                          }, T.doubleToString())}), leftTitles: new axis_chart_data.SideTitles.new({showTitles: false})}), borderData: new base_chart_data.FlBorderData.new({show: false}), barGroups: this.showingGroups(), gridData: new axis_chart_data.FlGridData.new({show: false})}), {$creationLocationd_0dea112b090073317d4: C[42] || CT.C42}), $creationLocationd_0dea112b090073317d4: C[45] || CT.C45})]), $creationLocationd_0dea112b090073317d4: C[48] || CT.C48}), $creationLocationd_0dea112b090073317d4: C[54] || CT.C54}), $creationLocationd_0dea112b090073317d4: C[58] || CT.C58}), $creationLocationd_0dea112b090073317d4: C[65] || CT.C65}), $creationLocationd_0dea112b090073317d4: C[69] || CT.C69});
    }
    makeGroupData(x, y1, y2, opts) {
      let isTouched = opts && 'isTouched' in opts ? opts.isTouched : false;
      let showTooltips = opts && 'showTooltips' in opts ? opts.showTooltips : C[73] || CT.C73;
      return new bar_chart_data.BarChartGroupData.new({barsSpace: 4.0, x: x, barRods: T.JSArrayOfBarChartRodData().of([new bar_chart_data.BarChartRodData.new({y: isTouched ? y1 + 1 : y1, colors: T.JSArrayOfColor().of([this.leftBarColor]), width: this.width}), new bar_chart_data.BarChartRodData.new({y: isTouched ? y2 + 1 : y2, colors: T.JSArrayOfColor().of([this.rightBarColor]), width: this.width})])});
    }
    showingGroups() {
      return T.ListOfBarChartGroupData().generate(7, dart.fn(i => {
        switch (i) {
          case 0:
          {
            return this.makeGroupData(0, 5.0, 12.0, {isTouched: i === this.touchedIndex});
          }
          case 1:
          {
            return this.makeGroupData(1, 16.0, 12.0, {isTouched: i === this.touchedIndex});
          }
          case 2:
          {
            return this.makeGroupData(2, 18.0, 5.0, {isTouched: i === this.touchedIndex});
          }
          case 3:
          {
            return this.makeGroupData(3, 20.0, 16.0, {isTouched: i === this.touchedIndex});
          }
          case 4:
          {
            return this.makeGroupData(4, 17.0, 6.0, {isTouched: i === this.touchedIndex});
          }
          case 5:
          {
            return this.makeGroupData(5, 19.0, 1.5, {isTouched: i === this.touchedIndex});
          }
          case 6:
          {
            return this.makeGroupData(6, 10.0, 1.5, {isTouched: i === this.touchedIndex});
          }
          default:
          {
            return dart.throw(new core.Error.new());
          }
        }
      }, T.intToBarChartGroupData()));
    }
  };
  (barChart.BarChartSample2State.new = function() {
    this[leftBarColor] = C[0] || CT.C0;
    this[rightBarColor] = C[1] || CT.C1;
    this[width] = 10.0;
    this[touchedIndex] = -1;
    barChart.BarChartSample2State.__proto__.new.call(this);
    ;
  }).prototype = barChart.BarChartSample2State.prototype;
  dart.addTypeTests(barChart.BarChartSample2State);
  dart.addTypeCaches(barChart.BarChartSample2State);
  dart.setMethodSignature(barChart.BarChartSample2State, () => ({
    __proto__: dart.getMethods(barChart.BarChartSample2State.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    makeGroupData: dart.fnType(bar_chart_data.BarChartGroupData, [core.int, core.double, core.double], {isTouched: core.bool, showTooltips: core.List$(core.int)}, {}),
    showingGroups: dart.fnType(core.List$(bar_chart_data.BarChartGroupData), [])
  }));
  dart.setLibraryUri(barChart.BarChartSample2State, I[0]);
  dart.setFieldSignature(barChart.BarChartSample2State, () => ({
    __proto__: dart.getFields(barChart.BarChartSample2State.__proto__),
    leftBarColor: dart.finalFieldType(ui.Color),
    rightBarColor: dart.finalFieldType(ui.Color),
    width: dart.finalFieldType(core.double),
    touchedIndex: dart.fieldType(core.int)
  }));
  dart.trackLibraries("packages/eco_ml/charts/barChart.dart", {
    "package:eco_ml/charts/barChart.dart": barChart
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["barChart.dart"],"names":[],"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","file":"../../../../../packages/eco_ml/charts/barChart.dart.lib.js"}');
  // Exports:
  return {
    charts__barChart: barChart
  };
}));

//# sourceMappingURL=barChart.dart.lib.js.map
=======
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: -1
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: basic_types.AxisDirection.prototype,
        [_name]: "AxisDirection.left",
        index: 3
      });
    }
  }, false);
  var C = Array(10).fill(void 0);
  var I = [
    "package:flutter/src/rendering/sliver_multi_box_adaptor.dart",
    "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/rendering/sliver_multi_box_adaptor.dart"
  ];
  sliver_multi_box_adaptor.RenderSliverBoxChildManager = class RenderSliverBoxChildManager extends core.Object {
    didStartLayout() {
    }
    didFinishLayout() {
    }
    debugAssertChildListLocked() {
      return true;
    }
  };
  (sliver_multi_box_adaptor.RenderSliverBoxChildManager.new = function() {
    ;
  }).prototype = sliver_multi_box_adaptor.RenderSliverBoxChildManager.prototype;
  dart.addTypeTests(sliver_multi_box_adaptor.RenderSliverBoxChildManager);
  dart.addTypeCaches(sliver_multi_box_adaptor.RenderSliverBoxChildManager);
  dart.setMethodSignature(sliver_multi_box_adaptor.RenderSliverBoxChildManager, () => ({
    __proto__: dart.getMethods(sliver_multi_box_adaptor.RenderSliverBoxChildManager.__proto__),
    didStartLayout: dart.fnType(dart.void, []),
    didFinishLayout: dart.fnType(dart.void, []),
    debugAssertChildListLocked: dart.fnType(core.bool, [])
  }));
  dart.setLibraryUri(sliver_multi_box_adaptor.RenderSliverBoxChildManager, I[0]);
  var keepAlive = dart.privateName(sliver_multi_box_adaptor, "KeepAliveParentDataMixin.keepAlive");
  sliver_multi_box_adaptor.KeepAliveParentDataMixin = class KeepAliveParentDataMixin extends core.Object {};
  sliver_multi_box_adaptor.KeepAliveParentDataMixin[dart.mixinOn] = Object => class KeepAliveParentDataMixin extends Object {
    get keepAlive() {
      return this[keepAlive];
    }
    set keepAlive(value) {
      this[keepAlive] = value;
    }
  };
  (sliver_multi_box_adaptor.KeepAliveParentDataMixin[dart.mixinNew] = function() {
    this[keepAlive] = false;
  }).prototype = sliver_multi_box_adaptor.KeepAliveParentDataMixin.prototype;
  dart.addTypeTests(sliver_multi_box_adaptor.KeepAliveParentDataMixin);
  dart.addTypeCaches(sliver_multi_box_adaptor.KeepAliveParentDataMixin);
  sliver_multi_box_adaptor.KeepAliveParentDataMixin[dart.implements] = () => [object.ParentData, core.Object];
  dart.setLibraryUri(sliver_multi_box_adaptor.KeepAliveParentDataMixin, I[0]);
  dart.setFieldSignature(sliver_multi_box_adaptor.KeepAliveParentDataMixin, () => ({
    __proto__: dart.getFields(sliver_multi_box_adaptor.KeepAliveParentDataMixin.__proto__),
    keepAlive: dart.fieldType(core.bool)
  }));
  sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin = class RenderSliverWithKeepAliveMixin extends core.Object {};
  sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin[dart.mixinOn] = Object => class RenderSliverWithKeepAliveMixin extends Object {
    setupParentData(child) {
      object.RenderObject.as(child);
      if (!sliver_multi_box_adaptor.KeepAliveParentDataMixin.is(child.parentData)) dart.assertFailed(null, I[1], 139, 12, "child.parentData is KeepAliveParentDataMixin");
    }
  };
  (sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin[dart.mixinNew] = function() {
  }).prototype = sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin.prototype;
  dart.addTypeTests(sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin);
  dart.addTypeCaches(sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin);
  sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin[dart.implements] = () => [sliver.RenderSliver, core.Object];
  dart.setMethodSignature(sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin, () => ({
    __proto__: dart.getMethods(sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin.__proto__),
    setupParentData: dart.fnType(dart.void, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin, I[0]);
  var index = dart.privateName(sliver_multi_box_adaptor, "SliverMultiBoxAdaptorParentData.index");
  var _keptAlive = dart.privateName(sliver_multi_box_adaptor, "_keptAlive");
  const SliverLogicalParentData_ContainerParentDataMixin$36 = class SliverLogicalParentData_ContainerParentDataMixin extends sliver.SliverLogicalParentData {};
  (SliverLogicalParentData_ContainerParentDataMixin$36.new = function() {
    object.ContainerParentDataMixin$(box.RenderBox)[dart.mixinNew].call(this);
    SliverLogicalParentData_ContainerParentDataMixin$36.__proto__.new.call(this);
  }).prototype = SliverLogicalParentData_ContainerParentDataMixin$36.prototype;
  dart.applyMixin(SliverLogicalParentData_ContainerParentDataMixin$36, object.ContainerParentDataMixin$(box.RenderBox));
  const SliverLogicalParentData_KeepAliveParentDataMixin$36 = class SliverLogicalParentData_KeepAliveParentDataMixin extends SliverLogicalParentData_ContainerParentDataMixin$36 {};
  (SliverLogicalParentData_KeepAliveParentDataMixin$36.new = function() {
    sliver_multi_box_adaptor.KeepAliveParentDataMixin[dart.mixinNew].call(this);
    SliverLogicalParentData_KeepAliveParentDataMixin$36.__proto__.new.call(this);
  }).prototype = SliverLogicalParentData_KeepAliveParentDataMixin$36.prototype;
  dart.applyMixin(SliverLogicalParentData_KeepAliveParentDataMixin$36, sliver_multi_box_adaptor.KeepAliveParentDataMixin);
  sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData = class SliverMultiBoxAdaptorParentData extends SliverLogicalParentData_KeepAliveParentDataMixin$36 {
    get index() {
      return this[index];
    }
    set index(value) {
      this[index] = value;
    }
    get keptAlive() {
      return this[_keptAlive];
    }
    toString() {
      return "index=" + dart.str(this.index) + "; " + (this.keepAlive === true ? "keepAlive; " : "") + super.toString();
    }
  };
  (sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.new = function() {
    this[index] = null;
    this[_keptAlive] = false;
    sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.__proto__.new.call(this);
    ;
  }).prototype = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.prototype;
  dart.addTypeTests(sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData);
  dart.addTypeCaches(sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData);
  dart.setGetterSignature(sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData, () => ({
    __proto__: dart.getGetters(sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.__proto__),
    keptAlive: core.bool
  }));
  dart.setLibraryUri(sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData, I[0]);
  dart.setFieldSignature(sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData, () => ({
    __proto__: dart.getFields(sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.__proto__),
    index: dart.fieldType(dart.nullable(core.int)),
    [_keptAlive]: dart.fieldType(core.bool)
  }));
  dart.defineExtensionMethods(sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData, ['toString']);
  var _keepAliveBucket = dart.privateName(sliver_multi_box_adaptor, "_keepAliveBucket");
  var __RenderSliverMultiBoxAdaptor__debugDanglingKeepAlives = dart.privateName(sliver_multi_box_adaptor, "_#RenderSliverMultiBoxAdaptor#_debugDanglingKeepAlives");
  var _debugChildIntegrityEnabled = dart.privateName(sliver_multi_box_adaptor, "_debugChildIntegrityEnabled");
  var _childManager = dart.privateName(sliver_multi_box_adaptor, "_childManager");
  var _debugDanglingKeepAlives = dart.privateName(sliver_multi_box_adaptor, "_debugDanglingKeepAlives");
  var _debugVerifyChildOrder = dart.privateName(sliver_multi_box_adaptor, "_debugVerifyChildOrder");
  var _debugAssertChildListLocked = dart.privateName(sliver_multi_box_adaptor, "_debugAssertChildListLocked");
  var _createOrObtainChild = dart.privateName(sliver_multi_box_adaptor, "_createOrObtainChild");
  var _destroyOrCacheChild = dart.privateName(sliver_multi_box_adaptor, "_destroyOrCacheChild");
  var _name = dart.privateName(basic_types, "_name");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  const RenderSliver_ContainerRenderObjectMixin$36 = class RenderSliver_ContainerRenderObjectMixin extends sliver.RenderSliver {};
  (RenderSliver_ContainerRenderObjectMixin$36.new = function() {
    object.ContainerRenderObjectMixin$(box.RenderBox, sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData)[dart.mixinNew].call(this);
    RenderSliver_ContainerRenderObjectMixin$36.__proto__.new.call(this);
  }).prototype = RenderSliver_ContainerRenderObjectMixin$36.prototype;
  dart.applyMixin(RenderSliver_ContainerRenderObjectMixin$36, object.ContainerRenderObjectMixin$(box.RenderBox, sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData));
  const RenderSliver_RenderSliverHelpers$36 = class RenderSliver_RenderSliverHelpers extends RenderSliver_ContainerRenderObjectMixin$36 {};
  (RenderSliver_RenderSliverHelpers$36.new = function() {
    RenderSliver_RenderSliverHelpers$36.__proto__.new.call(this);
  }).prototype = RenderSliver_RenderSliverHelpers$36.prototype;
  dart.applyMixin(RenderSliver_RenderSliverHelpers$36, sliver.RenderSliverHelpers);
  const RenderSliver_RenderSliverWithKeepAliveMixin$36 = class RenderSliver_RenderSliverWithKeepAliveMixin extends RenderSliver_RenderSliverHelpers$36 {};
  (RenderSliver_RenderSliverWithKeepAliveMixin$36.new = function() {
    RenderSliver_RenderSliverWithKeepAliveMixin$36.__proto__.new.call(this);
  }).prototype = RenderSliver_RenderSliverWithKeepAliveMixin$36.prototype;
  dart.applyMixin(RenderSliver_RenderSliverWithKeepAliveMixin$36, sliver_multi_box_adaptor.RenderSliverWithKeepAliveMixin);
  sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor = class RenderSliverMultiBoxAdaptor extends RenderSliver_RenderSliverWithKeepAliveMixin$36 {
    setupParentData(child) {
      object.RenderObject.as(child);
      if (!sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.is(child.parentData)) child.parentData = new sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.new();
    }
    get childManager() {
      return this[_childManager];
    }
    get [_debugDanglingKeepAlives]() {
      let t0;
      t0 = this[__RenderSliverMultiBoxAdaptor__debugDanglingKeepAlives];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_debugDanglingKeepAlives")) : t0;
    }
    set [_debugDanglingKeepAlives](t0) {
      this[__RenderSliverMultiBoxAdaptor__debugDanglingKeepAlives] = t0;
    }
    get debugChildIntegrityEnabled() {
      return this[_debugChildIntegrityEnabled];
    }
    set debugChildIntegrityEnabled(enabled) {
      if (!(enabled !== null)) dart.assertFailed(null, I[1], 230, 12, "enabled != null");
      if (!dart.fn(() => {
        this[_debugChildIntegrityEnabled] = enabled;
        return this[_debugVerifyChildOrder]() && (!this[_debugChildIntegrityEnabled] || this[_debugDanglingKeepAlives][$isEmpty]);
      }, T.VoidTobool())()) dart.assertFailed(null, I[1], 231, 12, "() {\r\n      _debugChildIntegrityEnabled = enabled;\r\n      return _debugVerifyChildOrder() &&\r\n        (!_debugChildIntegrityEnabled || _debugDanglingKeepAlives.isEmpty);\r\n    }()");
    }
    adoptChild(child) {
      object.RenderObject.as(child);
      super.adoptChild(child);
      let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
      if (!childParentData[_keptAlive]) this.childManager.didAdoptChild(box.RenderBox.as(child));
    }
    [_debugAssertChildListLocked]() {
      return this.childManager.debugAssertChildListLocked();
    }
    [_debugVerifyChildOrder]() {
      if (this[_debugChildIntegrityEnabled]) {
        let child = this.firstChild;
        let index = null;
        while (child != null) {
          index = this.indexOf(child);
          child = this.childAfter(child);
          if (!(child == null || this.indexOf(child) > index)) dart.assertFailed(null, I[1], 258, 16, "child == null || indexOf(child) > index");
        }
      }
      return true;
    }
    insert(child, opts) {
      box.RenderBox.as(child);
      let after = opts && 'after' in opts ? opts.after : null;
      T.RenderBoxN().as(after);
      if (!!this[_keepAliveBucket][$containsValue](child)) dart.assertFailed(null, I[1], 266, 12, "!_keepAliveBucket.containsValue(child)");
      super.insert(child, {after: after});
      if (!(this.firstChild != null)) dart.assertFailed(null, I[1], 268, 12, "firstChild != null");
      if (!this[_debugVerifyChildOrder]()) dart.assertFailed(null, I[1], 269, 12, "_debugVerifyChildOrder()");
    }
    move(child, opts) {
      box.RenderBox.as(child);
      let after = opts && 'after' in opts ? opts.after : null;
      T.RenderBoxN().as(after);
      let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
      if (!childParentData.keptAlive) {
        super.move(child, {after: after});
        this.childManager.didAdoptChild(child);
        this.markNeedsLayout();
      } else {
        if (dart.equals(this[_keepAliveBucket][$_get](childParentData.index), child)) {
          this[_keepAliveBucket][$remove](childParentData.index);
        }
        if (!dart.fn(() => {
          this[_debugDanglingKeepAlives][$remove](child);
          return true;
        }, T.VoidTobool())()) dart.assertFailed(null, I[1], 296, 14, "() {\r\n        _debugDanglingKeepAlives.remove(child);\r\n        return true;\r\n      }()");
        this.childManager.didAdoptChild(child);
        if (!dart.fn(() => {
          if (this[_keepAliveBucket][$containsKey](childParentData.index)) this[_debugDanglingKeepAlives][$add](dart.nullCheck(this[_keepAliveBucket][$_get](childParentData.index)));
          return true;
        }, T.VoidTobool())()) dart.assertFailed(null, I[1], 305, 14, "() {\r\n        if (_keepAliveBucket.containsKey(childParentData.index))\r\n          _debugDanglingKeepAlives.add(_keepAliveBucket[childParentData.index]!);\r\n        return true;\r\n      }()");
        this[_keepAliveBucket][$_set](dart.nullCheck(childParentData.index), child);
      }
    }
    remove(child) {
      box.RenderBox.as(child);
      let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
      if (!childParentData[_keptAlive]) {
        super.remove(child);
        return;
      }
      if (!dart.equals(this[_keepAliveBucket][$_get](childParentData.index), child)) dart.assertFailed(null, I[1], 321, 12, "_keepAliveBucket[childParentData.index] == child");
      if (!dart.fn(() => {
        this[_debugDanglingKeepAlives][$remove](child);
        return true;
      }, T.VoidTobool())()) dart.assertFailed(null, I[1], 322, 12, "() {\r\n      _debugDanglingKeepAlives.remove(child);\r\n      return true;\r\n    }()");
      this[_keepAliveBucket][$remove](childParentData.index);
      this.dropChild(child);
    }
    removeAll() {
      super.removeAll();
      this[_keepAliveBucket][$values][$forEach](dart.bind(this, 'dropChild'));
      this[_keepAliveBucket][$clear]();
    }
    [_createOrObtainChild](index, opts) {
      let after = opts && 'after' in opts ? opts.after : null;
      this.invokeLayoutCallback(sliver.SliverConstraints, dart.fn(constraints => {
        if (!constraints._equals(this.constraints)) dart.assertFailed(null, I[1], 339, 14, "constraints == this.constraints");
        if (this[_keepAliveBucket][$containsKey](index)) {
          let child = dart.nullCheck(this[_keepAliveBucket][$remove](index));
          let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
          if (!childParentData[_keptAlive]) dart.assertFailed(null, I[1], 343, 16, "childParentData._keptAlive");
          this.dropChild(child);
          child.parentData = childParentData;
          this.insert(child, {after: after});
          childParentData[_keptAlive] = false;
        } else {
          this[_childManager].createChild(index, {after: after});
        }
      }, T.SliverConstraintsTovoid()));
    }
    [_destroyOrCacheChild](child) {
      let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
      if (childParentData.keepAlive) {
        if (!!childParentData[_keptAlive]) dart.assertFailed(null, I[1], 357, 14, "!childParentData._keptAlive");
        this.remove(child);
        this[_keepAliveBucket][$_set](dart.nullCheck(childParentData.index), child);
        child.parentData = childParentData;
        super.adoptChild(child);
        childParentData[_keptAlive] = true;
      } else {
        if (!dart.equals(child.parent, this)) dart.assertFailed(null, I[1], 364, 14, "child.parent == this");
        this[_childManager].removeChild(child);
        if (!(child.parent == null)) dart.assertFailed(null, I[1], 366, 14, "child.parent == null");
      }
    }
    attach(owner) {
      object.PipelineOwner.as(owner);
      super.attach(owner);
      for (let child of this[_keepAliveBucket][$values])
        child.attach(owner);
    }
    detach() {
      super.detach();
      for (let child of this[_keepAliveBucket][$values])
        child.detach();
    }
    redepthChildren() {
      super.redepthChildren();
      this[_keepAliveBucket][$values][$forEach](dart.bind(this, 'redepthChild'));
    }
    visitChildren(visitor) {
      super.visitChildren(visitor);
      this[_keepAliveBucket][$values][$forEach](visitor);
    }
    visitChildrenForSemantics(visitor) {
      super.visitChildren(visitor);
    }
    addInitialChild(opts) {
      let index = opts && 'index' in opts ? opts.index : 0;
      let layoutOffset = opts && 'layoutOffset' in opts ? opts.layoutOffset : 0;
      if (!this[_debugAssertChildListLocked]()) dart.assertFailed(null, I[1], 420, 12, "_debugAssertChildListLocked()");
      if (!(this.firstChild == null)) dart.assertFailed(null, I[1], 421, 12, "firstChild == null");
      this[_createOrObtainChild](index, {after: null});
      if (this.firstChild != null) {
        if (!dart.equals(this.firstChild, this.lastChild)) dart.assertFailed(null, I[1], 424, 14, "firstChild == lastChild");
        if (!(this.indexOf(dart.nullCheck(this.firstChild)) === index)) dart.assertFailed(null, I[1], 425, 14, "indexOf(firstChild!) == index");
        let firstChildParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(dart.nullCheck(this.firstChild).parentData));
        firstChildParentData.layoutOffset = layoutOffset;
        return true;
      }
      this.childManager.setDidUnderflow(true);
      return false;
    }
    insertAndLayoutLeadingChild(childConstraints, opts) {
      let parentUsesSize = opts && 'parentUsesSize' in opts ? opts.parentUsesSize : false;
      if (!this[_debugAssertChildListLocked]()) dart.assertFailed(null, I[1], 452, 12, "_debugAssertChildListLocked()");
      let index = this.indexOf(dart.nullCheck(this.firstChild)) - 1;
      this[_createOrObtainChild](index, {after: null});
      if (this.indexOf(dart.nullCheck(this.firstChild)) === index) {
        dart.nullCheck(this.firstChild).layout(childConstraints, {parentUsesSize: parentUsesSize});
        return this.firstChild;
      }
      this.childManager.setDidUnderflow(true);
      return null;
    }
    insertAndLayoutChild(childConstraints, opts) {
      let after = opts && 'after' in opts ? opts.after : null;
      let parentUsesSize = opts && 'parentUsesSize' in opts ? opts.parentUsesSize : false;
      if (!this[_debugAssertChildListLocked]()) dart.assertFailed(null, I[1], 481, 12, "_debugAssertChildListLocked()");
      if (!(after != null)) dart.assertFailed(null, I[1], 482, 12, "after != null");
      let index = this.indexOf(dart.nullCheck(after)) + 1;
      this[_createOrObtainChild](index, {after: after});
      let child = this.childAfter(after);
      if (child != null && this.indexOf(child) === index) {
        child.layout(childConstraints, {parentUsesSize: parentUsesSize});
        return child;
      }
      this.childManager.setDidUnderflow(true);
      return null;
    }
    collectGarbage(leadingGarbage, trailingGarbage) {
      if (!this[_debugAssertChildListLocked]()) dart.assertFailed(null, I[1], 505, 12, "_debugAssertChildListLocked()");
      if (!(this.childCount >= leadingGarbage + trailingGarbage)) dart.assertFailed(null, I[1], 506, 12, "childCount >= leadingGarbage + trailingGarbage");
      this.invokeLayoutCallback(sliver.SliverConstraints, dart.fn(constraints => {
        while (leadingGarbage > 0) {
          this[_destroyOrCacheChild](dart.nullCheck(this.firstChild));
          leadingGarbage = leadingGarbage - 1;
        }
        while (trailingGarbage > 0) {
          this[_destroyOrCacheChild](dart.nullCheck(this.lastChild));
          trailingGarbage = trailingGarbage - 1;
        }
        this[_keepAliveBucket][$values][$where](dart.fn(child => {
          let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
          return !childParentData.keepAlive;
        }, T.RenderBoxTobool()))[$toList]()[$forEach](dart.bind(this[_childManager], 'removeChild'));
        if (!this[_keepAliveBucket][$values][$where](dart.fn(child => {
          let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
          return !childParentData.keepAlive;
        }, T.RenderBoxTobool()))[$isEmpty]) dart.assertFailed(null, I[1], 523, 14, "_keepAliveBucket.values.where((RenderBox child) {\r\n        final SliverMultiBoxAdaptorParentData childParentData = child.parentData! as SliverMultiBoxAdaptorParentData;\r\n        return !childParentData.keepAlive;\r\n      }).isEmpty");
      }, T.SliverConstraintsTovoid()));
    }
    indexOf(child) {
      if (!(child !== null)) dart.assertFailed(null, I[1], 533, 12, "child != null");
      let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
      if (!(childParentData.index != null)) dart.assertFailed(null, I[1], 535, 12, "childParentData.index != null");
      return dart.nullCheck(childParentData.index);
    }
    paintExtentOf(child) {
      if (!(child !== null)) dart.assertFailed(null, I[1], 543, 12, "child != null");
      if (!child.hasSize) dart.assertFailed(null, I[1], 544, 12, "child.hasSize");
      switch (this.constraints.axis) {
        case C[0] || CT.C0:
        {
          return child.size.width;
        }
        case C[1] || CT.C1:
        {
          return child.size.height;
        }
      }
    }
    hitTestChildren(result, opts) {
      let mainAxisPosition = opts && 'mainAxisPosition' in opts ? opts.mainAxisPosition : null;
      let crossAxisPosition = opts && 'crossAxisPosition' in opts ? opts.crossAxisPosition : null;
      let child = this.lastChild;
      let boxResult = new box.BoxHitTestResult.wrap(result);
      while (child != null) {
        if (this.hitTestBoxChild(boxResult, child, {mainAxisPosition: mainAxisPosition, crossAxisPosition: crossAxisPosition})) return true;
        child = this.childBefore(child);
      }
      return false;
    }
    childMainAxisPosition(child) {
      box.RenderBox.as(child);
      return dart.nullCheck(this.childScrollOffset(child)) - this.constraints.scrollOffset;
    }
    childScrollOffset(child) {
      object.RenderObject.as(child);
      if (!(child !== null)) dart.assertFailed(null, I[1], 572, 12, "child != null");
      if (!dart.equals(child.parent, this)) dart.assertFailed(null, I[1], 573, 12, "child.parent == this");
      let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
      return childParentData.layoutOffset;
    }
    applyPaintTransform(child, transform) {
      box.RenderBox.as(child);
      let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(child.parentData));
      if (childParentData.index == null) {
        transform.setZero();
      } else if (this[_keepAliveBucket][$containsKey](childParentData.index)) {
        transform.setZero();
      } else {
        this.applyPaintTransformForBoxChild(child, transform);
      }
    }
    paint(context, offset) {
      if (this.firstChild == null) return;
      let mainAxisUnit = null;
      let crossAxisUnit = null;
      let originOffset = null;
      let addExtent = null;
      switch (sliver.applyGrowthDirectionToAxisDirection(this.constraints.axisDirection, this.constraints.growthDirection)) {
        case C[4] || CT.C4:
        {
          mainAxisUnit = C[2] || CT.C2;
          crossAxisUnit = C[3] || CT.C3;
          originOffset = offset['+'](new ui.Offset.new(0.0, dart.nullCheck(this.geometry).paintExtent));
          addExtent = true;
          break;
        }
        case C[6] || CT.C6:
        {
          mainAxisUnit = C[3] || CT.C3;
          crossAxisUnit = C[5] || CT.C5;
          originOffset = offset;
          addExtent = false;
          break;
        }
        case C[7] || CT.C7:
        {
          mainAxisUnit = C[5] || CT.C5;
          crossAxisUnit = C[3] || CT.C3;
          originOffset = offset;
          addExtent = false;
          break;
        }
        case C[9] || CT.C9:
        {
          mainAxisUnit = C[8] || CT.C8;
          crossAxisUnit = C[5] || CT.C5;
          originOffset = offset['+'](new ui.Offset.new(dart.nullCheck(this.geometry).paintExtent, 0.0));
          addExtent = true;
          break;
        }
      }
      if (!(mainAxisUnit !== null)) dart.assertFailed(null, I[1], 631, 12, "mainAxisUnit != null");
      if (!(addExtent !== null)) dart.assertFailed(null, I[1], 632, 12, "addExtent != null");
      let child = this.firstChild;
      while (child != null) {
        let mainAxisDelta = this.childMainAxisPosition(child);
        let crossAxisDelta = this.childCrossAxisPosition(child);
        let childOffset = new ui.Offset.new(originOffset.dx + mainAxisUnit.dx * mainAxisDelta + crossAxisUnit.dx * crossAxisDelta, originOffset.dy + mainAxisUnit.dy * mainAxisDelta + crossAxisUnit.dy * crossAxisDelta);
        if (addExtent) childOffset = childOffset['+'](mainAxisUnit['*'](this.paintExtentOf(child)));
        if (mainAxisDelta < this.constraints.remainingPaintExtent && mainAxisDelta + this.paintExtentOf(child) > 0) context.paintChild(child, childOffset);
        child = this.childAfter(child);
      }
    }
    debugFillProperties(properties) {
      super.debugFillProperties(properties);
      properties.add(diagnostics.DiagnosticsNode.message(this.firstChild != null ? "currently live children: " + dart.str(this.indexOf(dart.nullCheck(this.firstChild))) + " to " + dart.str(this.indexOf(dart.nullCheck(this.lastChild))) : "no children current live"));
    }
    debugAssertChildListIsNonEmptyAndContiguous() {
      if (!dart.fn(() => {
        if (!(this.firstChild != null)) dart.assertFailed(null, I[1], 665, 14, "firstChild != null");
        let index = this.indexOf(dart.nullCheck(this.firstChild));
        let child = this.childAfter(dart.nullCheck(this.firstChild));
        while (child != null) {
          index = index + 1;
          if (!(this.indexOf(child) === index)) dart.assertFailed(null, I[1], 670, 16, "indexOf(child) == index");
          child = this.childAfter(child);
        }
        return true;
      }, T.VoidTobool())()) dart.assertFailed(null, I[1], 664, 12, "() {\r\n      assert(firstChild != null);\r\n      int index = indexOf(firstChild!);\r\n      RenderBox? child = childAfter(firstChild!);\r\n      while (child != null) {\r\n        index += 1;\r\n        assert(indexOf(child) == index);\r\n        child = childAfter(child);\r\n      }\r\n      return true;\r\n    }()");
      return true;
    }
    debugDescribeChildren() {
      let t1;
      let children = T.JSArrayOfDiagnosticsNode().of([]);
      if (this.firstChild != null) {
        let child = this.firstChild;
        while (true) {
          let childParentData = sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData.as(dart.nullCheck(dart.nullCheck(child).parentData));
          children[$add](child.toDiagnosticsNode({name: "child with index " + dart.str(childParentData.index)}));
          if (dart.equals(child, this.lastChild)) break;
          child = childParentData.nextSibling;
        }
      }
      if (this[_keepAliveBucket][$isNotEmpty]) {
        let indices = (t1 = this[_keepAliveBucket][$keys][$toList](), (() => {
          t1[$sort]();
          return t1;
        })());
        for (let index of indices) {
          children[$add](dart.nullCheck(this[_keepAliveBucket][$_get](index)).toDiagnosticsNode({name: "child with index " + dart.str(index) + " (kept alive but not laid out)", style: diagnostics.DiagnosticsTreeStyle.offstage}));
        }
      }
      return children;
    }
  };
  (sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor.new = function(opts) {
    let childManager = opts && 'childManager' in opts ? opts.childManager : null;
    this[_keepAliveBucket] = new (T.IdentityMapOfint$RenderBox()).new();
    this[__RenderSliverMultiBoxAdaptor__debugDanglingKeepAlives] = null;
    this[_debugChildIntegrityEnabled] = true;
    if (!(childManager !== null)) dart.assertFailed(null, I[1], 190, 15, "childManager != null");
    this[_childManager] = childManager;
    sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor.__proto__.new.call(this);
    if (!dart.fn(() => {
      this[_debugDanglingKeepAlives] = T.JSArrayOfRenderBox().of([]);
      return true;
    }, T.VoidTobool())()) dart.assertFailed(null, I[1], 192, 12, "() {\r\n      _debugDanglingKeepAlives = <RenderBox>[];\r\n      return true;\r\n    }()");
  }).prototype = sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor.prototype;
  dart.addTypeTests(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor);
  dart.addTypeCaches(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor);
  dart.setMethodSignature(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor, () => ({
    __proto__: dart.getMethods(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor.__proto__),
    [_debugAssertChildListLocked]: dart.fnType(core.bool, []),
    [_debugVerifyChildOrder]: dart.fnType(core.bool, []),
    [_createOrObtainChild]: dart.fnType(dart.void, [core.int], {}, {after: dart.nullable(box.RenderBox)}),
    [_destroyOrCacheChild]: dart.fnType(dart.void, [box.RenderBox]),
    addInitialChild: dart.fnType(core.bool, [], {index: core.int, layoutOffset: core.double}, {}),
    insertAndLayoutLeadingChild: dart.fnType(dart.nullable(box.RenderBox), [box.BoxConstraints], {parentUsesSize: core.bool}, {}),
    insertAndLayoutChild: dart.fnType(dart.nullable(box.RenderBox), [box.BoxConstraints], {parentUsesSize: core.bool}, {after: dart.nullable(box.RenderBox)}),
    collectGarbage: dart.fnType(dart.void, [core.int, core.int]),
    indexOf: dart.fnType(core.int, [box.RenderBox]),
    paintExtentOf: dart.fnType(core.double, [box.RenderBox]),
    debugAssertChildListIsNonEmptyAndContiguous: dart.fnType(core.bool, [])
  }));
  dart.setGetterSignature(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor, () => ({
    __proto__: dart.getGetters(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor.__proto__),
    childManager: sliver_multi_box_adaptor.RenderSliverBoxChildManager,
    [_debugDanglingKeepAlives]: core.List$(box.RenderBox),
    debugChildIntegrityEnabled: core.bool
  }));
  dart.setSetterSignature(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor, () => ({
    __proto__: dart.getSetters(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor.__proto__),
    [_debugDanglingKeepAlives]: core.List$(box.RenderBox),
    debugChildIntegrityEnabled: core.bool
  }));
  dart.setLibraryUri(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor, I[0]);
  dart.setFieldSignature(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor, () => ({
    __proto__: dart.getFields(sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor.__proto__),
    [_childManager]: dart.finalFieldType(sliver_multi_box_adaptor.RenderSliverBoxChildManager),
    [_keepAliveBucket]: dart.finalFieldType(core.Map$(core.int, box.RenderBox)),
    [__RenderSliverMultiBoxAdaptor__debugDanglingKeepAlives]: dart.fieldType(dart.nullable(core.List$(box.RenderBox))),
    [_debugChildIntegrityEnabled]: dart.fieldType(core.bool)
  }));
  dart.trackLibraries("packages/flutter/src/rendering/sliver_multi_box_adaptor.dart", {
    "package:flutter/src/rendering/sliver_multi_box_adaptor.dart": sliver_multi_box_adaptor
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["sliver_multi_box_adaptor.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/flutter/src/rendering/sliver_multi_box_adaptor.dart.lib.js"}');
  // Exports:
  return {
    src__rendering__sliver_multi_box_adaptor: sliver_multi_box_adaptor
  };
}));

//# sourceMappingURL=sliver_multi_box_adaptor.dart.lib.js.map
>>>>>>> AUg2
