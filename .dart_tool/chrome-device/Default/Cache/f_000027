<<<<<<< HEAD
define(['dart_sdk', 'packages/flutter/src/painting/box_border.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/painting/gradient.dart', 'packages/flutter/src/foundation/collections.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/painting/colors.dart', 'packages/flutter/src/painting/decoration_image.dart', 'packages/flutter/src/painting/decoration.dart', 'packages/flutter/src/painting/_network_image_web.dart'], (function load__packages__flutter__src__painting__box_decoration_dart(dart_sdk, packages__flutter__src__painting__box_border$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__painting__gradient$46dart, packages__flutter__src__foundation__collections$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__painting__colors$46dart, packages__flutter__src__painting__decoration_image$46dart, packages__flutter__src__painting__decoration$46dart, packages__flutter__src__painting___network_image_web$46dart) {
=======
define(['dart_sdk', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/material/material_state.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/rounded_rectangle_border.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/services/mouse_cursor.dart', 'packages/flutter/src/material/constants.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/foundation/debug.dart', 'packages/flutter/src/rendering/flex.dart'], (function load__packages__flutter__src__material__elevated_button_dart(dart_sdk, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__material__material_state$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__rounded_rectangle_border$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__services__mouse_cursor$46dart, packages__flutter__src__material__constants$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__foundation__debug$46dart, packages__flutter__src__rendering__flex$46dart) {
>>>>>>> AUg2
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
<<<<<<< HEAD
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const box_border = packages__flutter__src__painting__box_border$46dart.src__painting__box_border;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const gradient = packages__flutter__src__painting__gradient$46dart.src__painting__gradient;
  const collections = packages__flutter__src__foundation__collections$46dart.src__foundation__collections;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const colors = packages__flutter__src__painting__colors$46dart.src__painting__colors;
  const decoration_image = packages__flutter__src__painting__decoration_image$46dart.src__painting__decoration_image;
  const decoration = packages__flutter__src__painting__decoration$46dart.src__painting__decoration;
  const image_provider = packages__flutter__src__painting___network_image_web$46dart.src__painting__image_provider;
  var box_decoration = Object.create(dart.library);
  var $runtimeType = dartx.runtimeType;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    BoxDecorationN: () => (T.BoxDecorationN = dart.constFn(dart.nullable(box_decoration.BoxDecoration)))(),
    DiagnosticsPropertyOfDecorationImage: () => (T.DiagnosticsPropertyOfDecorationImage = dart.constFn(diagnostics.DiagnosticsProperty$(decoration_image.DecorationImage)))(),
    DiagnosticsPropertyOfBoxBorder: () => (T.DiagnosticsPropertyOfBoxBorder = dart.constFn(diagnostics.DiagnosticsProperty$(box_border.BoxBorder)))(),
    DiagnosticsPropertyOfBorderRadiusGeometry: () => (T.DiagnosticsPropertyOfBorderRadiusGeometry = dart.constFn(diagnostics.DiagnosticsProperty$(border_radius.BorderRadiusGeometry)))(),
    IterablePropertyOfBoxShadow: () => (T.IterablePropertyOfBoxShadow = dart.constFn(diagnostics.IterableProperty$(box_shadow.BoxShadow)))(),
    DiagnosticsPropertyOfGradient: () => (T.DiagnosticsPropertyOfGradient = dart.constFn(diagnostics.DiagnosticsProperty$(gradient.Gradient)))(),
    EnumPropertyOfBoxShape: () => (T.EnumPropertyOfBoxShape = dart.constFn(diagnostics.EnumProperty$(box_border.BoxShape)))(),
    BorderRadiusN: () => (T.BorderRadiusN = dart.constFn(dart.nullable(border_radius.BorderRadius)))()
=======
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const button_style = packages__flutter__src__material__icon_button$46dart.src__material__button_style;
  const button_style_button = packages__flutter__src__material__icon_button$46dart.src__material__button_style_button;
  const theme$ = packages__flutter__src__material__icon_button$46dart.src__material__theme;
  const ink_ripple = packages__flutter__src__material__icon_button$46dart.src__material__ink_ripple;
  const elevated_button_theme = packages__flutter__src__material__icon_button$46dart.src__material__elevated_button_theme;
  const material_state = packages__flutter__src__material__material_state$46dart.src__material__material_state;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const rounded_rectangle_border = packages__flutter__src__painting__rounded_rectangle_border$46dart.src__painting__rounded_rectangle_border;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const mouse_cursor = packages__flutter__src__services__mouse_cursor$46dart.src__services__mouse_cursor;
  const constants = packages__flutter__src__material__constants$46dart.src__material__constants;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const diagnostics = packages__flutter__src__foundation__debug$46dart.src__foundation__diagnostics;
  const flex = packages__flutter__src__rendering__flex$46dart.src__rendering__flex;
  var elevated_button = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    TextStyleN: () => (T.TextStyleN = dart.constFn(dart.nullable(text_style.TextStyle)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))()
>>>>>>> AUg2
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
<<<<<<< HEAD
        __proto__: box_border.BoxShape.prototype,
        [_name]: "BoxShape.rectangle",
=======
        __proto__: ui.Clip.prototype,
        [_name]: "Clip.none",
>>>>>>> AUg2
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
<<<<<<< HEAD
        __proto__: box_border.BoxShape.prototype,
        [_name]: "BoxShape.circle",
        index: 1
      });
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = [
    "file:///D:/DevTools/flutter/packages/flutter/lib/src/painting/box_decoration.dart",
    "package:flutter/src/painting/box_decoration.dart"
  ];
  var color$ = dart.privateName(box_decoration, "BoxDecoration.color");
  var image$ = dart.privateName(box_decoration, "BoxDecoration.image");
  var border$ = dart.privateName(box_decoration, "BoxDecoration.border");
  var borderRadius$ = dart.privateName(box_decoration, "BoxDecoration.borderRadius");
  var boxShadow$ = dart.privateName(box_decoration, "BoxDecoration.boxShadow");
  var gradient$ = dart.privateName(box_decoration, "BoxDecoration.gradient");
  var backgroundBlendMode$ = dart.privateName(box_decoration, "BoxDecoration.backgroundBlendMode");
  var shape$ = dart.privateName(box_decoration, "BoxDecoration.shape");
  var _name = dart.privateName(box_border, "_name");
  box_decoration.BoxDecoration = class BoxDecoration extends decoration.Decoration {
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get image() {
      return this[image$];
    }
    set image(value) {
      super.image = value;
    }
    get border() {
      return this[border$];
    }
    set border(value) {
      super.border = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get boxShadow() {
      return this[boxShadow$];
    }
    set boxShadow(value) {
      super.boxShadow = value;
    }
    get gradient() {
      return this[gradient$];
    }
    set gradient(value) {
      super.gradient = value;
    }
    get backgroundBlendMode() {
      return this[backgroundBlendMode$];
    }
    set backgroundBlendMode(value) {
      super.backgroundBlendMode = value;
    }
    get shape() {
      return this[shape$];
    }
    set shape(value) {
      super.shape = value;
    }
    copyWith(opts) {
      let t0, t0$, t0$0, t0$1, t0$2, t0$3, t0$4, t0$5;
      let color = opts && 'color' in opts ? opts.color : null;
      let image = opts && 'image' in opts ? opts.image : null;
      let border = opts && 'border' in opts ? opts.border : null;
      let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
      let boxShadow = opts && 'boxShadow' in opts ? opts.boxShadow : null;
      let gradient = opts && 'gradient' in opts ? opts.gradient : null;
      let backgroundBlendMode = opts && 'backgroundBlendMode' in opts ? opts.backgroundBlendMode : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      return new box_decoration.BoxDecoration.new({color: (t0 = color, t0 == null ? this.color : t0), image: (t0$ = image, t0$ == null ? this.image : t0$), border: (t0$0 = border, t0$0 == null ? this.border : t0$0), borderRadius: (t0$1 = borderRadius, t0$1 == null ? this.borderRadius : t0$1), boxShadow: (t0$2 = boxShadow, t0$2 == null ? this.boxShadow : t0$2), gradient: (t0$3 = gradient, t0$3 == null ? this.gradient : t0$3), backgroundBlendMode: (t0$4 = backgroundBlendMode, t0$4 == null ? this.backgroundBlendMode : t0$4), shape: (t0$5 = shape, t0$5 == null ? this.shape : t0$5)});
    }
    debugAssertIsValid() {
      if (!(this.shape !== box_border.BoxShape.circle || this.borderRadius == null)) dart.assertFailed(null, I[0], 131, 12, "shape != BoxShape.circle || borderRadius == null");
      return super.debugAssertIsValid();
    }
    get padding() {
      let t0;
      t0 = this.border;
      return t0 == null ? null : t0.dimensions;
    }
    getClipPath(rect, textDirection) {
      let t0, t0$, t0$0;
      switch (this.shape) {
        case C[1] || CT.C1:
        {
          let center = rect.center;
          let radius = rect.shortestSide / 2.0;
          let square = new ui.Rect.fromCircle({center: center, radius: radius});
          t0 = ui.Path.new();
          return (() => {
            t0.addOval(square);
            return t0;
          })();
        }
        case C[0] || CT.C0:
        {
          if (this.borderRadius != null) {
            t0$ = ui.Path.new();
            return (() => {
              t0$.addRRect(dart.nullCheck(this.borderRadius).resolve(textDirection).toRRect(rect));
              return t0$;
            })();
          }
          t0$0 = ui.Path.new();
          return (() => {
            t0$0.addRect(rect);
            return t0$0;
          })();
        }
      }
    }
    scale(factor) {
      let t0;
      return new box_decoration.BoxDecoration.new({color: ui.Color.lerp(null, this.color, factor), image: this.image, border: box_border.BoxBorder.lerp(null, this.border, factor), borderRadius: border_radius.BorderRadiusGeometry.lerp(null, this.borderRadius, factor), boxShadow: box_shadow.BoxShadow.lerpList(null, this.boxShadow, factor), gradient: (t0 = this.gradient, t0 == null ? null : t0.scale(factor)), shape: this.shape});
    }
    get isComplex() {
      return this.boxShadow != null;
    }
    lerpFrom(a, t) {
      if (a == null) return this.scale(t);
      if (box_decoration.BoxDecoration.is(a)) return box_decoration.BoxDecoration.lerp(a, this, t);
      return T.BoxDecorationN().as(super.lerpFrom(a, t));
    }
    lerpTo(b, t) {
      if (b == null) return this.scale(1.0 - t);
      if (box_decoration.BoxDecoration.is(b)) return box_decoration.BoxDecoration.lerp(this, b, t);
      return T.BoxDecorationN().as(super.lerpTo(b, t));
    }
    static lerp(a, b, t) {
      if (!(t !== null)) dart.assertFailed(null, I[0], 289, 12, "t != null");
      if (a == null && b == null) return null;
      if (a == null) return dart.nullCheck(b).scale(t);
      if (b == null) return a.scale(1.0 - t);
      if (t === 0.0) return a;
      if (t === 1.0) return b;
      return new box_decoration.BoxDecoration.new({color: ui.Color.lerp(a.color, b.color, t), image: t < 0.5 ? a.image : b.image, border: box_border.BoxBorder.lerp(a.border, b.border, t), borderRadius: border_radius.BorderRadiusGeometry.lerp(a.borderRadius, b.borderRadius, t), boxShadow: box_shadow.BoxShadow.lerpList(a.boxShadow, b.boxShadow, t), gradient: gradient.Gradient.lerp(a.gradient, b.gradient, t), shape: t < 0.5 ? a.shape : b.shape});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!other[$runtimeType]._equals(this[$runtimeType])) return false;
      return box_decoration.BoxDecoration.is(other) && dart.equals(other.color, this.color) && dart.equals(other.image, this.image) && dart.equals(other.border, this.border) && dart.equals(other.borderRadius, this.borderRadius) && collections.listEquals(box_shadow.BoxShadow, other.boxShadow, this.boxShadow) && dart.equals(other.gradient, this.gradient) && other.shape === this.shape;
    }
    get hashCode() {
      return ui.hashValues(this.color, this.image, this.border, this.borderRadius, ui.hashList(this.boxShadow), this.gradient, this.shape);
    }
    debugFillProperties(properties) {
      let t0;
      super.debugFillProperties(properties);
      t0 = properties;
      (() => {
        t0.defaultDiagnosticsTreeStyle = diagnostics.DiagnosticsTreeStyle.whitespace;
        t0.emptyBodyDescription = "<no decorations specified>";
        return t0;
      })();
      properties.add(new colors.ColorProperty.new("color", this.color, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfDecorationImage()).new("image", this.image, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfBoxBorder()).new("border", this.border, {defaultValue: null}));
      properties.add(new (T.DiagnosticsPropertyOfBorderRadiusGeometry()).new("borderRadius", this.borderRadius, {defaultValue: null}));
      properties.add(new (T.IterablePropertyOfBoxShadow()).new("boxShadow", this.boxShadow, {defaultValue: null, style: diagnostics.DiagnosticsTreeStyle.whitespace}));
      properties.add(new (T.DiagnosticsPropertyOfGradient()).new("gradient", this.gradient, {defaultValue: null}));
      properties.add(new (T.EnumPropertyOfBoxShape()).new("shape", this.shape, {defaultValue: box_border.BoxShape.rectangle}));
    }
    hitTest(size, position, opts) {
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      if (!(this.shape !== null)) dart.assertFailed(null, I[0], 358, 12, "shape != null");
      if (!ui.Offset.zero['&'](size).contains(position)) dart.assertFailed(null, I[0], 359, 12, "(Offset.zero & size).contains(position)");
      switch (this.shape) {
        case C[0] || CT.C0:
        {
          if (this.borderRadius != null) {
            let bounds = dart.nullCheck(this.borderRadius).resolve(textDirection).toRRect(ui.Offset.zero['&'](size));
            return bounds.contains(position);
          }
          return true;
        }
        case C[1] || CT.C1:
        {
          let center = size.center(ui.Offset.zero);
          let distance = position['-'](center).distance;
          return distance <= math.min(core.double, size.width, size.height) / 2.0;
        }
      }
    }
    createBoxPainter(onChanged = null) {
      if (!(onChanged != null || this.image == null)) dart.assertFailed(null, I[0], 377, 12, "onChanged != null || image == null");
      return new box_decoration._BoxDecorationPainter.new(this, onChanged);
    }
  };
  (box_decoration.BoxDecoration.new = function(opts) {
    let color = opts && 'color' in opts ? opts.color : null;
    let image = opts && 'image' in opts ? opts.image : null;
    let border = opts && 'border' in opts ? opts.border : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let boxShadow = opts && 'boxShadow' in opts ? opts.boxShadow : null;
    let gradient = opts && 'gradient' in opts ? opts.gradient : null;
    let backgroundBlendMode = opts && 'backgroundBlendMode' in opts ? opts.backgroundBlendMode : null;
    let shape = opts && 'shape' in opts ? opts.shape : C[0] || CT.C0;
    this[color$] = color;
    this[image$] = image;
    this[border$] = border;
    this[borderRadius$] = borderRadius;
    this[boxShadow$] = boxShadow;
    this[gradient$] = gradient;
    this[backgroundBlendMode$] = backgroundBlendMode;
    this[shape$] = shape;
    if (!(shape !== null)) dart.assertFailed(null, I[0], 98, 15, "shape != null");
    if (!(backgroundBlendMode == null || color != null || gradient != null)) dart.assertFailed("backgroundBlendMode applies to BoxDecoration's background color or " + "gradient, but no color or gradient was provided.", I[0], 100, 10, "backgroundBlendMode == null || color != null || gradient != null");
    box_decoration.BoxDecoration.__proto__.new.call(this);
    ;
  }).prototype = box_decoration.BoxDecoration.prototype;
  dart.addTypeTests(box_decoration.BoxDecoration);
  dart.addTypeCaches(box_decoration.BoxDecoration);
  dart.setMethodSignature(box_decoration.BoxDecoration, () => ({
    __proto__: dart.getMethods(box_decoration.BoxDecoration.__proto__),
    copyWith: dart.fnType(box_decoration.BoxDecoration, [], {backgroundBlendMode: dart.nullable(ui.BlendMode), border: dart.nullable(box_border.BoxBorder), borderRadius: dart.nullable(border_radius.BorderRadiusGeometry), boxShadow: dart.nullable(core.List$(box_shadow.BoxShadow)), color: dart.nullable(ui.Color), gradient: dart.nullable(gradient.Gradient), image: dart.nullable(decoration_image.DecorationImage), shape: dart.nullable(box_border.BoxShape)}, {}),
    scale: dart.fnType(box_decoration.BoxDecoration, [core.double]),
    lerpFrom: dart.fnType(dart.nullable(box_decoration.BoxDecoration), [dart.nullable(decoration.Decoration), core.double]),
    lerpTo: dart.fnType(dart.nullable(box_decoration.BoxDecoration), [dart.nullable(decoration.Decoration), core.double]),
    createBoxPainter: dart.fnType(box_decoration._BoxDecorationPainter, [], [dart.nullable(dart.fnType(dart.void, []))])
  }));
  dart.setLibraryUri(box_decoration.BoxDecoration, I[1]);
  dart.setFieldSignature(box_decoration.BoxDecoration, () => ({
    __proto__: dart.getFields(box_decoration.BoxDecoration.__proto__),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    image: dart.finalFieldType(dart.nullable(decoration_image.DecorationImage)),
    border: dart.finalFieldType(dart.nullable(box_border.BoxBorder)),
    borderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadiusGeometry)),
    boxShadow: dart.finalFieldType(dart.nullable(core.List$(box_shadow.BoxShadow))),
    gradient: dart.finalFieldType(dart.nullable(gradient.Gradient)),
    backgroundBlendMode: dart.finalFieldType(dart.nullable(ui.BlendMode)),
    shape: dart.finalFieldType(box_border.BoxShape)
  }));
  dart.defineExtensionMethods(box_decoration.BoxDecoration, ['_equals']);
  dart.defineExtensionAccessors(box_decoration.BoxDecoration, ['hashCode']);
  var _cachedBackgroundPaint = dart.privateName(box_decoration, "_cachedBackgroundPaint");
  var _rectForCachedBackgroundPaint = dart.privateName(box_decoration, "_rectForCachedBackgroundPaint");
  var _imagePainter = dart.privateName(box_decoration, "_imagePainter");
  var _decoration$ = dart.privateName(box_decoration, "_decoration");
  var _getBackgroundPaint = dart.privateName(box_decoration, "_getBackgroundPaint");
  var _paintBox = dart.privateName(box_decoration, "_paintBox");
  var _paintShadows = dart.privateName(box_decoration, "_paintShadows");
  var _paintBackgroundColor = dart.privateName(box_decoration, "_paintBackgroundColor");
  var _paintBackgroundImage = dart.privateName(box_decoration, "_paintBackgroundImage");
  box_decoration._BoxDecorationPainter = class _BoxDecorationPainter extends decoration.BoxPainter {
    [_getBackgroundPaint](rect, textDirection) {
      if (!(rect !== null)) dart.assertFailed(null, I[0], 393, 12, "rect != null");
      if (!(this[_decoration$].gradient != null || this[_rectForCachedBackgroundPaint] == null)) dart.assertFailed(null, I[0], 394, 12, "_decoration.gradient != null || _rectForCachedBackgroundPaint == null");
      if (this[_cachedBackgroundPaint] == null || this[_decoration$].gradient != null && !dart.equals(this[_rectForCachedBackgroundPaint], rect)) {
        let paint = ui.Paint.new();
        if (this[_decoration$].backgroundBlendMode != null) paint.blendMode = dart.nullCheck(this[_decoration$].backgroundBlendMode);
        if (this[_decoration$].color != null) paint.color = dart.nullCheck(this[_decoration$].color);
        if (this[_decoration$].gradient != null) {
          paint.shader = dart.nullCheck(this[_decoration$].gradient).createShader(rect, {textDirection: textDirection});
          this[_rectForCachedBackgroundPaint] = rect;
        }
        this[_cachedBackgroundPaint] = paint;
      }
      return dart.nullCheck(this[_cachedBackgroundPaint]);
    }
    [_paintBox](canvas, rect, paint, textDirection) {
      switch (this[_decoration$].shape) {
        case C[1] || CT.C1:
        {
          if (!(this[_decoration$].borderRadius == null)) dart.assertFailed(null, I[0], 416, 16, "_decoration.borderRadius == null");
          let center = rect.center;
          let radius = rect.shortestSide / 2.0;
          canvas.drawCircle(center, radius, paint);
          break;
        }
        case C[0] || CT.C0:
        {
          if (this[_decoration$].borderRadius == null) {
            canvas.drawRect(rect, paint);
          } else {
            canvas.drawRRect(dart.nullCheck(this[_decoration$].borderRadius).resolve(textDirection).toRRect(rect), paint);
          }
          break;
        }
      }
    }
    [_paintShadows](canvas, rect, textDirection) {
      if (this[_decoration$].boxShadow == null) return;
      for (let boxShadow of dart.nullCheck(this[_decoration$].boxShadow)) {
        let paint = boxShadow.toPaint();
        let bounds = rect.shift(boxShadow.offset).inflate(boxShadow.spreadRadius);
        this[_paintBox](canvas, bounds, paint, textDirection);
      }
    }
    [_paintBackgroundColor](canvas, rect, textDirection) {
      if (this[_decoration$].color != null || this[_decoration$].gradient != null) this[_paintBox](canvas, rect, this[_getBackgroundPaint](rect, textDirection), textDirection);
    }
    [_paintBackgroundImage](canvas, rect, configuration) {
      let t0, t0$;
      if (this[_decoration$].image == null) return;
      this[_imagePainter] == null ? this[_imagePainter] = dart.nullCheck(this[_decoration$].image).createPainter(dart.nullCheck(this.onChanged)) : null;
      let clipPath = null;
      switch (this[_decoration$].shape) {
        case C[1] || CT.C1:
        {
          if (!(this[_decoration$].borderRadius == null)) dart.assertFailed(null, I[0], 454, 16, "_decoration.borderRadius == null");
          let center = rect.center;
          let radius = rect.shortestSide / 2.0;
          let square = new ui.Rect.fromCircle({center: center, radius: radius});
          clipPath = (t0 = ui.Path.new(), (() => {
            t0.addOval(square);
            return t0;
          })());
          break;
        }
        case C[0] || CT.C0:
        {
          if (this[_decoration$].borderRadius != null) clipPath = (t0$ = ui.Path.new(), (() => {
            t0$.addRRect(dart.nullCheck(this[_decoration$].borderRadius).resolve(configuration.textDirection).toRRect(rect));
            return t0$;
          })());
          break;
        }
      }
      dart.nullCheck(this[_imagePainter]).paint(canvas, rect, clipPath, configuration);
    }
    dispose() {
      let t0;
      t0 = this[_imagePainter];
      t0 == null ? null : t0.dispose();
      super.dispose();
    }
    paint(canvas, offset, configuration) {
      let t0;
      if (!(configuration !== null)) dart.assertFailed(null, I[0], 477, 12, "configuration != null");
      if (!(configuration.size != null)) dart.assertFailed(null, I[0], 478, 12, "configuration.size != null");
      let rect = offset['&'](dart.nullCheck(configuration.size));
      let textDirection = configuration.textDirection;
      this[_paintShadows](canvas, rect, textDirection);
      this[_paintBackgroundColor](canvas, rect, textDirection);
      this[_paintBackgroundImage](canvas, rect, configuration);
      t0 = this[_decoration$].border;
      t0 == null ? null : t0.paint(canvas, rect, {shape: this[_decoration$].shape, borderRadius: T.BorderRadiusN().as(this[_decoration$].borderRadius), textDirection: configuration.textDirection});
    }
    toString() {
      return "BoxPainter for " + dart.str(this[_decoration$]);
    }
  };
  (box_decoration._BoxDecorationPainter.new = function(_decoration, onChanged) {
    this[_cachedBackgroundPaint] = null;
    this[_rectForCachedBackgroundPaint] = null;
    this[_imagePainter] = null;
    this[_decoration$] = _decoration;
    if (!(_decoration !== null)) dart.assertFailed(null, I[0], 385, 14, "_decoration != null");
    box_decoration._BoxDecorationPainter.__proto__.new.call(this, onChanged);
    ;
  }).prototype = box_decoration._BoxDecorationPainter.prototype;
  dart.addTypeTests(box_decoration._BoxDecorationPainter);
  dart.addTypeCaches(box_decoration._BoxDecorationPainter);
  dart.setMethodSignature(box_decoration._BoxDecorationPainter, () => ({
    __proto__: dart.getMethods(box_decoration._BoxDecorationPainter.__proto__),
    [_getBackgroundPaint]: dart.fnType(ui.Paint, [ui.Rect, dart.nullable(ui.TextDirection)]),
    [_paintBox]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, ui.Paint, dart.nullable(ui.TextDirection)]),
    [_paintShadows]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, dart.nullable(ui.TextDirection)]),
    [_paintBackgroundColor]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, dart.nullable(ui.TextDirection)]),
    [_paintBackgroundImage]: dart.fnType(dart.void, [ui.Canvas, ui.Rect, image_provider.ImageConfiguration]),
    paint: dart.fnType(dart.void, [ui.Canvas, ui.Offset, image_provider.ImageConfiguration])
  }));
  dart.setLibraryUri(box_decoration._BoxDecorationPainter, I[1]);
  dart.setFieldSignature(box_decoration._BoxDecorationPainter, () => ({
    __proto__: dart.getFields(box_decoration._BoxDecorationPainter.__proto__),
    [_decoration$]: dart.finalFieldType(box_decoration.BoxDecoration),
    [_cachedBackgroundPaint]: dart.fieldType(dart.nullable(ui.Paint)),
    [_rectForCachedBackgroundPaint]: dart.fieldType(dart.nullable(ui.Rect)),
    [_imagePainter]: dart.fieldType(dart.nullable(decoration_image.DecorationImagePainter))
  }));
  dart.defineExtensionMethods(box_decoration._BoxDecorationPainter, ['toString']);
  dart.trackLibraries("packages/flutter/src/painting/box_decoration.dart", {
    "package:flutter/src/painting/box_decoration.dart": box_decoration
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["box_decoration.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/flutter/src/painting/box_decoration.dart.lib.js"}');
  // Exports:
  return {
    src__painting__box_decoration: box_decoration
  };
}));

//# sourceMappingURL=box_decoration.dart.lib.js.map
=======
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 16
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 8
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 4,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 4
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 36,
        [OffsetBase__dx]: 64
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_name$]: "BorderStyle.none",
        index: 0
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_style]: C[7] || CT.C7,
        [BorderSide_width]: 0,
        [BorderSide_color]: C[8] || CT.C8
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 4,
        [Radius_x]: 4
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[10] || CT.C10,
        [BorderRadius_bottomLeft]: C[10] || CT.C10,
        [BorderRadius_topRight]: C[10] || CT.C10,
        [BorderRadius_topLeft]: C[10] || CT.C10
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: rounded_rectangle_border.RoundedRectangleBorder.prototype,
        [OutlinedBorder_side]: C[6] || CT.C6,
        [RoundedRectangleBorder_borderRadius]: C[9] || CT.C9
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 46,
        [_Location_line]: 441,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "label",
        [_Location_column]: 58,
        [_Location_line]: 441,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.constList([C[13] || CT.C13, C[14] || CT.C14], widget_inspector._Location);
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[12] || CT.C12,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 441,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/material/elevated_button.dart"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [EdgeInsetsDirectional_bottom]: 0,
        [EdgeInsetsDirectional_end]: 16,
        [EdgeInsetsDirectional_top]: 0,
        [EdgeInsetsDirectional_start]: 12
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: edge_insets.EdgeInsetsDirectional.prototype,
        [EdgeInsetsDirectional_bottom]: 0,
        [EdgeInsetsDirectional_end]: 4,
        [EdgeInsetsDirectional_top]: 0,
        [EdgeInsetsDirectional_start]: 8
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 41,
        [_Location_line]: 470,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.constList([C[19] || CT.C19], widget_inspector._Location);
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[18] || CT.C18,
        [_Location_name]: null,
        [_Location_column]: 32,
        [_Location_line]: 470,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/material/elevated_button.dart"
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "mainAxisSize",
        [_Location_column]: 7,
        [_Location_line]: 469,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "children",
        [_Location_column]: 7,
        [_Location_line]: 470,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.constList([C[22] || CT.C22, C[23] || CT.C23], widget_inspector._Location);
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[21] || CT.C21,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 468,
        [_Location_file]: "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/material/elevated_button.dart"
      });
    }
  }, false);
  var C = Array(24).fill(void 0);
  var I = [
    "package:flutter/src/material/elevated_button.dart",
    "file:///D:/DevelpmentTool/flutter/packages/flutter/lib/src/material/elevated_button.dart"
  ];
  var _name = dart.privateName(ui, "_name");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var _name$ = dart.privateName(borders, "_name");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var Color_value = dart.privateName(ui, "Color.value");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var OutlinedBorder_side = dart.privateName(borders, "OutlinedBorder.side");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var RoundedRectangleBorder_borderRadius = dart.privateName(rounded_rectangle_border, "RoundedRectangleBorder.borderRadius");
  elevated_button.ElevatedButton = class ElevatedButton extends button_style_button.ButtonStyleButton {
    static styleFrom(opts) {
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let onPrimary = opts && 'onPrimary' in opts ? opts.onPrimary : null;
      let onSurface = opts && 'onSurface' in opts ? opts.onSurface : null;
      let shadowColor = opts && 'shadowColor' in opts ? opts.shadowColor : null;
      let elevation = opts && 'elevation' in opts ? opts.elevation : null;
      let textStyle = opts && 'textStyle' in opts ? opts.textStyle : null;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let minimumSize = opts && 'minimumSize' in opts ? opts.minimumSize : null;
      let fixedSize = opts && 'fixedSize' in opts ? opts.fixedSize : null;
      let side = opts && 'side' in opts ? opts.side : null;
      let shape = opts && 'shape' in opts ? opts.shape : null;
      let enabledMouseCursor = opts && 'enabledMouseCursor' in opts ? opts.enabledMouseCursor : null;
      let disabledMouseCursor = opts && 'disabledMouseCursor' in opts ? opts.disabledMouseCursor : null;
      let visualDensity = opts && 'visualDensity' in opts ? opts.visualDensity : null;
      let tapTargetSize = opts && 'tapTargetSize' in opts ? opts.tapTargetSize : null;
      let animationDuration = opts && 'animationDuration' in opts ? opts.animationDuration : null;
      let enableFeedback = opts && 'enableFeedback' in opts ? opts.enableFeedback : null;
      let alignment = opts && 'alignment' in opts ? opts.alignment : null;
      let splashFactory = opts && 'splashFactory' in opts ? opts.splashFactory : null;
      let backgroundColor = onSurface == null && primary == null ? null : new elevated_button._ElevatedButtonDefaultBackground.new(primary, onSurface);
      let foregroundColor = onSurface == null && onPrimary == null ? null : new elevated_button._ElevatedButtonDefaultForeground.new(onPrimary, onSurface);
      let overlayColor = onPrimary == null ? null : new elevated_button._ElevatedButtonDefaultOverlay.new(onPrimary);
      let elevationValue = elevation == null ? null : new elevated_button._ElevatedButtonDefaultElevation.new(elevation);
      let mouseCursor = enabledMouseCursor == null && disabledMouseCursor == null ? null : new elevated_button._ElevatedButtonDefaultMouseCursor.new(enabledMouseCursor, disabledMouseCursor);
      return new button_style.ButtonStyle.new({textStyle: material_state.MaterialStateProperty.all(T.TextStyleN(), textStyle), backgroundColor: backgroundColor, foregroundColor: foregroundColor, overlayColor: overlayColor, shadowColor: button_style_button.ButtonStyleButton.allOrNull(ui.Color, shadowColor), elevation: elevationValue, padding: button_style_button.ButtonStyleButton.allOrNull(edge_insets.EdgeInsetsGeometry, padding), minimumSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, minimumSize), fixedSize: button_style_button.ButtonStyleButton.allOrNull(ui.Size, fixedSize), side: button_style_button.ButtonStyleButton.allOrNull(borders.BorderSide, side), shape: button_style_button.ButtonStyleButton.allOrNull(borders.OutlinedBorder, shape), mouseCursor: mouseCursor, visualDensity: visualDensity, tapTargetSize: tapTargetSize, animationDuration: animationDuration, enableFeedback: enableFeedback, alignment: alignment, splashFactory: splashFactory});
    }
    defaultStyleOf(context) {
      let t0, t0$;
      let theme = theme$.Theme.of(context);
      let colorScheme = theme.colorScheme;
      let scaledPadding = button_style_button.ButtonStyleButton.scaledPadding(C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, (t0$ = (t0 = media_query.MediaQuery.maybeOf(context), t0 == null ? null : t0.textScaleFactor), t0$ == null ? 1.0 : t0$));
      return elevated_button.ElevatedButton.styleFrom({primary: colorScheme.primary, onPrimary: colorScheme.onPrimary, onSurface: colorScheme.onSurface, shadowColor: theme.shadowColor, elevation: 2.0, textStyle: theme.textTheme.button, padding: scaledPadding, minimumSize: C[4] || CT.C4, side: null, shape: C[5] || CT.C5, enabledMouseCursor: mouse_cursor.SystemMouseCursors.click, disabledMouseCursor: mouse_cursor.SystemMouseCursors.forbidden, visualDensity: theme.visualDensity, tapTargetSize: theme.materialTapTargetSize, animationDuration: constants.kThemeChangeDuration, enableFeedback: true, alignment: alignment.Alignment.center, splashFactory: ink_ripple.InkRipple.splashFactory});
    }
    themeStyleOf(context) {
      return elevated_button_theme.ElevatedButtonTheme.of(context).style;
    }
  };
  (elevated_button.ElevatedButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : false;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[0] || CT.C0;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    elevated_button.ElevatedButton.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, style: style, focusNode: focusNode, autofocus: autofocus, clipBehavior: clipBehavior, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = elevated_button.ElevatedButton.prototype;
  dart.addTypeTests(elevated_button.ElevatedButton);
  dart.addTypeCaches(elevated_button.ElevatedButton);
  dart.setMethodSignature(elevated_button.ElevatedButton, () => ({
    __proto__: dart.getMethods(elevated_button.ElevatedButton.__proto__),
    defaultStyleOf: dart.fnType(button_style.ButtonStyle, [framework.BuildContext]),
    themeStyleOf: dart.fnType(dart.nullable(button_style.ButtonStyle), [framework.BuildContext])
  }));
  dart.setLibraryUri(elevated_button.ElevatedButton, I[0]);
  const MaterialStateProperty_Diagnosticable$36 = class MaterialStateProperty_Diagnosticable extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {};
  (MaterialStateProperty_Diagnosticable$36.new = function() {
  }).prototype = MaterialStateProperty_Diagnosticable$36.prototype;
  dart.applyMixin(MaterialStateProperty_Diagnosticable$36, diagnostics.Diagnosticable);
  elevated_button._ElevatedButtonDefaultBackground = class _ElevatedButtonDefaultBackground extends MaterialStateProperty_Diagnosticable$36 {
    resolve(states) {
      let t0;
      if (states.contains(material_state.MaterialState.disabled)) {
        t0 = this.onSurface;
        return t0 == null ? null : t0.withOpacity(0.12);
      }
      return this.primary;
    }
  };
  (elevated_button._ElevatedButtonDefaultBackground.new = function(primary, onSurface) {
    this.primary = primary;
    this.onSurface = onSurface;
    ;
  }).prototype = elevated_button._ElevatedButtonDefaultBackground.prototype;
  dart.addTypeTests(elevated_button._ElevatedButtonDefaultBackground);
  dart.addTypeCaches(elevated_button._ElevatedButtonDefaultBackground);
  dart.setMethodSignature(elevated_button._ElevatedButtonDefaultBackground, () => ({
    __proto__: dart.getMethods(elevated_button._ElevatedButtonDefaultBackground.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(elevated_button._ElevatedButtonDefaultBackground, I[0]);
  dart.setFieldSignature(elevated_button._ElevatedButtonDefaultBackground, () => ({
    __proto__: dart.getFields(elevated_button._ElevatedButtonDefaultBackground.__proto__),
    primary: dart.finalFieldType(dart.nullable(ui.Color)),
    onSurface: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  const MaterialStateProperty_Diagnosticable$36$ = class MaterialStateProperty_Diagnosticable extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {};
  (MaterialStateProperty_Diagnosticable$36$.new = function() {
  }).prototype = MaterialStateProperty_Diagnosticable$36$.prototype;
  dart.applyMixin(MaterialStateProperty_Diagnosticable$36$, diagnostics.Diagnosticable);
  elevated_button._ElevatedButtonDefaultForeground = class _ElevatedButtonDefaultForeground extends MaterialStateProperty_Diagnosticable$36$ {
    resolve(states) {
      let t0;
      if (states.contains(material_state.MaterialState.disabled)) {
        t0 = this.onSurface;
        return t0 == null ? null : t0.withOpacity(0.38);
      }
      return this.onPrimary;
    }
  };
  (elevated_button._ElevatedButtonDefaultForeground.new = function(onPrimary, onSurface) {
    this.onPrimary = onPrimary;
    this.onSurface = onSurface;
    ;
  }).prototype = elevated_button._ElevatedButtonDefaultForeground.prototype;
  dart.addTypeTests(elevated_button._ElevatedButtonDefaultForeground);
  dart.addTypeCaches(elevated_button._ElevatedButtonDefaultForeground);
  dart.setMethodSignature(elevated_button._ElevatedButtonDefaultForeground, () => ({
    __proto__: dart.getMethods(elevated_button._ElevatedButtonDefaultForeground.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(elevated_button._ElevatedButtonDefaultForeground, I[0]);
  dart.setFieldSignature(elevated_button._ElevatedButtonDefaultForeground, () => ({
    __proto__: dart.getFields(elevated_button._ElevatedButtonDefaultForeground.__proto__),
    onPrimary: dart.finalFieldType(dart.nullable(ui.Color)),
    onSurface: dart.finalFieldType(dart.nullable(ui.Color))
  }));
  const MaterialStateProperty_Diagnosticable$36$0 = class MaterialStateProperty_Diagnosticable extends material_state.MaterialStateProperty$(dart.nullable(ui.Color)) {};
  (MaterialStateProperty_Diagnosticable$36$0.new = function() {
  }).prototype = MaterialStateProperty_Diagnosticable$36$0.prototype;
  dart.applyMixin(MaterialStateProperty_Diagnosticable$36$0, diagnostics.Diagnosticable);
  elevated_button._ElevatedButtonDefaultOverlay = class _ElevatedButtonDefaultOverlay extends MaterialStateProperty_Diagnosticable$36$0 {
    resolve(states) {
      if (states.contains(material_state.MaterialState.hovered)) return this.onPrimary.withOpacity(0.08);
      if (states.contains(material_state.MaterialState.focused) || states.contains(material_state.MaterialState.pressed)) return this.onPrimary.withOpacity(0.24);
      return null;
    }
  };
  (elevated_button._ElevatedButtonDefaultOverlay.new = function(onPrimary) {
    this.onPrimary = onPrimary;
    ;
  }).prototype = elevated_button._ElevatedButtonDefaultOverlay.prototype;
  dart.addTypeTests(elevated_button._ElevatedButtonDefaultOverlay);
  dart.addTypeCaches(elevated_button._ElevatedButtonDefaultOverlay);
  dart.setMethodSignature(elevated_button._ElevatedButtonDefaultOverlay, () => ({
    __proto__: dart.getMethods(elevated_button._ElevatedButtonDefaultOverlay.__proto__),
    resolve: dart.fnType(dart.nullable(ui.Color), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(elevated_button._ElevatedButtonDefaultOverlay, I[0]);
  dart.setFieldSignature(elevated_button._ElevatedButtonDefaultOverlay, () => ({
    __proto__: dart.getFields(elevated_button._ElevatedButtonDefaultOverlay.__proto__),
    onPrimary: dart.finalFieldType(ui.Color)
  }));
  const MaterialStateProperty_Diagnosticable$36$1 = class MaterialStateProperty_Diagnosticable extends material_state.MaterialStateProperty$(core.double) {};
  (MaterialStateProperty_Diagnosticable$36$1.new = function() {
  }).prototype = MaterialStateProperty_Diagnosticable$36$1.prototype;
  dart.applyMixin(MaterialStateProperty_Diagnosticable$36$1, diagnostics.Diagnosticable);
  elevated_button._ElevatedButtonDefaultElevation = class _ElevatedButtonDefaultElevation extends MaterialStateProperty_Diagnosticable$36$1 {
    resolve(states) {
      if (states.contains(material_state.MaterialState.disabled)) return 0.0;
      if (states.contains(material_state.MaterialState.hovered)) return this.elevation + 2;
      if (states.contains(material_state.MaterialState.focused)) return this.elevation + 2;
      if (states.contains(material_state.MaterialState.pressed)) return this.elevation + 6;
      return this.elevation;
    }
  };
  (elevated_button._ElevatedButtonDefaultElevation.new = function(elevation) {
    this.elevation = elevation;
    ;
  }).prototype = elevated_button._ElevatedButtonDefaultElevation.prototype;
  dart.addTypeTests(elevated_button._ElevatedButtonDefaultElevation);
  dart.addTypeCaches(elevated_button._ElevatedButtonDefaultElevation);
  dart.setMethodSignature(elevated_button._ElevatedButtonDefaultElevation, () => ({
    __proto__: dart.getMethods(elevated_button._ElevatedButtonDefaultElevation.__proto__),
    resolve: dart.fnType(core.double, [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(elevated_button._ElevatedButtonDefaultElevation, I[0]);
  dart.setFieldSignature(elevated_button._ElevatedButtonDefaultElevation, () => ({
    __proto__: dart.getFields(elevated_button._ElevatedButtonDefaultElevation.__proto__),
    elevation: dart.finalFieldType(core.double)
  }));
  const MaterialStateProperty_Diagnosticable$36$2 = class MaterialStateProperty_Diagnosticable extends material_state.MaterialStateProperty$(dart.nullable(mouse_cursor.MouseCursor)) {};
  (MaterialStateProperty_Diagnosticable$36$2.new = function() {
  }).prototype = MaterialStateProperty_Diagnosticable$36$2.prototype;
  dart.applyMixin(MaterialStateProperty_Diagnosticable$36$2, diagnostics.Diagnosticable);
  elevated_button._ElevatedButtonDefaultMouseCursor = class _ElevatedButtonDefaultMouseCursor extends MaterialStateProperty_Diagnosticable$36$2 {
    resolve(states) {
      if (states.contains(material_state.MaterialState.disabled)) return this.disabledCursor;
      return this.enabledCursor;
    }
  };
  (elevated_button._ElevatedButtonDefaultMouseCursor.new = function(enabledCursor, disabledCursor) {
    this.enabledCursor = enabledCursor;
    this.disabledCursor = disabledCursor;
    ;
  }).prototype = elevated_button._ElevatedButtonDefaultMouseCursor.prototype;
  dart.addTypeTests(elevated_button._ElevatedButtonDefaultMouseCursor);
  dart.addTypeCaches(elevated_button._ElevatedButtonDefaultMouseCursor);
  dart.setMethodSignature(elevated_button._ElevatedButtonDefaultMouseCursor, () => ({
    __proto__: dart.getMethods(elevated_button._ElevatedButtonDefaultMouseCursor.__proto__),
    resolve: dart.fnType(dart.nullable(mouse_cursor.MouseCursor), [core.Set$(material_state.MaterialState)])
  }));
  dart.setLibraryUri(elevated_button._ElevatedButtonDefaultMouseCursor, I[0]);
  dart.setFieldSignature(elevated_button._ElevatedButtonDefaultMouseCursor, () => ({
    __proto__: dart.getFields(elevated_button._ElevatedButtonDefaultMouseCursor.__proto__),
    enabledCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor)),
    disabledCursor: dart.finalFieldType(dart.nullable(mouse_cursor.MouseCursor))
  }));
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var EdgeInsetsDirectional_bottom = dart.privateName(edge_insets, "EdgeInsetsDirectional.bottom");
  var EdgeInsetsDirectional_end = dart.privateName(edge_insets, "EdgeInsetsDirectional.end");
  var EdgeInsetsDirectional_top = dart.privateName(edge_insets, "EdgeInsetsDirectional.top");
  var EdgeInsetsDirectional_start = dart.privateName(edge_insets, "EdgeInsetsDirectional.start");
  elevated_button._ElevatedButtonWithIcon = class _ElevatedButtonWithIcon extends elevated_button.ElevatedButton {
    defaultStyleOf(context) {
      let t0, t0$;
      let scaledPadding = button_style_button.ButtonStyleButton.scaledPadding(C[15] || CT.C15, C[2] || CT.C2, C[16] || CT.C16, (t0$ = (t0 = media_query.MediaQuery.maybeOf(context), t0 == null ? null : t0.textScaleFactor), t0$ == null ? 1.0 : t0$));
      return super.defaultStyleOf(context).copyWith({padding: material_state.MaterialStateProperty.all(edge_insets.EdgeInsetsGeometry, scaledPadding)});
    }
  };
  (elevated_button._ElevatedButtonWithIcon.new = function(opts) {
    let t0, t0$;
    let key = opts && 'key' in opts ? opts.key : null;
    let onPressed = opts && 'onPressed' in opts ? opts.onPressed : null;
    let onLongPress = opts && 'onLongPress' in opts ? opts.onLongPress : null;
    let style = opts && 'style' in opts ? opts.style : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    if (!(icon !== null)) dart.assertFailed(null, I[1], 431, 15, "icon != null");
    if (!(label !== null)) dart.assertFailed(null, I[1], 432, 15, "label != null");
    elevated_button._ElevatedButtonWithIcon.__proto__.new.call(this, {key: key, onPressed: onPressed, onLongPress: onLongPress, style: style, focusNode: focusNode, autofocus: (t0 = autofocus, t0 == null ? false : t0), clipBehavior: (t0$ = clipBehavior, t0$ == null ? ui.Clip.none : t0$), child: new elevated_button._ElevatedButtonWithIconChild.new({icon: icon, label: label, $creationLocationd_0dea112b090073317d4: C[11] || CT.C11}), $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = elevated_button._ElevatedButtonWithIcon.prototype;
  dart.addTypeTests(elevated_button._ElevatedButtonWithIcon);
  dart.addTypeCaches(elevated_button._ElevatedButtonWithIcon);
  dart.setLibraryUri(elevated_button._ElevatedButtonWithIcon, I[0]);
  var label$ = dart.privateName(elevated_button, "_ElevatedButtonWithIconChild.label");
  var icon$ = dart.privateName(elevated_button, "_ElevatedButtonWithIconChild.icon");
  elevated_button._ElevatedButtonWithIconChild = class _ElevatedButtonWithIconChild extends framework.StatelessWidget {
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get icon() {
      return this[icon$];
    }
    set icon(value) {
      super.icon = value;
    }
    build(context) {
      let t0, t0$;
      let scale = (t0$ = (t0 = media_query.MediaQuery.maybeOf(context), t0 == null ? null : t0.textScaleFactor), t0$ == null ? 1.0 : t0$);
      let gap = scale <= 1 ? 8.0 : dart.nullCheck(ui.lerpDouble(8, 4, math.min(core.double, scale - 1, 1.0)));
      return new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([this.icon, new basic.SizedBox.new({width: gap, $creationLocationd_0dea112b090073317d4: C[17] || CT.C17}), this.label]), $creationLocationd_0dea112b090073317d4: C[20] || CT.C20});
    }
  };
  (elevated_button._ElevatedButtonWithIconChild.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[label$] = label;
    this[icon$] = icon;
    elevated_button._ElevatedButtonWithIconChild.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = elevated_button._ElevatedButtonWithIconChild.prototype;
  dart.addTypeTests(elevated_button._ElevatedButtonWithIconChild);
  dart.addTypeCaches(elevated_button._ElevatedButtonWithIconChild);
  dart.setMethodSignature(elevated_button._ElevatedButtonWithIconChild, () => ({
    __proto__: dart.getMethods(elevated_button._ElevatedButtonWithIconChild.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(elevated_button._ElevatedButtonWithIconChild, I[0]);
  dart.setFieldSignature(elevated_button._ElevatedButtonWithIconChild, () => ({
    __proto__: dart.getFields(elevated_button._ElevatedButtonWithIconChild.__proto__),
    label: dart.finalFieldType(framework.Widget),
    icon: dart.finalFieldType(framework.Widget)
  }));
  dart.trackLibraries("packages/flutter/src/material/elevated_button.dart", {
    "package:flutter/src/material/elevated_button.dart": elevated_button
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["elevated_button.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/flutter/src/material/elevated_button.dart.lib.js"}');
  // Exports:
  return {
    src__material__elevated_button: elevated_button
  };
}));

//# sourceMappingURL=elevated_button.dart.lib.js.map
>>>>>>> AUg2
